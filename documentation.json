{
  "pipes": [],
  "interfaces": [
    {
      "name": "IAccordion",
      "id": "interface-IAccordion-817c012fe9c100f0594f8f89dc732942",
      "file": "src/app/models/static-pages.model.ts",
      "type": "interface",
      "sourceCode": "export interface IHTMLText {\n  content: string;\n}\n\nexport interface ISimpleCard {\n  iconURL: string;\n  url: string;\n  title: string;\n  color?: string;\n}\n\nexport interface IComplexCard {\n  iconURL: string;\n  url: string;\n  title: string;\n  subtitle: string;\n  color?: string;\n  description: {\n    title: string,\n    text: string,\n  };\n}\n\nexport interface IAccordion{\n  question: string;\n  answer: string;\n  opened: boolean;\n}\n",
      "properties": [
        {
          "name": "answer",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "opened",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "question",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IAddressItem",
      "id": "interface-IAddressItem-b5bdfeb33384222676445b7e877daa19",
      "file": "src/app/models/address.model.ts",
      "type": "interface",
      "sourceCode": "export interface IAddressLdV{\n  name: string;\n}\n\nexport interface IAddressItem{\n  _id?: string,\n  name: string,\n  type_address: string,\n  address: string,\n  department: IAddressLdV,\n  province: IAddressLdV,\n  district: IAddressLdV,\n  reference: string,\n  cellphone: string,\n  checked?: boolean,\n  delivery_price?: number\n}\n",
      "properties": [
        {
          "name": "_id",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "address",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "cellphone",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "checked",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 15
        },
        {
          "name": "delivery_price",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 16
        },
        {
          "name": "department",
          "type": "IAddressLdV",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "district",
          "type": "IAddressLdV",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "province",
          "type": "IAddressLdV",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "reference",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "type_address",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IAddressLdV",
      "id": "interface-IAddressLdV-b5bdfeb33384222676445b7e877daa19",
      "file": "src/app/models/address.model.ts",
      "type": "interface",
      "sourceCode": "export interface IAddressLdV{\n  name: string;\n}\n\nexport interface IAddressItem{\n  _id?: string,\n  name: string,\n  type_address: string,\n  address: string,\n  department: IAddressLdV,\n  province: IAddressLdV,\n  district: IAddressLdV,\n  reference: string,\n  cellphone: string,\n  checked?: boolean,\n  delivery_price?: number\n}\n",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IBanner",
      "id": "interface-IBanner-9a7d7426f757d17c9618153cc0552ff9",
      "file": "src/app/models/banner.model.ts",
      "type": "interface",
      "sourceCode": "export interface IBanner {\n  title: string;\n  description: string;\n  image_cover: string;\n  friendly_url: string;\n}\n",
      "properties": [
        {
          "name": "description",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "friendly_url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "image_cover",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IBioSecurityResolver",
      "id": "interface-IBioSecurityResolver-f10af4ea6d11e93295b66c5a4272010a",
      "file": "src/app/resolvers/static-pages/bio-security.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BioSecurityResolver implements Resolve<IBioSecurityResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<IBioSecurityResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('bio_security'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface IBioSecurityResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IBrand",
      "id": "interface-IBrand-9eb20ee83dc8bc0ecdee7914b898e70e",
      "file": "src/app/models/brand.model.ts",
      "type": "interface",
      "sourceCode": "export interface IBrand{\n\n}\n",
      "properties": [],
      "indexSignatures": [],
      "methods": []
    },
    {
      "name": "IBrandBackend",
      "id": "interface-IBrandBackend-e95e4548f8b4cfc0ceec59f267fb6a32",
      "file": "src/app/services/category.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  category: ICategoryBackend;\n  urlAttachment = '';\n\n  constructor(private api: ApiService) {}\n\n  getCategoryList(): Observable<ICategoryListBackend> {\n    return this.api.get('category/list-category-full/tienda');\n  }\n\n  getCategoryElement(category: string): Observable<ICategoryElementBackend> {\n    //  ask what's with the null?\n    return this.api.get(`category/category-list-element/${category}/null/null`);\n  }\n}\n\nexport interface ICategoryListBackend {\n  data: Array<ICategoryBackend>;\n  image_category: string;\n  url_attachment: string;\n}\n\nexport interface ICategoryBackend {\n  name: string;\n  friendly_url: string;\n  filters: Array<IFilterBackend>;\n  brands: any;\n  url_attachment: string;\n  image_banner: string;\n  image_link: string;\n  _id: string;\n}\n\nexport interface IFilterBackend {\n  filter: string;\n  values: Array<string>;\n  _id: string;\n}\n\nexport interface ICategoryElementBackend {\n  entity: ICategoryBackend;\n  brands: IBrandListBackend;\n  url_attachment: string;\n}\n\nexport interface IBrandListBackend {\n  data: Array<IBrandBackend>;\n}\n\nexport interface IBrandBackend {\n  _id: string;\n  name: string;\n  description: string;\n  friendly_url: string;\n  image_link: string;\n  image_logo_link: string;\n  image_banner: string;\n  image_logo_banner: string;\n}\n",
      "properties": [
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 58
        },
        {
          "name": "description",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 60
        },
        {
          "name": "friendly_url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 61
        },
        {
          "name": "image_banner",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "image_link",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 62
        },
        {
          "name": "image_logo_banner",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 65
        },
        {
          "name": "image_logo_link",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 63
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 59
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IBrandListBackend",
      "id": "interface-IBrandListBackend-e95e4548f8b4cfc0ceec59f267fb6a32",
      "file": "src/app/services/category.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  category: ICategoryBackend;\n  urlAttachment = '';\n\n  constructor(private api: ApiService) {}\n\n  getCategoryList(): Observable<ICategoryListBackend> {\n    return this.api.get('category/list-category-full/tienda');\n  }\n\n  getCategoryElement(category: string): Observable<ICategoryElementBackend> {\n    //  ask what's with the null?\n    return this.api.get(`category/category-list-element/${category}/null/null`);\n  }\n}\n\nexport interface ICategoryListBackend {\n  data: Array<ICategoryBackend>;\n  image_category: string;\n  url_attachment: string;\n}\n\nexport interface ICategoryBackend {\n  name: string;\n  friendly_url: string;\n  filters: Array<IFilterBackend>;\n  brands: any;\n  url_attachment: string;\n  image_banner: string;\n  image_link: string;\n  _id: string;\n}\n\nexport interface IFilterBackend {\n  filter: string;\n  values: Array<string>;\n  _id: string;\n}\n\nexport interface ICategoryElementBackend {\n  entity: ICategoryBackend;\n  brands: IBrandListBackend;\n  url_attachment: string;\n}\n\nexport interface IBrandListBackend {\n  data: Array<IBrandBackend>;\n}\n\nexport interface IBrandBackend {\n  _id: string;\n  name: string;\n  description: string;\n  friendly_url: string;\n  image_link: string;\n  image_logo_link: string;\n  image_banner: string;\n  image_logo_banner: string;\n}\n",
      "properties": [
        {
          "name": "data",
          "type": "Array<IBrandBackend>",
          "optional": false,
          "description": "",
          "line": 54
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IBrandPage",
      "id": "interface-IBrandPage-b33a717a8adbea2eb9760c98e946f2c9",
      "file": "src/app/resolvers/brand.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IProductItem } from '../models/product.model';\nimport { ProductService } from '../services/product.service';\nimport {\n  CategoryService,\n  IBrandBackend,\n  ICategoryBackend,\n} from '../services/category.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BrandResolver implements Resolve<IBrandPage> {\n  constructor(private catService: CategoryService) {}\n  resolve(route: ActivatedRouteSnapshot): Observable<IBrandPage> {\n    const friendlyUrl = route.paramMap.get('friendlyUrl');\n    const brandFriendlyUrl = route.paramMap.get('friendlyUrl');\n    return zip(this.catService.getCategoryElement(friendlyUrl)).pipe(\n      map(([categoryElement]) => {\n        const catPage: IBrandPage = {\n          category: categoryElement.entity,\n          _brands: categoryElement.brands.data,\n          isBrandPage: true,\n        };\n        this.catService.urlAttachment = categoryElement.url_attachment;\n        return catPage;\n      })\n    );\n  }\n}\n\nexport interface IBrandPage {\n  category: ICategoryBackend;\n  _brands: IBrandBackend[];\n  isBrandPage: boolean;\n}\n",
      "properties": [
        {
          "name": "_brands",
          "type": "IBrandBackend[]",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "category",
          "type": "ICategoryBackend",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "isBrandPage",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICart",
      "id": "interface-ICart-d7423e0ee7f4ef1958c8d65de788f176",
      "file": "src/app/models/cart.model.ts",
      "type": "interface",
      "sourceCode": "import { ICartItem } from \"./cart-item.model\";\n\nexport interface ICart{\n  infoProducts: Array<ICartItem>;\n  subtotal: number\n}\n",
      "properties": [
        {
          "name": "infoProducts",
          "type": "Array<ICartItem>",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "subtotal",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICartItem",
      "id": "interface-ICartItem-0c1cba3e193f9f1a1831ab66fcb422be",
      "file": "src/app/models/cart-item.model.ts",
      "type": "interface",
      "sourceCode": "import { IProductDetail } from \"./product.model\";\n\nexport interface ICartItem{\n  image_product: string;\n  price: number;\n  total_price: number;\n  quantity: number;\n  name_product: string;\n  _id: string;\n  id_product: string;\n  info_product?: IProductDetail;\n}\n",
      "properties": [
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "id_product",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "image_product",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "info_product",
          "type": "IProductDetail",
          "optional": true,
          "description": "",
          "line": 11
        },
        {
          "name": "name_product",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "quantity",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "total_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICategory",
      "id": "interface-ICategory-e4409ab13751ab17a8d6b5cd0f6e75b6",
      "file": "src/app/models/category.model.ts",
      "type": "interface",
      "sourceCode": "export interface ICategory {\n  name: string;\n  subcategoryList?: Array<ICategory>;\n}\n\nexport type CategoryListType = 'carousel' | 'grid';\nexport type CategoryBrandListType = 'carousel' | 'grid';\n",
      "properties": [
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "subcategoryList",
          "type": "Array<ICategory>",
          "optional": true,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICategoryBackend",
      "id": "interface-ICategoryBackend-e95e4548f8b4cfc0ceec59f267fb6a32",
      "file": "src/app/services/category.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  category: ICategoryBackend;\n  urlAttachment = '';\n\n  constructor(private api: ApiService) {}\n\n  getCategoryList(): Observable<ICategoryListBackend> {\n    return this.api.get('category/list-category-full/tienda');\n  }\n\n  getCategoryElement(category: string): Observable<ICategoryElementBackend> {\n    //  ask what's with the null?\n    return this.api.get(`category/category-list-element/${category}/null/null`);\n  }\n}\n\nexport interface ICategoryListBackend {\n  data: Array<ICategoryBackend>;\n  image_category: string;\n  url_attachment: string;\n}\n\nexport interface ICategoryBackend {\n  name: string;\n  friendly_url: string;\n  filters: Array<IFilterBackend>;\n  brands: any;\n  url_attachment: string;\n  image_banner: string;\n  image_link: string;\n  _id: string;\n}\n\nexport interface IFilterBackend {\n  filter: string;\n  values: Array<string>;\n  _id: string;\n}\n\nexport interface ICategoryElementBackend {\n  entity: ICategoryBackend;\n  brands: IBrandListBackend;\n  url_attachment: string;\n}\n\nexport interface IBrandListBackend {\n  data: Array<IBrandBackend>;\n}\n\nexport interface IBrandBackend {\n  _id: string;\n  name: string;\n  description: string;\n  friendly_url: string;\n  image_link: string;\n  image_logo_link: string;\n  image_banner: string;\n  image_logo_banner: string;\n}\n",
      "properties": [
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "brands",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "filters",
          "type": "Array<IFilterBackend>",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "friendly_url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "image_banner",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "image_link",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "url_attachment",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 35
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICategoryElementBackend",
      "id": "interface-ICategoryElementBackend-e95e4548f8b4cfc0ceec59f267fb6a32",
      "file": "src/app/services/category.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  category: ICategoryBackend;\n  urlAttachment = '';\n\n  constructor(private api: ApiService) {}\n\n  getCategoryList(): Observable<ICategoryListBackend> {\n    return this.api.get('category/list-category-full/tienda');\n  }\n\n  getCategoryElement(category: string): Observable<ICategoryElementBackend> {\n    //  ask what's with the null?\n    return this.api.get(`category/category-list-element/${category}/null/null`);\n  }\n}\n\nexport interface ICategoryListBackend {\n  data: Array<ICategoryBackend>;\n  image_category: string;\n  url_attachment: string;\n}\n\nexport interface ICategoryBackend {\n  name: string;\n  friendly_url: string;\n  filters: Array<IFilterBackend>;\n  brands: any;\n  url_attachment: string;\n  image_banner: string;\n  image_link: string;\n  _id: string;\n}\n\nexport interface IFilterBackend {\n  filter: string;\n  values: Array<string>;\n  _id: string;\n}\n\nexport interface ICategoryElementBackend {\n  entity: ICategoryBackend;\n  brands: IBrandListBackend;\n  url_attachment: string;\n}\n\nexport interface IBrandListBackend {\n  data: Array<IBrandBackend>;\n}\n\nexport interface IBrandBackend {\n  _id: string;\n  name: string;\n  description: string;\n  friendly_url: string;\n  image_link: string;\n  image_logo_link: string;\n  image_banner: string;\n  image_logo_banner: string;\n}\n",
      "properties": [
        {
          "name": "brands",
          "type": "IBrandListBackend",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "entity",
          "type": "ICategoryBackend",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "url_attachment",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 50
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICategoryGroup",
      "id": "interface-ICategoryGroup-55d959518d72258bf4bfe232579b5a47",
      "file": "src/app/models/category-group.model.ts",
      "type": "interface",
      "sourceCode": "import { ICategory } from \"./category.model\";\nexport interface ICategoryGroup{\n  name: string;\n  categoryList: Array<ICategory>;\n}\n",
      "properties": [
        {
          "name": "categoryList",
          "type": "Array<ICategory>",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICategoryListBackend",
      "id": "interface-ICategoryListBackend-e95e4548f8b4cfc0ceec59f267fb6a32",
      "file": "src/app/services/category.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  category: ICategoryBackend;\n  urlAttachment = '';\n\n  constructor(private api: ApiService) {}\n\n  getCategoryList(): Observable<ICategoryListBackend> {\n    return this.api.get('category/list-category-full/tienda');\n  }\n\n  getCategoryElement(category: string): Observable<ICategoryElementBackend> {\n    //  ask what's with the null?\n    return this.api.get(`category/category-list-element/${category}/null/null`);\n  }\n}\n\nexport interface ICategoryListBackend {\n  data: Array<ICategoryBackend>;\n  image_category: string;\n  url_attachment: string;\n}\n\nexport interface ICategoryBackend {\n  name: string;\n  friendly_url: string;\n  filters: Array<IFilterBackend>;\n  brands: any;\n  url_attachment: string;\n  image_banner: string;\n  image_link: string;\n  _id: string;\n}\n\nexport interface IFilterBackend {\n  filter: string;\n  values: Array<string>;\n  _id: string;\n}\n\nexport interface ICategoryElementBackend {\n  entity: ICategoryBackend;\n  brands: IBrandListBackend;\n  url_attachment: string;\n}\n\nexport interface IBrandListBackend {\n  data: Array<IBrandBackend>;\n}\n\nexport interface IBrandBackend {\n  _id: string;\n  name: string;\n  description: string;\n  friendly_url: string;\n  image_link: string;\n  image_logo_link: string;\n  image_banner: string;\n  image_logo_banner: string;\n}\n",
      "properties": [
        {
          "name": "data",
          "type": "Array<ICategoryBackend>",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "image_category",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "url_attachment",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICategoryPage",
      "id": "interface-ICategoryPage-edb4a6e5c3a1e59d381b9ad486953486",
      "file": "src/app/resolvers/category.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IProductItem } from '../models/product.model';\nimport { ProductService } from '../services/product.service';\nimport {\n  CategoryService,\n  IBrandBackend,\n  ICategoryBackend,\n} from '../services/category.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryResolver implements Resolve<ICategoryPage> {\n  constructor(private catService: CategoryService) {}\n  resolve(route: ActivatedRouteSnapshot): Observable<ICategoryPage> {\n    const friendlyUrl = route.paramMap.get('friendlyUrl');\n    return zip(this.catService.getCategoryElement(friendlyUrl)).pipe(\n      map(([categoryElement]) => {\n        const catPage: ICategoryPage = {\n          category: categoryElement.entity,\n          _brands: categoryElement.brands.data,\n          isBrandPage: false,\n        };\n        this.catService.urlAttachment = categoryElement.url_attachment;\n        return catPage;\n      })\n    );\n  }\n}\n\nexport interface ICategoryPage {\n  category: ICategoryBackend;\n  _brands: IBrandBackend[];\n  isBrandPage: boolean;\n}\n",
      "properties": [
        {
          "name": "_brands",
          "type": "IBrandBackend[]",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "category",
          "type": "ICategoryBackend",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "isBrandPage",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 37
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IComplaintsBookResolver",
      "id": "interface-IComplaintsBookResolver-e0b9d010b23165c65db09249845e4fc7",
      "file": "src/app/resolvers/static-pages/complaints-book.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComplaintsBookResolver implements Resolve<IComplaintsBookResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<IComplaintsBookResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('complaints_book'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface IComplaintsBookResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IComplexCard",
      "id": "interface-IComplexCard-817c012fe9c100f0594f8f89dc732942",
      "file": "src/app/models/static-pages.model.ts",
      "type": "interface",
      "sourceCode": "export interface IHTMLText {\n  content: string;\n}\n\nexport interface ISimpleCard {\n  iconURL: string;\n  url: string;\n  title: string;\n  color?: string;\n}\n\nexport interface IComplexCard {\n  iconURL: string;\n  url: string;\n  title: string;\n  subtitle: string;\n  color?: string;\n  description: {\n    title: string,\n    text: string,\n  };\n}\n\nexport interface IAccordion{\n  question: string;\n  answer: string;\n  opened: boolean;\n}\n",
      "properties": [
        {
          "name": "color",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 17
        },
        {
          "name": "description",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "iconURL",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "subtitle",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IContactUsResolver",
      "id": "interface-IContactUsResolver-b5f8cd777e137c2813bce1cf6ea3ff2c",
      "file": "src/app/resolvers/static-pages/contact-us.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactUsResolver implements Resolve<IContactUsResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<IContactUsResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('contact_us'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface IContactUsResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ICustomerServiceResolver",
      "id": "interface-ICustomerServiceResolver-d2795fd13385a72821ec206a0ac7e9fe",
      "file": "src/app/resolvers/static-pages/customer-service.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerServiceResolver implements Resolve<ICustomerServiceResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<ICustomerServiceResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('customer_service'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface ICustomerServiceResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IDeliveryServiceResolver",
      "id": "interface-IDeliveryServiceResolver-482fe7623d6c7d5cadfdb2d0fe67426a",
      "file": "src/app/resolvers/static-pages/delivery-service.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeliveryServiceResolver implements Resolve<IDeliveryServiceResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<IDeliveryServiceResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('delivery_service'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface IDeliveryServiceResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IFAQResolver",
      "id": "interface-IFAQResolver-6e11fcce799300ba7d80cbb58da3fdbc",
      "file": "src/app/resolvers/static-pages/faq.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FAQResolver implements Resolve<IFAQResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<IFAQResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('faq'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface IFAQResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IFilter",
      "id": "interface-IFilter-13cd6087a6a28e00daa8866a1a009142",
      "file": "src/app/models/filter.model.ts",
      "type": "interface",
      "sourceCode": "export interface IFilter {\n  filter: string;\n  name: string;\n}\n",
      "properties": [
        {
          "name": "filter",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IFilterBackend",
      "id": "interface-IFilterBackend-e95e4548f8b4cfc0ceec59f267fb6a32",
      "file": "src/app/services/category.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  category: ICategoryBackend;\n  urlAttachment = '';\n\n  constructor(private api: ApiService) {}\n\n  getCategoryList(): Observable<ICategoryListBackend> {\n    return this.api.get('category/list-category-full/tienda');\n  }\n\n  getCategoryElement(category: string): Observable<ICategoryElementBackend> {\n    //  ask what's with the null?\n    return this.api.get(`category/category-list-element/${category}/null/null`);\n  }\n}\n\nexport interface ICategoryListBackend {\n  data: Array<ICategoryBackend>;\n  image_category: string;\n  url_attachment: string;\n}\n\nexport interface ICategoryBackend {\n  name: string;\n  friendly_url: string;\n  filters: Array<IFilterBackend>;\n  brands: any;\n  url_attachment: string;\n  image_banner: string;\n  image_link: string;\n  _id: string;\n}\n\nexport interface IFilterBackend {\n  filter: string;\n  values: Array<string>;\n  _id: string;\n}\n\nexport interface ICategoryElementBackend {\n  entity: ICategoryBackend;\n  brands: IBrandListBackend;\n  url_attachment: string;\n}\n\nexport interface IBrandListBackend {\n  data: Array<IBrandBackend>;\n}\n\nexport interface IBrandBackend {\n  _id: string;\n  name: string;\n  description: string;\n  friendly_url: string;\n  image_link: string;\n  image_logo_link: string;\n  image_banner: string;\n  image_logo_banner: string;\n}\n",
      "properties": [
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "filter",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "values",
          "type": "Array<string>",
          "optional": false,
          "description": "",
          "line": 43
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IFilterQueryBackend",
      "id": "interface-IFilterQueryBackend-3d5739fd9313e970637d5f4ce183914d",
      "file": "src/app/services/product.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { products } from '../mockups/product.mockup';\nimport { IProductItem } from '../models/product.model';\nimport { IBrandBackend } from './category.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(private api: ApiService) {}\n\n  getFeaturedProducts(): Observable<IProductItem[]> {\n    // return this.api.get('category-group/list');\n    return of(products);\n  }\n\n  getProducts(filters: any, categoryId: string): Observable<IProductBackend[]> {\n    const params = this.api.createHttpParams({\n      data: { filters, category_id: categoryId },\n    });\n    console.log('query filters', filters);\n    return this.api.get(`product/category-filter`, params);\n  }\n}\n\nexport interface IProductBackend {\n  _id: string;\n  featured: boolean;\n  friendly_url: string;\n  image_cover: string;\n  image_logo_banner: string;\n  images_link: string[];\n  is_pack: boolean;\n  is_variation: boolean;\n  last_unit: boolean;\n  name: string;\n  title: string;\n  price: number;\n  special_price: number;\n  campaign_price: number;\n  stock: number;\n  brand: IBrandBackend;\n}\n\nexport interface IFilterQueryBackend {\n  value:\n    | IFilterQueryValueToggle\n    | IFilterQueryValueRange\n    | IFilterQueryValueBoolean;\n  bindedTo?: 'marca' | 'precio' | '';\n  // bindedTo (''|null) params\n  used?: boolean;\n  type?: 'checkbox' | 'radio' | 'range' | 'boolean';\n  filter_id?: string;\n}\n\nexport type IFilterQueryValueToggle = {\n  toggle: boolean;\n  name: string;\n}[];\nexport type IFilterQueryValueRange = [number, number]; // [min,max]\nexport type IFilterQueryValueBoolean = [boolean];\n",
      "properties": [
        {
          "name": "bindedTo",
          "type": "\"marca\" | \"precio\" | \"\"",
          "optional": true,
          "description": "",
          "line": 52
        },
        {
          "name": "filter_id",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 56
        },
        {
          "name": "type",
          "type": "\"checkbox\" | \"radio\" | \"range\" | \"boolean\"",
          "optional": true,
          "description": "",
          "line": 55
        },
        {
          "name": "used",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 54
        },
        {
          "name": "value",
          "type": "IFilterQueryValueToggle | IFilterQueryValueRange | IFilterQueryValueBoolean",
          "optional": false,
          "description": "",
          "line": 48
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IForm",
      "id": "interface-IForm-2f43d655fd65597f55035c15d6cc77d0",
      "file": "src/app/models/form.model.ts",
      "type": "interface",
      "sourceCode": "export interface IFormFields{\n  name: string;\n  type: 'instruction' | 'text' | 'date' | 'list' | 'local' | 'text-area' | 'checkbox';\n  subType?: 'text' | 'password' | 'email' | 'number';\n  field: string;\n  list?: string[];\n  required: boolean;\n  size: number;\n  value?: string;\n}\n\nexport interface IForm{\n  title?: string;\n  id?: string;\n  formFields: IFormFields[];\n  footer_message?: string;\n  button_text?: string;\n}\n",
      "properties": [
        {
          "name": "button_text",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 17
        },
        {
          "name": "footer_message",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 16
        },
        {
          "name": "formFields",
          "type": "IFormFields[]",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "id",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 14
        },
        {
          "name": "title",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 13
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IFormFields",
      "id": "interface-IFormFields-2f43d655fd65597f55035c15d6cc77d0",
      "file": "src/app/models/form.model.ts",
      "type": "interface",
      "sourceCode": "export interface IFormFields{\n  name: string;\n  type: 'instruction' | 'text' | 'date' | 'list' | 'local' | 'text-area' | 'checkbox';\n  subType?: 'text' | 'password' | 'email' | 'number';\n  field: string;\n  list?: string[];\n  required: boolean;\n  size: number;\n  value?: string;\n}\n\nexport interface IForm{\n  title?: string;\n  id?: string;\n  formFields: IFormFields[];\n  footer_message?: string;\n  button_text?: string;\n}\n",
      "properties": [
        {
          "name": "field",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "list",
          "type": "string[]",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "required",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "size",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "subType",
          "type": "\"text\" | \"password\" | \"email\" | \"number\"",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "type",
          "type": "\"instruction\" | \"text\" | \"date\" | \"list\" | \"local\" | \"text-area\" | \"checkbox\"",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "value",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 9
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IHomePage",
      "id": "interface-IHomePage-8308affaabc137d934e1a1fef122f2fa",
      "file": "src/app/resolvers/home.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CategoryGroupService } from '../services/category-group.service';\nimport { BannerService } from '../services/banner.service';\nimport { ICategoryGroup } from '../models/category-group.model';\nimport { IProductItem } from '../models/product.model';\nimport { ProductService } from '../services/product.service';\nimport { IBanner } from '../models/banner.model';\nimport {\n  CategoryService,\n  ICategoryBackend,\n} from '../services/category.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomeResolver implements Resolve<IHomePage> {\n  constructor(\n    private catService: CategoryService,\n    private productService: ProductService\n  ) {}\n  resolve(): Observable<IHomePage> {\n    return zip(\n      this.catService.getCategoryList(),\n      this.productService.getFeaturedProducts()\n    ).pipe(\n      map(([categories, productsFeat]) => ({\n        categories: categories.data,\n        productsFeat: productsFeat,\n      }))\n    );\n  }\n}\n\nexport interface IHomePage {\n  categories: ICategoryBackend[];\n  productsFeat: IProductItem[];\n  // \n  // heroes\n}\n",
      "properties": [
        {
          "name": "categories",
          "type": "ICategoryBackend[]",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "productsFeat",
          "type": "IProductItem[]",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IHowToBuyResolver",
      "id": "interface-IHowToBuyResolver-b01c02099b256cc51edc8a92b960fafd",
      "file": "src/app/resolvers/static-pages/how-to-buy.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HowToBuy implements Resolve<IHowToBuyResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<IHowToBuyResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('how_to_buy'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface IHowToBuyResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IHTMLText",
      "id": "interface-IHTMLText-817c012fe9c100f0594f8f89dc732942",
      "file": "src/app/models/static-pages.model.ts",
      "type": "interface",
      "sourceCode": "export interface IHTMLText {\n  content: string;\n}\n\nexport interface ISimpleCard {\n  iconURL: string;\n  url: string;\n  title: string;\n  color?: string;\n}\n\nexport interface IComplexCard {\n  iconURL: string;\n  url: string;\n  title: string;\n  subtitle: string;\n  color?: string;\n  description: {\n    title: string,\n    text: string,\n  };\n}\n\nexport interface IAccordion{\n  question: string;\n  answer: string;\n  opened: boolean;\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "INavBar",
      "id": "interface-INavBar-e0dc392ed90afdc5c31e5a438f8d70cf",
      "file": "src/app/models/navbar.model.ts",
      "type": "interface",
      "sourceCode": "import { IFilter } from './filter.model';\n\nexport interface INavBarItem{\n  name: string;\n  categoryList: Array<IFilter>;\n  friendlyUrl?: string;\n  selected?: boolean;\n}\n\nexport interface INavBar{\n  navBarList: Array<INavBarItem>;\n}\n",
      "properties": [
        {
          "name": "navBarList",
          "type": "Array<INavBarItem>",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "INavBarItem",
      "id": "interface-INavBarItem-e0dc392ed90afdc5c31e5a438f8d70cf",
      "file": "src/app/models/navbar.model.ts",
      "type": "interface",
      "sourceCode": "import { IFilter } from './filter.model';\n\nexport interface INavBarItem{\n  name: string;\n  categoryList: Array<IFilter>;\n  friendlyUrl?: string;\n  selected?: boolean;\n}\n\nexport interface INavBar{\n  navBarList: Array<INavBarItem>;\n}\n",
      "properties": [
        {
          "name": "categoryList",
          "type": "Array<IFilter>",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "friendlyUrl",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "selected",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "INewCardResolver",
      "id": "interface-INewCardResolver-2d0bdc7912c03ec09c99fb88e3d2175f",
      "file": "src/app/resolvers/static-pages/new-card.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NewCardResolver implements Resolve<INewCardResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<INewCardResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('new_card'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface INewCardResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IOrderDetailItem",
      "id": "interface-IOrderDetailItem-44c03e333efdcda35634e44b3d6dd016",
      "file": "src/app/models/order-item.model.ts",
      "type": "interface",
      "sourceCode": "export interface IOrderDetailItem{\n  product_id: any,\n  product_price: number,\n  discount_price: number,\n  amount_subtotal: number,\n  amount_total: number,\n  delivery: number,\n  quantity: number,\n  range_day: string,\n  supplier_delivery: any,\n  method_id: any,\n  product_name: string,\n  friendly_url: string,\n  brand: any\n}\n\nexport interface IOrderItem{\n  detail: Array<IOrderDetailItem>,\n  amount_total: number,\n  amount_subtotal: number,\n  amount_discount: number,\n  amount_delivery: number,\n  code: string,\n  type_payment: string,\n  delivery_address: string,\n  delivery_reference: string,\n  create_date: Date,\n  state: string\n}\n",
      "properties": [
        {
          "name": "amount_subtotal",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "amount_total",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "brand",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "delivery",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "discount_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "friendly_url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "method_id",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "product_id",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "product_name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "product_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "quantity",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "range_day",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "supplier_delivery",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IOrderItem",
      "id": "interface-IOrderItem-44c03e333efdcda35634e44b3d6dd016",
      "file": "src/app/models/order-item.model.ts",
      "type": "interface",
      "sourceCode": "export interface IOrderDetailItem{\n  product_id: any,\n  product_price: number,\n  discount_price: number,\n  amount_subtotal: number,\n  amount_total: number,\n  delivery: number,\n  quantity: number,\n  range_day: string,\n  supplier_delivery: any,\n  method_id: any,\n  product_name: string,\n  friendly_url: string,\n  brand: any\n}\n\nexport interface IOrderItem{\n  detail: Array<IOrderDetailItem>,\n  amount_total: number,\n  amount_subtotal: number,\n  amount_discount: number,\n  amount_delivery: number,\n  code: string,\n  type_payment: string,\n  delivery_address: string,\n  delivery_reference: string,\n  create_date: Date,\n  state: string\n}\n",
      "properties": [
        {
          "name": "amount_delivery",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "amount_discount",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "amount_subtotal",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "amount_total",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "code",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "create_date",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 27
        },
        {
          "name": "delivery_address",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "delivery_reference",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26
        },
        {
          "name": "detail",
          "type": "Array<IOrderDetailItem>",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "state",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28
        },
        {
          "name": "type_payment",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IPaymentCard",
      "id": "interface-IPaymentCard-d6043251400b34f0763eadb10df58065",
      "file": "src/app/models/home.model.ts",
      "type": "interface",
      "sourceCode": "export interface IPaymentCard {\n  title: string;\n  description: string;\n}\n",
      "properties": [
        {
          "name": "description",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IProductBackend",
      "id": "interface-IProductBackend-3d5739fd9313e970637d5f4ce183914d",
      "file": "src/app/services/product.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { products } from '../mockups/product.mockup';\nimport { IProductItem } from '../models/product.model';\nimport { IBrandBackend } from './category.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(private api: ApiService) {}\n\n  getFeaturedProducts(): Observable<IProductItem[]> {\n    // return this.api.get('category-group/list');\n    return of(products);\n  }\n\n  getProducts(filters: any, categoryId: string): Observable<IProductBackend[]> {\n    const params = this.api.createHttpParams({\n      data: { filters, category_id: categoryId },\n    });\n    console.log('query filters', filters);\n    return this.api.get(`product/category-filter`, params);\n  }\n}\n\nexport interface IProductBackend {\n  _id: string;\n  featured: boolean;\n  friendly_url: string;\n  image_cover: string;\n  image_logo_banner: string;\n  images_link: string[];\n  is_pack: boolean;\n  is_variation: boolean;\n  last_unit: boolean;\n  name: string;\n  title: string;\n  price: number;\n  special_price: number;\n  campaign_price: number;\n  stock: number;\n  brand: IBrandBackend;\n}\n\nexport interface IFilterQueryBackend {\n  value:\n    | IFilterQueryValueToggle\n    | IFilterQueryValueRange\n    | IFilterQueryValueBoolean;\n  bindedTo?: 'marca' | 'precio' | '';\n  // bindedTo (''|null) params\n  used?: boolean;\n  type?: 'checkbox' | 'radio' | 'range' | 'boolean';\n  filter_id?: string;\n}\n\nexport type IFilterQueryValueToggle = {\n  toggle: boolean;\n  name: string;\n}[];\nexport type IFilterQueryValueRange = [number, number]; // [min,max]\nexport type IFilterQueryValueBoolean = [boolean];\n",
      "properties": [
        {
          "name": "_id",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "brand",
          "type": "IBrandBackend",
          "optional": false,
          "description": "",
          "line": 44
        },
        {
          "name": "campaign_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "featured",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "friendly_url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "image_cover",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "image_logo_banner",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 33
        },
        {
          "name": "images_link",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "is_pack",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "is_variation",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "last_unit",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "special_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 41
        },
        {
          "name": "stock",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 43
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 39
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IProductDetail",
      "id": "interface-IProductDetail-6409089dea9938d2b36e3d7d67e18b68",
      "file": "src/app/models/product.model.ts",
      "type": "interface",
      "sourceCode": "export interface IProductItem {\n  stock: number;\n  name: string;\n  brand: any;\n  image_cover: string;\n  friendly_url: string;\n  special_price: number;\n  price: number;\n}\n\nexport interface IProductDetail {\n  stock: number;\n  name: string;\n  brand: any;\n  image_cover: string;\n  friendly_url: string;\n  special_price: number;\n  price: number;\n}\n\nexport type ProductItemType = 'simple' | 'star' | 'discount' | 'scotia';\n",
      "properties": [
        {
          "name": "brand",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "friendly_url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "image_cover",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "special_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "stock",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IProductItem",
      "id": "interface-IProductItem-6409089dea9938d2b36e3d7d67e18b68",
      "file": "src/app/models/product.model.ts",
      "type": "interface",
      "sourceCode": "export interface IProductItem {\n  stock: number;\n  name: string;\n  brand: any;\n  image_cover: string;\n  friendly_url: string;\n  special_price: number;\n  price: number;\n}\n\nexport interface IProductDetail {\n  stock: number;\n  name: string;\n  brand: any;\n  image_cover: string;\n  friendly_url: string;\n  special_price: number;\n  price: number;\n}\n\nexport type ProductItemType = 'simple' | 'star' | 'discount' | 'scotia';\n",
      "properties": [
        {
          "name": "brand",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "friendly_url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "image_cover",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "special_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "stock",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IRefundResolver",
      "id": "interface-IRefundResolver-7d96126801f332dff0f1b858489d5333",
      "file": "src/app/resolvers/static-pages/refund.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RefundResolver implements Resolve<IRefundResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<IRefundResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('refund'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface IRefundResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ISimpleCard",
      "id": "interface-ISimpleCard-817c012fe9c100f0594f8f89dc732942",
      "file": "src/app/models/static-pages.model.ts",
      "type": "interface",
      "sourceCode": "export interface IHTMLText {\n  content: string;\n}\n\nexport interface ISimpleCard {\n  iconURL: string;\n  url: string;\n  title: string;\n  color?: string;\n}\n\nexport interface IComplexCard {\n  iconURL: string;\n  url: string;\n  title: string;\n  subtitle: string;\n  color?: string;\n  description: {\n    title: string,\n    text: string,\n  };\n}\n\nexport interface IAccordion{\n  question: string;\n  answer: string;\n  opened: boolean;\n}\n",
      "properties": [
        {
          "name": "color",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "iconURL",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "title",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IStaticPageBackend",
      "id": "interface-IStaticPageBackend-4f46c114195a703578b418fb3a0a0321",
      "file": "src/app/services/static-page.service.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaticPageService {\n\n  constructor(private api: ApiService) {}\n\n  getPublicStaticPage(slug: string): Observable<any> {\n    return this.api.get(`static-page/data/${slug}`)\n  }\n}\n\nexport interface IStaticPageBackend {\n  content_cards?: any;\n  content_information?: any;\n  content_questions?: any;\n  content_form?: any;\n}\n",
      "properties": [
        {
          "name": "content_cards",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 18
        },
        {
          "name": "content_form",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 21
        },
        {
          "name": "content_information",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 19
        },
        {
          "name": "content_questions",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 20
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ISupplierOrder",
      "id": "interface-ISupplierOrder-7eabfdd029348eb961e731b5ca5604da",
      "file": "src/app/models/supplier-order.model.ts",
      "type": "interface",
      "sourceCode": "import { ICartItem } from \"./cart-item.model\";\n\nexport interface ISupplierOrder{\n  name: string,\n  delivery_price: number,\n  delivery_time: string,\n  products: Array<ICartItem>\n}\n",
      "properties": [
        {
          "name": "delivery_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "delivery_time",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "products",
          "type": "Array<ICartItem>",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "ITermsAndConditionsResolver",
      "id": "interface-ITermsAndConditionsResolver-502559987750c99c905cc11e5a3f8ae9",
      "file": "src/app/resolvers/static-pages/terms-and-conditions.resolver.ts",
      "type": "interface",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable, zip } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IStaticPageBackend, StaticPageService } from '../../services/static-page.service'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TermsAndConditionsResolver implements Resolve<ITermsAndConditionsResolver> {\n\n  constructor( private staticPageService: StaticPageService ) { }\n\n  resolve(): Observable<ITermsAndConditionsResolver> {\n    return zip(\n      this.staticPageService.getPublicStaticPage('terms_and_conditions'),\n    ).pipe(\n      map(([content]) => ({\n        content\n      }))\n    );\n  }\n\n}\n\nexport interface ITermsAndConditionsResolver{\n  content: IStaticPageBackend\n}\n",
      "properties": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 27
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    },
    {
      "name": "IWishlistItem",
      "id": "interface-IWishlistItem-f60ba7b4138c6a5298e8cf936808e64f",
      "file": "src/app/models/wishlist.model.ts",
      "type": "interface",
      "sourceCode": "export interface IWishlistItem{\n  stock: number;\n  name: string;\n  brand: any;\n  friendly_url: string;\n  special_price: number;\n  price: number;\n  _id?: string;\n}\n",
      "properties": [
        {
          "name": "_id",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 8
        },
        {
          "name": "brand",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "friendly_url",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "name",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "special_price",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "stock",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 150,
      "methods": []
    }
  ],
  "injectables": [
    {
      "name": "ApiService",
      "id": "injectable-ApiService-43fd06f44204557e3065a412e44846cf",
      "file": "src/app/services/api.service.ts",
      "properties": [
        {
          "name": "JWT_TOKEN",
          "defaultValue": "environment.JWT_TOKEN",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [112]
        },
        {
          "name": "URL_BACKEND",
          "defaultValue": "environment.URL_BACKEND",
          "type": "",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [112]
        }
      ],
      "methods": [
        {
          "name": "createHttpParams",
          "args": [
            {
              "name": "params",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "HttpParams",
          "typeParameters": [],
          "line": 21,
          "jsdoctags": [
            {
              "name": "params",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "formatErrors",
          "args": [
            {
              "name": "error",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 16,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "error",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "get",
          "args": [
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "params",
              "type": "HttpParams",
              "defaultValue": "new HttpParams()"
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 29,
          "jsdoctags": [
            {
              "name": "path",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "params",
              "type": "HttpParams",
              "defaultValue": "new HttpParams()",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "post",
          "args": [
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "body",
              "type": "Object",
              "defaultValue": "{}"
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 40,
          "jsdoctags": [
            {
              "name": "path",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "body",
              "type": "Object",
              "defaultValue": "{}",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "put",
          "args": [
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "body",
              "type": "Object",
              "defaultValue": "{}"
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 50,
          "jsdoctags": [
            {
              "name": "path",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "body",
              "type": "Object",
              "defaultValue": "{}",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ApiService {\n  private URL_BACKEND = environment.URL_BACKEND;\n  private JWT_TOKEN = environment.JWT_TOKEN;\n\n  constructor(private http: HttpClient) {}\n\n  private formatErrors(error: any) {\n    console.log(error)\n    return throwError(error.error);\n  }\n\n  createHttpParams(params: any): HttpParams {\n    let httpParams = new HttpParams();\n    Object.keys(params).forEach((param) => {\n      httpParams = httpParams.set(param, JSON.stringify(params[param]));\n    });\n    return httpParams;\n  }\n\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\n    return this.http\n      .get(`${this.URL_BACKEND}${path}`, {\n        params,\n        headers: {\n          Authorization: `Bearer ${this.JWT_TOKEN}`,\n        },\n      })\n      .pipe(catchError(this.formatErrors));\n  }\n\n  post(path: string, body: Object = {}): Observable<any> {\n    return this.http\n      .post(`${environment.URL_BACKEND}${path}`, body, {\n        headers: {\n          Authorization: `Bearer ${this.JWT_TOKEN}`,\n        },\n      })\n      .pipe(catchError(this.formatErrors));\n  }\n\n  put(path: string, body: Object = {}): Observable<any> {\n    return this.http\n      .put(`${environment.URL_BACKEND}${path}`, body, {\n        headers: {\n          Authorization: `Bearer ${this.JWT_TOKEN}`,\n        },\n      })\n      .pipe(catchError(this.formatErrors));\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "http",
            "type": "HttpClient"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "http",
            "type": "HttpClient",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "BannerService",
      "id": "injectable-BannerService-431ca74e82bba22f1b666a14cd67fb4d",
      "file": "src/app/services/banner.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "getBanners",
          "args": [],
          "optional": false,
          "returnType": "Observable<IBanner[]>",
          "typeParameters": [],
          "line": 13
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { IBanner } from '../models/banner.model';\nimport { banners } from '../mockups/banner.mockup';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BannerService {\n  constructor(private api: ApiService) {}\n\n  getBanners(): Observable<IBanner[]> {\n    // return this.api.get('category-group/list');\n    return of(banners);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "api",
            "type": "ApiService"
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "api",
            "type": "ApiService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "CategoryGroupService",
      "id": "injectable-CategoryGroupService-47c3d807cdc89fefc585f49bf33dd4ff",
      "file": "src/app/services/category-group.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "getCategoryGroups",
          "args": [],
          "optional": false,
          "returnType": "Observable<ICategoryGroup[]>",
          "typeParameters": [],
          "line": 13
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { ICategoryGroup } from '../models/category-group.model';\nimport { categoryGroups } from '../mockups/category-group.mockup';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryGroupService {\n  constructor(private api: ApiService) {}\n\n  getCategoryGroups(): Observable<ICategoryGroup[]> {\n    // return this.api.get('category-group/list');\n    return of(categoryGroups);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "api",
            "type": "ApiService"
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "api",
            "type": "ApiService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "CategoryService",
      "id": "injectable-CategoryService-e95e4548f8b4cfc0ceec59f267fb6a32",
      "file": "src/app/services/category.service.ts",
      "properties": [
        {
          "name": "category",
          "type": "ICategoryBackend",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "urlAttachment",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methods": [
        {
          "name": "getCategoryElement",
          "args": [
            {
              "name": "category",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "Observable<ICategoryElementBackend>",
          "typeParameters": [],
          "line": 18,
          "jsdoctags": [
            {
              "name": "category",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getCategoryList",
          "args": [],
          "optional": false,
          "returnType": "Observable<ICategoryListBackend>",
          "typeParameters": [],
          "line": 14
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  category: ICategoryBackend;\n  urlAttachment = '';\n\n  constructor(private api: ApiService) {}\n\n  getCategoryList(): Observable<ICategoryListBackend> {\n    return this.api.get('category/list-category-full/tienda');\n  }\n\n  getCategoryElement(category: string): Observable<ICategoryElementBackend> {\n    //  ask what's with the null?\n    return this.api.get(`category/category-list-element/${category}/null/null`);\n  }\n}\n\nexport interface ICategoryListBackend {\n  data: Array<ICategoryBackend>;\n  image_category: string;\n  url_attachment: string;\n}\n\nexport interface ICategoryBackend {\n  name: string;\n  friendly_url: string;\n  filters: Array<IFilterBackend>;\n  brands: any;\n  url_attachment: string;\n  image_banner: string;\n  image_link: string;\n  _id: string;\n}\n\nexport interface IFilterBackend {\n  filter: string;\n  values: Array<string>;\n  _id: string;\n}\n\nexport interface ICategoryElementBackend {\n  entity: ICategoryBackend;\n  brands: IBrandListBackend;\n  url_attachment: string;\n}\n\nexport interface IBrandListBackend {\n  data: Array<IBrandBackend>;\n}\n\nexport interface IBrandBackend {\n  _id: string;\n  name: string;\n  description: string;\n  friendly_url: string;\n  image_link: string;\n  image_logo_link: string;\n  image_banner: string;\n  image_logo_banner: string;\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "api",
            "type": "ApiService"
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "api",
            "type": "ApiService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "ProductService",
      "id": "injectable-ProductService-3d5739fd9313e970637d5f4ce183914d",
      "file": "src/app/services/product.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "getFeaturedProducts",
          "args": [],
          "optional": false,
          "returnType": "Observable<IProductItem[]>",
          "typeParameters": [],
          "line": 14
        },
        {
          "name": "getProducts",
          "args": [
            {
              "name": "filters",
              "type": "any"
            },
            {
              "name": "categoryId",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "Observable<IProductBackend[]>",
          "typeParameters": [],
          "line": 19,
          "jsdoctags": [
            {
              "name": "filters",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "categoryId",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { products } from '../mockups/product.mockup';\nimport { IProductItem } from '../models/product.model';\nimport { IBrandBackend } from './category.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(private api: ApiService) {}\n\n  getFeaturedProducts(): Observable<IProductItem[]> {\n    // return this.api.get('category-group/list');\n    return of(products);\n  }\n\n  getProducts(filters: any, categoryId: string): Observable<IProductBackend[]> {\n    const params = this.api.createHttpParams({\n      data: { filters, category_id: categoryId },\n    });\n    console.log('query filters', filters);\n    return this.api.get(`product/category-filter`, params);\n  }\n}\n\nexport interface IProductBackend {\n  _id: string;\n  featured: boolean;\n  friendly_url: string;\n  image_cover: string;\n  image_logo_banner: string;\n  images_link: string[];\n  is_pack: boolean;\n  is_variation: boolean;\n  last_unit: boolean;\n  name: string;\n  title: string;\n  price: number;\n  special_price: number;\n  campaign_price: number;\n  stock: number;\n  brand: IBrandBackend;\n}\n\nexport interface IFilterQueryBackend {\n  value:\n    | IFilterQueryValueToggle\n    | IFilterQueryValueRange\n    | IFilterQueryValueBoolean;\n  bindedTo?: 'marca' | 'precio' | '';\n  // bindedTo (''|null) params\n  used?: boolean;\n  type?: 'checkbox' | 'radio' | 'range' | 'boolean';\n  filter_id?: string;\n}\n\nexport type IFilterQueryValueToggle = {\n  toggle: boolean;\n  name: string;\n}[];\nexport type IFilterQueryValueRange = [number, number]; // [min,max]\nexport type IFilterQueryValueBoolean = [boolean];\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "api",
            "type": "ApiService"
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "api",
            "type": "ApiService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "ResizeService",
      "id": "injectable-ResizeService-c730db65390923a74b3cf167555378f0",
      "file": "src/app/services/resize.service.ts",
      "properties": [
        {
          "name": "resizeSubject",
          "type": "Subject<Window>",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [112]
        }
      ],
      "methods": [
        {
          "name": "onResize",
          "args": [
            {
              "name": "event",
              "type": "UIEvent"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "event",
              "type": "UIEvent",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { EventManager } from '@angular/platform-browser';\nimport { Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ResizeService {\n  get onResize$(): Observable<Window> {\n    return this.resizeSubject.asObservable();\n  }\n\n  private resizeSubject: Subject<Window>;\n\n  constructor(private eventManager: EventManager) {\n    this.resizeSubject = new Subject();\n    this.eventManager.addGlobalEventListener(\n      'window',\n      'resize',\n      this.onResize.bind(this)\n    );\n  }\n\n  private onResize(event: UIEvent) {\n    this.resizeSubject.next(<Window>event.target);\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "eventManager",
            "type": "EventManager"
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "eventManager",
            "type": "EventManager",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "onResize$": {
          "name": "onResize$",
          "getSignature": {
            "name": "onResize$",
            "type": "",
            "returnType": "Observable<Window>",
            "line": 9
          }
        }
      },
      "type": "injectable"
    },
    {
      "name": "StaticPageService",
      "id": "injectable-StaticPageService-4f46c114195a703578b418fb3a0a0321",
      "file": "src/app/services/static-page.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "getPublicStaticPage",
          "args": [
            {
              "name": "slug",
              "type": "string"
            }
          ],
          "optional": false,
          "returnType": "Observable<any>",
          "typeParameters": [],
          "line": 12,
          "jsdoctags": [
            {
              "name": "slug",
              "type": "string",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaticPageService {\n\n  constructor(private api: ApiService) {}\n\n  getPublicStaticPage(slug: string): Observable<any> {\n    return this.api.get(`static-page/data/${slug}`)\n  }\n}\n\nexport interface IStaticPageBackend {\n  content_cards?: any;\n  content_information?: any;\n  content_questions?: any;\n  content_form?: any;\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "api",
            "type": "ApiService"
          }
        ],
        "line": 8,
        "jsdoctags": [
          {
            "name": "api",
            "type": "ApiService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "StaticPagesTransformService",
      "id": "injectable-StaticPagesTransformService-010030f91c3ab76a6917a244b551a065",
      "file": "src/app/services/internal/static-pages-transform.service.ts",
      "properties": [
        {
          "name": "colorArray",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "methods": [
        {
          "name": "accordionStructure",
          "args": [
            {
              "name": "raw",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "IAccordion[]",
          "typeParameters": [],
          "line": 78,
          "jsdoctags": [
            {
              "name": "raw",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "complexCardsStructure",
          "args": [
            {
              "name": "raw",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "IComplexCard[]",
          "typeParameters": [],
          "line": 15,
          "jsdoctags": [
            {
              "name": "raw",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "formStructure",
          "args": [
            {
              "name": "raw",
              "type": "any"
            },
            {
              "name": "title",
              "type": "string",
              "defaultValue": "null"
            },
            {
              "name": "buttonText",
              "type": "string",
              "defaultValue": "null"
            }
          ],
          "optional": false,
          "returnType": "IForm",
          "typeParameters": [],
          "line": 93,
          "jsdoctags": [
            {
              "name": "raw",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "title",
              "type": "string",
              "defaultValue": "null",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "buttonText",
              "type": "string",
              "defaultValue": "null",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "simpleCardsStructure",
          "args": [
            {
              "name": "raw",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "ISimpleCard[]",
          "typeParameters": [],
          "line": 49,
          "jsdoctags": [
            {
              "name": "raw",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "textHTMLStructure",
          "args": [
            {
              "name": "raw",
              "type": "any"
            }
          ],
          "optional": false,
          "returnType": "SafeHtml",
          "typeParameters": [],
          "line": 70,
          "jsdoctags": [
            {
              "name": "raw",
              "type": "any",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { IForm, IFormFields } from 'src/app/models/form.model';\nimport { IComplexCard, ISimpleCard, IHTMLText, IAccordion } from 'src/app/models/static-pages.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaticPagesTransformService {\n\n  colorArray: string[];\n\n  constructor( private domSanitizer: DomSanitizer) { }\n\n  complexCardsStructure( raw: any ): IComplexCard[]{\n    let result: IComplexCard[] = [];\n    let complexCard: IComplexCard;\n    this.colorArray  = ['orange', 'black-light', 'purple', 'green', 'blue',  'yellow'];\n    for( let i = 0, j = 0; i < (raw.value[0] && raw.value[0].length); i++ ){\n      complexCard = {\n        iconURL: raw.value[0][i].value || '',\n        subtitle: null,\n        title: null,\n        url: raw.value[0][i].url_attachment || '',\n        color: this.colorArray[j],\n        description: {\n          title: null,\n          text: null\n        }\n      }\n      if(raw.value[1][i].attribute && raw.value[1][i].attribute[0]){\n        complexCard.description.title = raw.value[1][i].attribute[0].value;\n        complexCard.description.text = raw.value[1][i].attribute[1].value;\n      }\n      if(raw.value[0][i].attribute && raw.value[0][i].attribute[0]){\n        complexCard.title = (i+1)+'. '+raw.value[0][i].attribute[0].value\n      }\n      if(raw.value[0][i].attribute && raw.value[0][i].attribute[1]){\n        complexCard.subtitle = raw.value[0][i].attribute[1].value\n      }\n      result.push(complexCard);\n      j++;\n      if(j > this.colorArray.length) j = 0;\n    }\n    console.log(result)\n    return result;\n  }\n\n  simpleCardsStructure( raw: any ): ISimpleCard[]{\n    let result: ISimpleCard[] = [];\n    let singleCard: ISimpleCard;\n    this.colorArray  = ['blue', 'purple', 'green', 'orange', 'yellow'];\n    for( let i = 0, j = 0; i < (raw.value[0] && raw.value[0].length); i++ ){\n      singleCard = {\n        iconURL: raw.value[0][i].value || '',\n        title: null,\n        url: raw.value[0][i].url_attachment || '',\n        color: this.colorArray[j]\n      }\n      if(raw.value[0][i].attribute && raw.value[0][i].attribute[0]){\n        singleCard.title = raw.value[0][i].attribute[0].value\n      }\n      result.push(singleCard);\n      j++;\n      if(j > this.colorArray.length) j = 0;\n    }\n    return result;\n  }\n\n  textHTMLStructure( raw: any ): SafeHtml{\n    let result: IHTMLText;\n    result = {\n      content: raw.value\n    }\n    return this.domSanitizer.bypassSecurityTrustHtml(result.content);\n  }\n\n  accordionStructure( raw: any ): IAccordion[]{\n    let result: IAccordion[] = [];\n    let singleQuestion: IAccordion;\n    for( let i = 0; i < (raw.value && raw.value.length); i++ ){\n      singleQuestion = {\n        question: raw.value[i].name,\n        answer: raw.value[i].content[0].value,\n        opened: false\n      }\n      result.push(singleQuestion)\n    }\n    result[0].opened = true;\n    return result;\n  }\n\n  formStructure( raw: any, title: string = null, buttonText: string = null ): IForm{\n    let result: IForm;\n    result = {\n      id: raw.id_form_email,\n      formFields: [],\n      button_text: buttonText,\n      title: title\n    }\n    let singleField: IFormFields;\n    for( let i = 0; i < raw.value.length; i++){\n      singleField = {\n        field: raw.value[i].field,\n        name: raw.value[i].name,\n        required: raw.value[i].required,\n        size: raw.value[i].size,\n        type: raw.value[i].type,\n        subType:  raw.value[i].sub_type,\n      }\n      result.formFields.push(singleField)\n    }\n    return result;\n  }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "domSanitizer",
            "type": "DomSanitizer"
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "domSanitizer",
            "type": "DomSanitizer",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "UserAccessService",
      "id": "injectable-UserAccessService-9a6a9221aab23548a68592bc820569fa",
      "file": "src/app/services/user-access.service.ts",
      "properties": [],
      "methods": [],
      "description": "",
      "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAccessService {\n\n  constructor() { }\n}\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 6
      },
      "type": "injectable"
    }
  ],
  "classes": [
    {
      "name": "AppPage",
      "id": "class-AppPage-a0db91bfa3b9914e9048612074084ee6",
      "file": "e2e/src/app.po.ts",
      "type": "class",
      "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl) as Promise<unknown>;\n  }\n\n  getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText() as Promise<string>;\n  }\n}\n",
      "properties": [],
      "methods": [
        {
          "name": "getTitleText",
          "args": [],
          "optional": false,
          "returnType": "Promise<string>",
          "typeParameters": [],
          "line": 8
        },
        {
          "name": "navigateTo",
          "args": [],
          "optional": false,
          "returnType": "Promise<unknown>",
          "typeParameters": [],
          "line": 4
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "Constants",
      "id": "class-Constants-5be891a20f50c5381fd1dec8d1458fbe",
      "file": "src/app/constants.ts",
      "type": "class",
      "sourceCode": "import { environment } from 'src/environments/environment';\n\nexport class Constants {\n  public static API_KEY =\n    'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiI5NzgwYTI5MmE1OGUyM2RhZTI0Mjg0NjE0NTNlZjkxZmJiMTNiNjdmNzEyYmYxZWM3ZmM4MDc1YzI1MjBhMGQ3ZDVlYTM3ODA2MWM1ZGIzZDA3Nzc1NjZmYjA2ZDMzYzciLCJzeXN0ZW1fYXBpIjoic2NvdGlhYmFua19mZXJpYSIsImlhdCI6MTYwMDEwNzU1MH0.Cq6jlVl1l5HM-ImUMvC_kEBILetq0iHELDuXkyoH0pjWB7WOndF7LnasHcTBZWMw-8WR01QU03c-YIDv5cpw-w';\n\n  public static URL_BACKEND = environment.URL_BACKEND;\n\n  public static readonly FRONT_KEY = `-----BEGIN RSA PRIVATE KEY-----\n    MIIBOgIBAAJBAIu+SitTqEqImZqzFrKkvp58PVbcSGDv/q9l4xkYe24kU5AACSZc\n    TYRQrfPwL9Sr+VZNgZiZH7AIeV5GEgZG3QMCAwEAAQJABbxfyvt6EuUceO8U5WxB\n    rrumwOP1zJTNPWHPOn54woKHpW1rEp5elL1SHzDqaPkY2VZirl998xbZ7bphs35p\n    8QIhAMjcrLQWwu2R4ErmF7QW8gCqoYwWB898tZPxQLaJlMP1AiEAshqTbWuVdDUQ\n    wcq/xx/LsH4QdDNfOX7Pd+2oVozc+hcCIDW2NQSPVZ7btGOy9cG1pQ8ikcJ5HauR\n    SKkACXMGhV6FAiAEA49RBvyuSsfe5jfeP/wyNRUf2UyLGi2I0WVa1f/g7wIhAK9B\n    e2JSos7G96yPpDeA5CcXwxYAYYjqWGwOwpLOqooI\n      -----END RSA PRIVATE KEY-----`;\n\n  public static readonly POINTS_DIVIDER = 4.3;\n}\n",
      "properties": [
        {
          "name": "API_KEY",
          "defaultValue": "'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiI5NzgwYTI5MmE1OGUyM2RhZTI0Mjg0NjE0NTNlZjkxZmJiMTNiNjdmNzEyYmYxZWM3ZmM4MDc1YzI1MjBhMGQ3ZDVlYTM3ODA2MWM1ZGIzZDA3Nzc1NjZmYjA2ZDMzYzciLCJzeXN0ZW1fYXBpIjoic2NvdGlhYmFua19mZXJpYSIsImlhdCI6MTYwMDEwNzU1MH0.Cq6jlVl1l5HM-ImUMvC_kEBILetq0iHELDuXkyoH0pjWB7WOndF7LnasHcTBZWMw-8WR01QU03c-YIDv5cpw-w'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4,
          "modifierKind": [115]
        },
        {
          "name": "FRONT_KEY",
          "defaultValue": "`-----BEGIN RSA PRIVATE KEY-----\n    MIIBOgIBAAJBAIu+SitTqEqImZqzFrKkvp58PVbcSGDv/q9l4xkYe24kU5AACSZc\n    TYRQrfPwL9Sr+VZNgZiZH7AIeV5GEgZG3QMCAwEAAQJABbxfyvt6EuUceO8U5WxB\n    rrumwOP1zJTNPWHPOn54woKHpW1rEp5elL1SHzDqaPkY2VZirl998xbZ7bphs35p\n    8QIhAMjcrLQWwu2R4ErmF7QW8gCqoYwWB898tZPxQLaJlMP1AiEAshqTbWuVdDUQ\n    wcq/xx/LsH4QdDNfOX7Pd+2oVozc+hcCIDW2NQSPVZ7btGOy9cG1pQ8ikcJ5HauR\n    SKkACXMGhV6FAiAEA49RBvyuSsfe5jfeP/wyNRUf2UyLGi2I0WVa1f/g7wIhAK9B\n    e2JSos7G96yPpDeA5CcXwxYAYYjqWGwOwpLOqooI\n      -----END RSA PRIVATE KEY-----`",
          "type": "",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [115, 132]
        },
        {
          "name": "POINTS_DIVIDER",
          "defaultValue": "4.3",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [115, 132]
        },
        {
          "name": "URL_BACKEND",
          "defaultValue": "environment.URL_BACKEND",
          "type": "",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [115]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "Messages",
      "id": "class-Messages-2152d7f88ff2d8cb9c7b88b365a5d870",
      "file": "src/app/messages.ts",
      "type": "class",
      "sourceCode": "export class Messages {\n  public static successTitle = \"¡Excelente!\";\n  public static errorTitle = \"¡Ups!, hubo un problema\";\n  public static warningTitle = \"Advertencia\";\n  public static logOutTitle = \"Hasta luego\";\n  public static logInTitle = \"Bienvenido nuevamente\";\n  public static registerTitle = \"Bienvenido\";\n\n  // ---- Mensajes de cantidad en carrito ---- //\n  public static lessThanOneProduct = \"No puedes llevar menos de un producto.\";\n  public static moreThanStockProduct = \"Has sobrepasado el stock del producto. Si desea pedir más productos, contactenos.\";\n  public static errorInValidation = \"El valor ingresado en cantidad no es el correcto.\";\n\n  // ---- Mensajes de Login forzado ---- //\n  public static forcedLogin = \"Para realizar un pedido debes ingresar o crear una cuenta.\";\n  public static clossedSession = \"Tu session ha terminado, ingresa nuevamente.\";\n\n  // ---- Mensajes de Carrito ---- //\n  public static errorAddCart = \"Hubo un error al agregar un producto al carrito, intente nuevamente en unos minutos.\";\n  public static successAddCart = \"Has agregado el producto correctamente al carrito.\";\n  public static errorDeleteCart = \"Hubo un error al eliminar el producto del carrito, intente nuevamente en unos minutos.\";\n  public static successDeleteCart = \"Has eliminado el producto correctamente del carrito.\";\n  public static errorNoItemsInCart = \"No hay productos en tu carrito.\";\n\n  // ---- Mensajes de Perfil ---- //\n  public static errorUpdateProfile = \"Uno de los campos no ha sido completado de forma corrrecta.\";\n  public static successUpdateProfile = \"Has actualizado tus datos correcamente.\";\n  public static errorUpdatePasswordEqual = \"Las contraseñas no coinciden\";\n  public static errorUpdatePasswordSize = \"La contraseña es menor a 6 caracteres.\";\n  public static successUpdatePassword = \"Has actualizado tu contraseña correctamente.\";\n\n  // ---- Mensajes de Direcciones ---- //\n  public static errorCreateAddress = \"No has completado correctamente el formulario de dirección.\";\n  public static successCreateAddress = \"Has agregado la nueva dirección.\";\n  public static errorUpdateAddress = \"No has completado correctamente el formulario de dirección.\";\n  public static successUpdateAddress = \"Has actualizado la dirección.\";\n  public static successDeleteAddress = \"Has eliminado la dirección.\";\n\n  // ---- Mensajes de Formulario ---- //\n  public static successFormContact =\"Gracias por contactarnos, te estaremos enviando un correo pronto.\";\n  public static successFormComplaintsBook =\"Has enviado el mensaje correctamente y estaremos en contacto con usted en la brevedad posible.\"\n  public static errorForm =\"Complete los campos obligatorios del formulario\";\n\n  // ---- Mensajes de Orden ---- //\n  public static successOrderConfirmed = \"Tu pedido ha sido recibido exitosamente.\";\n  public static errorDirectionCantBeUsed = \"Has elegido una dirección a la cual no hacemos envio.\";\n  public static errorOrderReject = \"Lo sentimos, su pedido ha sido rechazado. Intenta nuevamente en unos minutos.\";\n  public static errorOrderForm = \"No has terminado de llenar los detalles de facturación.\";\n\n  // ---- Mensajes de Payment ---- //\n  public static successPaymentConfirmed = \"Has realizado el pago de tu pedido.\";\n  public static errorPaymentToken = \"No se ha podido contactar con el método de pago. Intenta nuevamente en unos minutos.\";\n  public static errorPaymentForm = \"Los campos que has completado tienen error.\";\n\n  // ---- Mensajes de LogOut ---- //\n  public static successLogOut = \"¡Esperamos regreses pronto! Te estaremos esperando con más sorpresas.\";\n\n  // ---- Mensajes de LogIn ---- //\n  public static successLogIn = \"¡Hola! Nos alegra que regreses.\";\n  public static errorLogIn = \"Hubo un error al ingresar. Intenta nuevamente en unos minutos.\";\n  public static errorFormLogIn = \"No has ingresado el usario o la contraséña correcta.\";\n\n  // ---- Mensajes de Register ---- //\n  public static successRegister = \"Esperamos nuestros productos te agraden.\";\n  public static errorFormRegister = \"No has llenado los campos correctamente.\";\n\n  // ---- Mensaje General de Error ---- //\n  public static errorGeneral = \"Ha ocurrido un error. Intente nuevamente en unos minutos.\"\n\n  // ---- Mensaje Detalle de Producto ---- //\n  public static noStockProduct = \"El producto no esta en stock, aun puede pedir otra de sus presentaciones.\";\n}\n",
      "properties": [
        {
          "name": "clossedSession",
          "defaultValue": "\"Tu session ha terminado, ingresa nuevamente.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [115]
        },
        {
          "name": "errorAddCart",
          "defaultValue": "\"Hubo un error al agregar un producto al carrito, intente nuevamente en unos minutos.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [115]
        },
        {
          "name": "errorCreateAddress",
          "defaultValue": "\"No has completado correctamente el formulario de dirección.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [115]
        },
        {
          "name": "errorDeleteCart",
          "defaultValue": "\"Hubo un error al eliminar el producto del carrito, intente nuevamente en unos minutos.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 21,
          "modifierKind": [115]
        },
        {
          "name": "errorDirectionCantBeUsed",
          "defaultValue": "\"Has elegido una dirección a la cual no hacemos envio.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [115]
        },
        {
          "name": "errorForm",
          "defaultValue": "\"Complete los campos obligatorios del formulario\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 42,
          "modifierKind": [115]
        },
        {
          "name": "errorFormLogIn",
          "defaultValue": "\"No has ingresado el usario o la contraséña correcta.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 61,
          "modifierKind": [115]
        },
        {
          "name": "errorFormRegister",
          "defaultValue": "\"No has llenado los campos correctamente.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 65,
          "modifierKind": [115]
        },
        {
          "name": "errorGeneral",
          "defaultValue": "\"Ha ocurrido un error. Intente nuevamente en unos minutos.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 68,
          "modifierKind": [115]
        },
        {
          "name": "errorInValidation",
          "defaultValue": "\"El valor ingresado en cantidad no es el correcto.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [115]
        },
        {
          "name": "errorLogIn",
          "defaultValue": "\"Hubo un error al ingresar. Intenta nuevamente en unos minutos.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 60,
          "modifierKind": [115]
        },
        {
          "name": "errorNoItemsInCart",
          "defaultValue": "\"No hay productos en tu carrito.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [115]
        },
        {
          "name": "errorOrderForm",
          "defaultValue": "\"No has terminado de llenar los detalles de facturación.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 48,
          "modifierKind": [115]
        },
        {
          "name": "errorOrderReject",
          "defaultValue": "\"Lo sentimos, su pedido ha sido rechazado. Intenta nuevamente en unos minutos.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 47,
          "modifierKind": [115]
        },
        {
          "name": "errorPaymentForm",
          "defaultValue": "\"Los campos que has completado tienen error.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [115]
        },
        {
          "name": "errorPaymentToken",
          "defaultValue": "\"No se ha podido contactar con el método de pago. Intenta nuevamente en unos minutos.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [115]
        },
        {
          "name": "errorTitle",
          "defaultValue": "\"¡Ups!, hubo un problema\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 3,
          "modifierKind": [115]
        },
        {
          "name": "errorUpdateAddress",
          "defaultValue": "\"No has completado correctamente el formulario de dirección.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 35,
          "modifierKind": [115]
        },
        {
          "name": "errorUpdatePasswordEqual",
          "defaultValue": "\"Las contraseñas no coinciden\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [115]
        },
        {
          "name": "errorUpdatePasswordSize",
          "defaultValue": "\"La contraseña es menor a 6 caracteres.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [115]
        },
        {
          "name": "errorUpdateProfile",
          "defaultValue": "\"Uno de los campos no ha sido completado de forma corrrecta.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [115]
        },
        {
          "name": "forcedLogin",
          "defaultValue": "\"Para realizar un pedido debes ingresar o crear una cuenta.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [115]
        },
        {
          "name": "lessThanOneProduct",
          "defaultValue": "\"No puedes llevar menos de un producto.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [115]
        },
        {
          "name": "logInTitle",
          "defaultValue": "\"Bienvenido nuevamente\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [115]
        },
        {
          "name": "logOutTitle",
          "defaultValue": "\"Hasta luego\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [115]
        },
        {
          "name": "moreThanStockProduct",
          "defaultValue": "\"Has sobrepasado el stock del producto. Si desea pedir más productos, contactenos.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [115]
        },
        {
          "name": "noStockProduct",
          "defaultValue": "\"El producto no esta en stock, aun puede pedir otra de sus presentaciones.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 71,
          "modifierKind": [115]
        },
        {
          "name": "registerTitle",
          "defaultValue": "\"Bienvenido\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [115]
        },
        {
          "name": "successAddCart",
          "defaultValue": "\"Has agregado el producto correctamente al carrito.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [115]
        },
        {
          "name": "successCreateAddress",
          "defaultValue": "\"Has agregado la nueva dirección.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [115]
        },
        {
          "name": "successDeleteAddress",
          "defaultValue": "\"Has eliminado la dirección.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [115]
        },
        {
          "name": "successDeleteCart",
          "defaultValue": "\"Has eliminado el producto correctamente del carrito.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 22,
          "modifierKind": [115]
        },
        {
          "name": "successFormComplaintsBook",
          "defaultValue": "\"Has enviado el mensaje correctamente y estaremos en contacto con usted en la brevedad posible.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 41,
          "modifierKind": [115]
        },
        {
          "name": "successFormContact",
          "defaultValue": "\"Gracias por contactarnos, te estaremos enviando un correo pronto.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [115]
        },
        {
          "name": "successLogIn",
          "defaultValue": "\"¡Hola! Nos alegra que regreses.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [115]
        },
        {
          "name": "successLogOut",
          "defaultValue": "\"¡Esperamos regreses pronto! Te estaremos esperando con más sorpresas.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [115]
        },
        {
          "name": "successOrderConfirmed",
          "defaultValue": "\"Tu pedido ha sido recibido exitosamente.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [115]
        },
        {
          "name": "successPaymentConfirmed",
          "defaultValue": "\"Has realizado el pago de tu pedido.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 51,
          "modifierKind": [115]
        },
        {
          "name": "successRegister",
          "defaultValue": "\"Esperamos nuestros productos te agraden.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 64,
          "modifierKind": [115]
        },
        {
          "name": "successTitle",
          "defaultValue": "\"¡Excelente!\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2,
          "modifierKind": [115]
        },
        {
          "name": "successUpdateAddress",
          "defaultValue": "\"Has actualizado la dirección.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [115]
        },
        {
          "name": "successUpdatePassword",
          "defaultValue": "\"Has actualizado tu contraseña correctamente.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [115]
        },
        {
          "name": "successUpdateProfile",
          "defaultValue": "\"Has actualizado tus datos correcamente.\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [115]
        },
        {
          "name": "warningTitle",
          "defaultValue": "\"Advertencia\"",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4,
          "modifierKind": [115]
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    }
  ],
  "directives": [
    {
      "name": "NoespecialCharactersDirective",
      "id": "directive-NoespecialCharactersDirective-79d38b7bc7bd5e20acda913db9738218",
      "file": "src/app/directives/noespecial-characters.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode": "import { Directive, ElementRef, Input, HostListener } from '@angular/core';\nimport { temporaryDeclaration } from '@angular/compiler/src/compiler_util/expression_converter';\n\n@Directive({\n  selector: '[NoespecialCharacters]'\n})\nexport class NoespecialCharactersDirective {\n  constructor(private el?: ElementRef) { }\n\n  regexpNumber : RegExp  = new RegExp ('[A-Za-z0-9ñáéíóú -]');\n\n  @HostListener('keypress', ['$event']) onKeyDown(event) {\n    if(!this.regexpNumber.test(event.key)){\n      event.preventDefault();\n    }\n  }\n\n}\n\n",
      "selector": "[NoespecialCharacters]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "keypress",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 12
        }
      ],
      "propertiesClass": [
        {
          "name": "regexpNumber",
          "defaultValue": "new RegExp ('[A-Za-z0-9ñáéíóú -]')",
          "type": "RegExp",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "optional": true
          }
        ],
        "line": 7,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "OnlyNumberDirective",
      "id": "directive-OnlyNumberDirective-aa1d9365b02b15da2a2a918a19e8a7f8",
      "file": "src/app/directives/only-number.directive.ts",
      "type": "directive",
      "description": "",
      "sourceCode": "import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[OnlyNumber]'\n})\nexport class OnlyNumberDirective {\n\n  constructor(private el?: ElementRef) { }\n\n  @Input() OnlyNumber: boolean;\n\n  @HostListener('keydown', ['$event']) onKeyDown(event) {\n    let e = <KeyboardEvent> event;\n    if (this.OnlyNumber) {\n      if ([46, 8, 9, 27, 13].indexOf(e.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (e.keyCode === 65 && (e.ctrlKey || e.metaKey)) ||\n        // Allow: Ctrl+C\n        (e.keyCode === 67 && (e.ctrlKey || e.metaKey)) ||\n        // Allow: Ctrl+V\n        (e.keyCode === 86 && (e.ctrlKey || e.metaKey)) ||\n        // Allow: Ctrl+X\n        (e.keyCode === 88 && (e.ctrlKey || e.metaKey)) ||\n        // Allow: home, end, left, right\n        (e.keyCode >= 35 && e.keyCode <= 39)) {\n          // let it happen, don't do anything\n          return;\n        }\n        // Ensure that it is a number and stop the keypress\n        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {\n            e.preventDefault();\n        }\n      }\n  }\n\n}\n",
      "selector": "[OnlyNumber]",
      "providers": [],
      "inputsClass": [
        {
          "name": "OnlyNumber",
          "line": 10,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "keydown",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "argsDecorator": ["$event"],
          "line": 12
        }
      ],
      "propertiesClass": [],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "optional": true
          }
        ],
        "line": 6,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "optional": true,
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    }
  ],
  "components": [
    {
      "name": "AddressesComponent",
      "id": "component-AddressesComponent-f7527f7bc0a03e21e6a32f7c2ee95a14",
      "file": "src/app/modals/addresses/addresses.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-addresses",
      "styleUrls": ["./addresses.component.scss"],
      "styles": [],
      "templateUrl": ["./addresses.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "addresses",
          "defaultValue": "addressesOrder",
          "line": 14,
          "type": "Array<IAddressItem>"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "addAddress",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        },
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        },
        {
          "name": "returnProfile",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { IAddressItem } from 'src/app/models/address.model';\nimport { ProfileComponent } from '../profile/profile.component';\nimport { addressesOrder } from 'src/app/mockups/address.mockup';\nimport { ADDRESS_FORM_TOKEN } from '../address-form/address-form';\n\n@Component({\n  selector: 'app-addresses',\n  templateUrl: './addresses.component.html',\n  styleUrls: ['./addresses.component.scss']\n})\nexport class AddressesComponent implements OnInit {\n  @Input() addresses: Array<IAddressItem> = addressesOrder;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService, @Inject(ADDRESS_FORM_TOKEN) private addressFormComponent: any) { }\n\n  ngOnInit(): void {\n  }\n\n  addAddress(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.addressFormComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data: {\n        address: null,\n      }\n    })\n  }\n\n  closeModal(): void{\n    this.modalRef && this.modalRef.hide();\n  }\n\n  returnProfile(): void{\n    this.closeModal();\n    this.modalRef = this.modalService.show( ProfileComponent , {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./addresses.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "addressFormComponent",
            "type": "any"
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "addressFormComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0  d-flex\" id=\"myModalLabel\">\n    <mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" style=\"cursor: pointer;\" (click)=\"returnProfile()\"></mdb-icon>\n    <strong>Mis direcciones</strong>\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <label class=\"my-0 red-text h5\"></label>\n    <div class=\"list-group\">\n      <app-address-item *ngFor=\"let addressItem of addresses\" [address]=\"addressItem\"></app-address-item>\n    </div>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <app-button class=\"w-100\" [size]=\"100\" [label]=\"'Agregar nueva dirección'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"addAddress()\"></app-button>\n</div>\n"
    },
    {
      "name": "AddressFormComponent",
      "id": "component-AddressFormComponent-e30ba1581f016303090c870bc729f267",
      "file": "src/app/modals/address-form/address-form.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-address-form",
      "styleUrls": ["./address-form.component.scss"],
      "styles": [],
      "templateUrl": ["./address-form.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "address",
          "type": "IAddressItem",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "addressForm",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 66
        },
        {
          "name": "createAddress",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        },
        {
          "name": "deleteAddress",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        },
        {
          "name": "updateAddress",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        },
        {
          "name": "userAddresses",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { IAddressItem } from 'src/app/models/address.model';\nimport { AddressesComponent } from '../addresses/addresses.component';\n\n@Component({\n  selector: 'app-address-form',\n  templateUrl: './address-form.component.html',\n  styleUrls: ['./address-form.component.scss']\n})\nexport class AddressFormComponent implements OnInit {\n  address: IAddressItem;\n  addressForm: FormGroup;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService) { }\n\n  ngOnInit(): void {\n    this.addressForm = new FormGroup({\n      name: new FormControl('',[Validators.required]),\n      type_address: new FormControl('',[Validators.required]),\n      address: new FormControl('',[Validators.required]),\n      department: new FormControl('',[Validators.required]),\n      province: new FormControl('',[Validators.required]),\n      district: new FormControl('',[Validators.required]),\n      reference: new FormControl(''),\n      cellphone: new FormControl(null, [Validators.required])\n    })\n    if(this.address){\n      this.addressForm.addControl('_id', new FormControl(''));\n      this.addressForm.patchValue(this.address);\n      this.addressForm.controls['department'].patchValue(this.address.department.name);\n      this.addressForm.controls['province'].patchValue(this.address.province.name);\n      this.addressForm.controls['district'].patchValue(this.address.district.name);\n    }\n  }\n\n  createAddress(): void {\n    this.userAddresses();\n  }\n\n  updateAddress(): void {\n    this.userAddresses();\n  }\n\n  deleteAddress(): void {\n    this.userAddresses();\n  }\n\n  userAddresses(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(AddressesComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data: {\n        address: this.address\n      }\n    })\n  }\n\n  closeModal(): void{\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./address-form.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">\n    <mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" style=\"cursor: pointer;\" (click)=\"userAddresses()\"></mdb-icon>\n    <strong>\n      <ng-container *ngIf=\"!address\">Agregar dirección</ng-container>\n      <ng-container *ngIf=\"address\">Editar dirección</ng-container>\n    </strong>\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <form [formGroup]=\"addressForm\">\n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\n          <div class=\"form-group\">\n            <div class=\"input-block\">\n              <label for=\"name\"><strong>Nombrar de dirección</strong></label>\n              <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label><strong>Tipo</strong></label>\n              <select class=\"form-control\" id=\"type_address\" formControlName=\"type_address\" mdbInput mdbValidate>\n                <option selected disabled></option>\n                <option value=\"Casa\">Casa</option>\n                <option value=\"Casa de Playa\">Casa de Playa</option>\n              </select>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"name\"><strong>Dirección</strong></label>\n              <input type=\"text\" id=\"address\" formControlName=\"address\" class=\"form-control\" mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label><strong>Departamento</strong></label>\n              <select class=\"form-control\" id=\"department\" formControlName=\"department\" mdbInput mdbValidate>\n                <option selected disabled></option>\n                <option value=\"Lima\">Lima</option>\n                <option value=\"Ancash\">Ancash</option>\n              </select>\n            </div>\n            <div class=\"input-block\">\n              <label><strong>Provincia</strong></label>\n              <select class=\"form-control\" id=\"province\" formControlName=\"province\" mdbInput mdbValidate>\n                <option selected disabled></option>\n                <option value=\"Lima\">Lima</option>\n                <option value=\"Barranca\">Barranca</option>\n              </select>\n            </div>\n            <div class=\"input-block\">\n              <label><strong>Distrito</strong></label>\n              <select class=\"form-control\" id=\"district\" formControlName=\"district\" mdbInput mdbValidate>\n                <option selected disabled></option>\n                <option value=\"Surco\">Surco</option>\n                <option value=\"San Borja\">San Borja</option>\n              </select>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"name\"><strong>Referencia</strong></label>\n              <input type=\"text\" id=\"reference\" formControlName=\"reference\" class=\"form-control\" mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"name\"><strong>Teléfono</strong></label>\n              <input type=\"number\" id=\"cellphone\" formControlName=\"cellphone\" class=\"form-control\" mdbInput mdbValidate>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <app-button class=\"w-100\" [color]=\"'primary-outline'\" [size]=\"100\" [label]=\"'Agregar dirección'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"createAddress()\" *ngIf=\"!address\" [disabled]=\"addressForm.invalid\"></app-button>\n  <app-button class=\"w-100\" [color]=\"'primary-outline'\" [size]=\"100\" [label]=\"'Guardar cambios'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"updateAddress()\" *ngIf=\"address\" [disabled]=\"addressForm.invalid\"></app-button>\n  <app-button class=\"w-100\" [size]=\"100\" [label]=\"'Eliminar dirección'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"deleteAddress()\" *ngIf=\"address\" [disabled]=\"addressForm.invalid\"></app-button>\n</div>\n"
    },
    {
      "name": "AddressItemComponent",
      "id": "component-AddressItemComponent-237157058685f6b9feeba6a17c594db1",
      "file": "src/app/modals/addresses/address-item/address-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-address-item",
      "styleUrls": ["./address-item.component.scss"],
      "styles": [],
      "templateUrl": ["./address-item.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "address",
          "line": 14,
          "type": "IAddressItem"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "addressDetail",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\n\nimport { IAddressItem } from 'src/app/models/address.model';\nimport { ADDRESS_FORM_TOKEN } from '../../address-form/address-form';\nimport { AddressFormComponent } from '../../address-form/address-form.component';\n\n@Component({\n  selector: 'app-address-item',\n  templateUrl: './address-item.component.html',\n  styleUrls: ['./address-item.component.scss']\n})\nexport class AddressItemComponent implements OnInit {\n  @Input() address: IAddressItem;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService, @Inject(ADDRESS_FORM_TOKEN) private addressFormComponent: any) { }\n\n  ngOnInit(): void {\n  }\n\n  addressDetail(): void {\n    this.modalRef && this.modalRef.hide();\n    this.modalRef = this.modalService.show(this.addressFormComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data: {\n        address: this.address\n      }\n    });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./address-item.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "addressFormComponent",
            "type": "any"
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "addressFormComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<a class=\"list-group-item list-group-item-action flex-column align-items-start my-1 py-4\">\n  <div class=\"d-flex w-100 justify-content-between\">\n    <h6 class=\"mb-1\"><strong>{{address.name}}</strong></h6>\n    <small (click)=\"addressDetail()\"><a><mdb-icon fas icon=\"edit\" class=\"red-text fa-1-3x\"></mdb-icon></a></small>\n  </div>\n  <small class=\"d-block\">Dirección: {{address.address}}</small>\n  <small>{{address.department.name}}, {{address.province.name}}, {{address.district.name}}</small>\n</a>\n"
    },
    {
      "name": "AppComponent",
      "id": "component-AppComponent-01be83018d8bd0c9c152f538427c395e",
      "file": "src/app/app.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-root",
      "styleUrls": ["./app.component.scss"],
      "styles": [],
      "templateUrl": ["./app.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "title",
          "defaultValue": "'Feria ScotiaPuntos'",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methodsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Feria ScotiaPuntos';\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./app.component.scss"
        }
      ],
      "stylesData": "",
      "templateData": "<app-header></app-header>\n<section class=\"overflow-hidden\">\n  <router-outlet></router-outlet>\n</section>\n<app-footer></app-footer>\n"
    },
    {
      "name": "BannerComponent",
      "id": "component-BannerComponent-aca8c85b327dc9a654ff40b1880f9b80",
      "file": "src/app/shared/banner/banner.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-banner",
      "styleUrls": ["./banner.component.scss"],
      "styles": [],
      "templateUrl": ["./banner.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "banner",
          "line": 10,
          "type": "IBanner"
        },
        {
          "name": "color",
          "defaultValue": "'purple'",
          "line": 9
        },
        {
          "name": "withButton",
          "defaultValue": "true",
          "line": 11,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { IBanner } from '../../models/banner.model';\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.scss'],\n})\nexport class BannerComponent implements OnInit {\n  @Input() color = 'purple';\n  @Input() banner: IBanner;\n  @Input() withButton: boolean = true;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import \"_media\";\n\n.card-img-top {\n  height: 8rem;\n  object-fit: cover;\n}\n@include media-breakpoint-up(sm) {\n  .card-img-top {\n    height: 11rem;\n  }\n}\n",
          "styleUrl": "./banner.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 11
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"card border-0 h-100 text-white font-family-2\" [ngClass]=\"color\">\n  <div class=\"view overlay waves-light\" mdbWavesEffect>\n    <img class=\"card-img-top\" [src]=\"banner?.image_cover\" />\n    <a [href]=\"banner?.friendly_url\">\n      <div class=\"mask rgba-white-slight\"></div>\n    </a>\n  </div>\n  <div class=\"card-body px-4 pt-4 pb-3\">\n    <h2 class=\"mb-2 font-size-5 bold-text\">\n      {{ banner?.title }}\n    </h2>\n    <p class=\"mb-3 font-size-1\">\n      {{ banner?.description }}\n    </p>\n    <div class=\"d-flex\" *ngIf=\"withButton\">\n      <app-button\n        class=\"d-none d-sm-block\"\n        type=\"custom\"\n        color=\"secondary\"\n        label=\"Call to action\"\n        additionalClasses=\"btn-rounded\"\n      ></app-button>\n      <a href=\"http://google.com\" class=\"d-sm-none\">\n        <span class=\"read-more\">Ver más</span>\n      </a>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "BioSecurityComponent",
      "id": "component-BioSecurityComponent-8f1d3021e053eb40f0fcf3c700f607ae",
      "file": "src/app/static-pages/bio-security/bio-security.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-bio-security",
      "styleUrls": ["./bio-security.component.scss"],
      "styles": [],
      "templateUrl": ["./bio-security.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cards",
          "defaultValue": "[]",
          "type": "IComplexCard[]",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "rawContent",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "text",
          "type": "SafeHtml",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { IComplexCard } from 'src/app/models/static-pages.model';\nimport { IBioSecurityResolver } from 'src/app/resolvers/static-pages/bio-security.resolver';\nimport { StaticPagesTransformService } from 'src/app/services/internal/static-pages-transform.service';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-bio-security',\n  templateUrl: './bio-security.component.html',\n  styleUrls: ['./bio-security.component.scss']\n})\nexport class BioSecurityComponent implements OnInit {\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as IBioSecurityResolver;\n  }\n\n  rawContent: IStaticPageBackend;\n  text: SafeHtml;\n  cards: IComplexCard[] = [];\n\n  constructor(private route: ActivatedRoute, private staticPagesTransformService: StaticPagesTransformService) {}\n\n  ngOnInit(): void {\n    this.rawContent = this.resolvedData.content;\n    this.cards = this.staticPagesTransformService.complexCardsStructure(this.rawContent.content_cards);\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host::ng-deep{\n  p{\n    font-family: 'Gotham';\n  }\n}\n",
          "styleUrl": "./bio-security.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService"
          }
        ],
        "line": 21,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 15
          }
        }
      },
      "templateData": "<app-page-hero class=\"d-block contain-sm mb-3 mb-md-5\" [title]=\"'Medidas de bioseguridad'\" [imgUrl]=\"'http://placekitten.com/1000/1000'\" [url]=\"''\" [color]=\"'black-light'\"></app-page-hero>\n<div class=\"px-sm-5 contain mt-3\">\n  <div class=\"d-flex w-100 justify-content-between m-auto\">\n    <div class=\"d-flex flex-column mx-4\" *ngFor=\"let card of cards\">\n      <app-banner [withButton]=\"false\" [color]=\"card.color\" [banner]=\"{\n        title: card.title,\n        description: card.subtitle,\n        image_cover: card.url + card.iconURL,\n        friendly_url: ''\n      }\"></app-banner>\n      <p class=\"font-size-3 mt-5 mb-3\"><strong>{{card.description.title}}</strong></p>\n      <p class=\"font-size-3\">{{card.description.text}}</p>\n    </div>\n  </div>\n  <div class=\"w-100 py-5\"></div>\n</div>\n<div class=\"w-100 py-5\"></div>\n"
    },
    {
      "name": "ButtonComponent",
      "id": "component-ButtonComponent-34c5558632f61ecd01fc9986c206c96e",
      "file": "src/app/micro/button/button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-button",
      "styleUrls": ["./button.component.scss"],
      "styles": [],
      "templateUrl": ["./button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "additionalClasses",
          "line": 14,
          "type": "string"
        },
        {
          "name": "bold",
          "defaultValue": "false",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "color",
          "defaultValue": "'primary'",
          "line": 11,
          "type": "string"
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "line": 19,
          "type": "boolean"
        },
        {
          "name": "hoverable",
          "defaultValue": "false",
          "line": 10,
          "type": "boolean"
        },
        {
          "name": "label",
          "defaultValue": "'Button'",
          "line": 13
        },
        {
          "name": "prefixIcon",
          "line": 15,
          "type": "string"
        },
        {
          "name": "rounded",
          "defaultValue": "false",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "size",
          "defaultValue": "100",
          "line": 12,
          "type": "number"
        },
        {
          "name": "sufixIcon",
          "line": 16,
          "type": "string"
        },
        {
          "name": "type",
          "defaultValue": "'primary'",
          "line": 9,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<Event>()",
          "line": 20,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() type: string = 'primary';\n  @Input() hoverable:boolean = false;\n  @Input() color: string = 'primary';\n  @Input() size: number = 100;\n  @Input() label = 'Button';\n  @Input() additionalClasses:string;\n  @Input() prefixIcon: string;\n  @Input() sufixIcon: string;\n  @Input() rounded:boolean = false;\n  @Input() bold:boolean = false;\n  @Input() disabled: boolean = false;\n  @Output() onClick = new EventEmitter<Event>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public get classes(): string {\n    const hoverable = this.hoverable? 'hoverable': '';\n    const rounded = this.rounded? 'rounded': '';\n    return (['btn z-depth-0', `btn-${this.type}`, `w-${this.size}`, this.additionalClasses, this.color, hoverable, rounded]).join(\" \");\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".btn {\n  box-shadow: none;\n  text-transform: none;\n  font-size: inherit;\n  font-size: var(--font-size-1);\n}\n.btn-rounded {\n  border-radius: 10em;\n}\n\n.primary {\n  background-color: var(--red) !important;\n  border-color: var(--red) !important;\n  color: var(--white) !important;\n  padding: 0.6rem 1.5rem;\n}\n.primary-outline {\n  border: 2px solid var(--red) !important;\n  background-color: transparent !important;\n  color: var(--red) !important;\n  font-weight: bold;\n  padding: 0.6rem 1.5rem;\n  &:hover,\n  &:active {\n    border-color: var(--red) !important;\n    background-color: var(--red) !important;\n    color: var(--white) !important;\n  }\n}\n.secondary {\n  background-color: var(--white) !important;\n  border-color: var(--white) !important;\n  color: var(--black) !important;\n  font-weight: bold;\n}\n\n.secondary-red {\n  background-color: var(--white) !important;\n  border-color: var(--white) !important;\n  color: var(--red) !important;\n  font-weight: bold;\n}\n",
          "styleUrl": "./button.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 20
      },
      "implements": ["OnInit"],
      "accessors": {
        "classes": {
          "name": "classes",
          "getSignature": {
            "name": "classes",
            "type": "string",
            "returnType": "string",
            "line": 27
          }
        }
      },
      "templateData": "<button type=\"button\" mdbBtn mdbWavesEffect (click)=\"onClick.emit($event)\" [ngClass]=\"classes\" [disabled]=\"disabled\">\n    <i *ngIf=\"prefixIcon\" class=\"fas fa-{{prefixIcon}} mx-2\"></i>\n    <span *ngIf=\"!bold\">{{label}}</span>\n    <strong *ngIf=\"bold\">{{label}}</strong>\n    <i *ngIf=\"sufixIcon\" class=\"fas fa-{{sufixIcon}} mx-2\"></i>\n</button>\n"
    },
    {
      "name": "CartComponent",
      "id": "component-CartComponent-c4a8a2a231a88933ca5aafa6971b1de7",
      "file": "src/app/modals/cart/cart.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-cart",
      "styleUrls": ["./cart.component.scss"],
      "styles": [],
      "templateUrl": ["./cart.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cart",
          "defaultValue": "cart",
          "type": "Array<ISupplierOrder>",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "cartBE",
          "defaultValue": "cartFull",
          "type": "ICart",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "checkout",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        },
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { cart, cartFull } from 'src/app/mockups/cart.mockup'\nimport { CheckoutAddressComponent } from '../checkout-address/checkout-address.component';\nimport { ISupplierOrder } from 'src/app/models/supplier-order.model';\nimport { ICart } from 'src/app/models/cart.model';\nimport { CHECKOUT_ADDRESS_TOKEN } from '../checkout-address/checkout-address';\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n  cart: Array<ISupplierOrder> = cart;\n  cartBE: ICart = cartFull;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(CHECKOUT_ADDRESS_TOKEN) private checkoutAddressComponent: any) { }\n\n  ngOnInit(): void {\n    console.log(this.cart)\n  }\n\n  checkout(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutAddressComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data: {\n        subtotal: this.cartBE.subtotal\n      }\n    })\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./cart.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "checkoutAddressComponent",
            "type": "any"
          }
        ],
        "line": 15,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutAddressComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0  d-flex\" id=\"myModalLabel\">\n    <mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" style=\"cursor: pointer;\" (click)=\"closeModal()\"></mdb-icon>\n    Mi carrito de compras\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-0\">\n    <div class=\"list-group\">\n      <app-cart-modal-item *ngFor=\"let supplier of cart\" [supplierOrder]=\"supplier\"></app-cart-modal-item>\n    </div>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <div class=\"d-flex flex-column flex-grow-1 px-2 py-2 mx-2\">\n    <div class=\"d-flex w-100 my-2\">\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <label class=\"h5 red-text\"><strong>Subtotal</strong></label>\n      <label class=\"h5 red-text\"><strong>{{cartBE.subtotal | currency: 'S/ '}}</strong></label>\n    </div>\n    <div class=\"rounded px-2 my-2 beige-light\">\n      <p class=\"disclaimer py-1 grey-dark-text\">\n        <strong>Recuerda que puedes pagar con:</strong><br/>\n        1. Tarjeta Scotiabank<br/>\n        2. Tarjeta Scotiabank + Scotia Puntos<br/>\n        3. Solo canje Scotia Puntos\n      </p>\n    </div>\n  </div>\n  <app-button class=\"w-100 d-flex mx-2\" [size]=\"100\" [label]=\"'Procesar compra'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"checkout()\"></app-button>\n</div>\n"
    },
    {
      "name": "CartModalItemComponent",
      "id": "component-CartModalItemComponent-7b0b41c2e507600f683335c165e9c5b0",
      "file": "src/app/modals/cart/cart-modal-item/cart-modal-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-cart-modal-item",
      "styleUrls": ["./cart-modal-item.component.scss"],
      "styles": [],
      "templateUrl": ["./cart-modal-item.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "supplierOrder",
          "line": 10,
          "type": "ISupplierOrder"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ISupplierOrder } from 'src/app/models/supplier-order.model';\n\n@Component({\n  selector: 'app-cart-modal-item',\n  templateUrl: './cart-modal-item.component.html',\n  styleUrls: ['./cart-modal-item.component.scss']\n})\nexport class CartModalItemComponent implements OnInit {\n  @Input() supplierOrder: ISupplierOrder;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./cart-modal-item.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 10
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"d-flex rounded grey-border flex-column align-center px-3 py-2 my-2\">\n  <div class=\"d-flex w-100 my-1\">\n    <label>Vendido por <strong>{{supplierOrder.name}}</strong></label>\n  </div>\n  <hr class=\"my-0 w-100\">\n  <div class=\"d-flex w-100 my-1 flex-column\">\n    <app-cart-modal-item-product *ngFor=\"let itemProduct of supplierOrder.products\" [product]=\"itemProduct\"></app-cart-modal-item-product>\n  </div>\n  <hr class=\"my-0 w-100\">\n  <div class=\"d-flex w-100 my-2 justify-content-between\">\n    <div class=\"d-flex w-100 flex-shrink-2\"></div>\n    <div class=\"d-flex w-100 flex-column mx-2\">\n      <div class=\"d-flex w-100 justify-content-between\">\n        <label>Costo de envio</label>\n        <label *ngIf=\"supplierOrder.delivery_price\">{{ supplierOrder.delivery_price | currency: 'S/ '}}</label>\n        <label *ngIf=\"!supplierOrder.delivery_price\">Por definir</label>\n      </div>\n      <div class=\"d-flex w-100 justify-content-between\">\n        <label>Tiempo de entrega</label>\n        <label *ngIf=\"supplierOrder.delivery_time\">{{ supplierOrder.delivery_time}}</label>\n        <label *ngIf=\"!supplierOrder.delivery_time\">Por definir</label>\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "CartModalItemProductComponent",
      "id": "component-CartModalItemProductComponent-e8fbc7f42035dd980d16b1f0e1364157",
      "file": "src/app/modals/cart/cart-modal-item/cart-modal-item-product/cart-modal-item-product.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-cart-modal-item-product",
      "styleUrls": ["./cart-modal-item-product.component.scss"],
      "styles": [],
      "templateUrl": ["./cart-modal-item-product.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "product",
          "line": 10,
          "type": "ICartItem"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { ICartItem } from 'src/app/models/cart-item.model';\n\n@Component({\n  selector: 'app-cart-modal-item-product',\n  templateUrl: './cart-modal-item-product.component.html',\n  styleUrls: ['./cart-modal-item-product.component.scss']\n})\nexport class CartModalItemProductComponent implements OnInit {\n  @Input() product: ICartItem;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./cart-modal-item-product.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 10
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"d-flex w-100 my-2 justify-content-between\">\n  <div class=\"d-flex w-100 flex-shrink-2\" >\n    <img class=\"rounded item-image\" src=\"https://via.placeholder.com/75x75\">\n  </div>\n  <div class=\"d-flex w-100 flex-column mx-3\">\n    <div class=\"d-flex w-100 justify-content-between\">\n      <h6 class=\"my-0\"><strong>{{product.name_product}}</strong></h6>\n      <label class=\"my-0\">Cantidad: {{product.quantity}}</label>\n    </div>\n    <div class=\"d-flex w-100\">\n      <label class=\"my-0\">{{product.info_product.brand}}</label>\n    </div>\n    <hr class=\"my-2 w-100\">\n    <div class=\"d-flex w-100 justify-content-between\">\n      <label class=\"red-text my-0\">Precio Scotiabank</label>\n      <label class=\"red-text my-0\"><strong>{{ product.total_price | currency: 'S/ '}}</strong></label>\n    </div>\n    <div class=\"d-flex w-100 justify-content-between\">\n      <label class=\"my-0\">ScotiaPuntos</label>\n      <label class=\"my-0\"><strong>{{ product.total_price * 300 | number: ''}}</strong></label>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "CategoryBrandCardComponent",
      "id": "component-CategoryBrandCardComponent-d67ec1e2f7ece937ce6f88a419fe22e6",
      "file": "src/app/core/category/category-brand-card/category-brand-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-category-brand-card",
      "styleUrls": ["./category-brand-card.component.scss"],
      "styles": [],
      "templateUrl": ["./category-brand-card.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "brand",
          "line": 13,
          "type": "IBrandBackend"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "catService",
          "type": "CategoryService",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  CategoryService,\n  IBrandBackend,\n} from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-category-brand-card',\n  templateUrl: './category-brand-card.component.html',\n  styleUrls: ['./category-brand-card.component.scss'],\n})\nexport class CategoryBrandCardComponent implements OnInit {\n  @Input() brand: IBrandBackend;\n  constructor(public catService: CategoryService) {}\n\n  ngOnInit(): void {\n    console.log('brand', this.brand);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import \"_media\";\n\n.brand {\n  height: 7rem;\n}\n\n@include media-breakpoint-up(sm) {\n  .brand {\n    height: 12rem;\n  }\n}\n",
          "styleUrl": "./category-brand-card.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "catService",
            "type": "CategoryService"
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "catService",
            "type": "CategoryService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div\n  class=\"card card-image view overlay waves-light img-contain brand\"\n  [style.background-image]=\"\n    'url(' + catService.urlAttachment + brand.image_logo_link + ')'\n  \"\n  mdbWavesEffect\n>\n  <a [routerLink]=\"['/main/category', 'hogar_3', 'brand', brand.friendly_url]\">\n    <div class=\"mask rgba-white-slight\"></div>\n  </a>\n</div>\n"
    },
    {
      "name": "CategoryBrandListComponent",
      "id": "component-CategoryBrandListComponent-c136553a1516532a7241b852ba4df742",
      "file": "src/app/core/category/category-brand-list/category-brand-list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: SWIPER_CONFIG, useValue: CUSTOM_SWIPER_CONFIG,\n}"
        }
      ],
      "selector": "app-category-brand-list",
      "styleUrls": ["./category-brand-list.component.scss"],
      "styles": [],
      "templateUrl": ["./category-brand-list.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "_brands",
          "defaultValue": "[]",
          "line": 56,
          "type": "IBrandBackend[]"
        },
        {
          "name": "type",
          "defaultValue": "'carousel'",
          "line": 57,
          "type": "CategoryBrandListType"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "swiperDirective",
          "type": "SwiperDirective",
          "optional": false,
          "description": "",
          "line": 58,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "SwiperDirective"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport {\n  SwiperDirective,\n  SwiperConfigInterface,\n  SWIPER_CONFIG,\n} from 'ngx-swiper-wrapper';\nimport {\n  CategoryBrandListType,\n  ICategory,\n} from 'src/app/models/category.model';\nimport { ICategoryGroup } from 'src/app/models/category-group.model';\nimport { IBrandBackend } from 'src/app/services/category.service';\n\nconst CUSTOM_SWIPER_CONFIG: SwiperConfigInterface = {\n  direction: 'horizontal',\n  slidesPerView: 2,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: true,\n  pagination: true,\n  spaceBetween: 0,\n  breakpoints: {\n    // when window width is >= $px\n    768: {\n      //md\n      slidesPerView: 2,\n    },\n    992: {\n      //lg\n      slidesPerView: 3,\n    },\n    1200: {\n      //xl\n      slidesPerView: 4,\n    },\n    1600: {\n      //xxl\n      slidesPerView: 5,\n    },\n  },\n};\n@Component({\n  selector: 'app-category-brand-list',\n  templateUrl: './category-brand-list.component.html',\n  styleUrls: ['./category-brand-list.component.scss'],\n  providers: [\n    {\n      provide: SWIPER_CONFIG,\n      useValue: CUSTOM_SWIPER_CONFIG,\n    },\n  ],\n})\nexport class CategoryBrandListComponent implements OnInit {\n  @Input() _brands: IBrandBackend[] = [];\n  @Input() type: CategoryBrandListType = 'carousel';\n  @ViewChild(SwiperDirective) swiperDirective: SwiperDirective;\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log('_brands', this._brands);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "\n",
          "styleUrl": "./category-brand-list.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 58
      },
      "implements": ["OnInit"],
      "templateData": "<app-section-header>\n  Marcas asociadas\n</app-section-header>\n<div *ngIf=\"type === 'carousel'\">\n  <div class=\"carousel carousel-controls-outer\">\n    <div class=\"carousel-prev\" (click)=\"swiperDirective.prevSlide()\">\n      <mdb-icon class=\"grey-text\" fas icon=\"chevron-left\" size=\"2x\"></mdb-icon>\n    </div>\n    <div class=\"carousel-body swiper-container\" swiper>\n      <div class=\"swiper-wrapper\">\n        <div class=\"swiper-slide\" *ngFor=\"let brand of _brands\">\n          <app-category-brand-card\n            class=\"d-block px-1\"\n            [brand]=\"brand\"\n          ></app-category-brand-card>\n        </div>\n      </div>\n    </div>\n    <div class=\"carousel-next\" (click)=\"swiperDirective.nextSlide()\">\n      <mdb-icon class=\"grey-text\" fas icon=\"chevron-right\" size=\"2x\"></mdb-icon>\n    </div>\n  </div>\n  <div class=\"swiper-pagination d-lg-none\"></div>\n</div>\n<div class=\"row no-gutters px-sm-5 mx-lg-5\" *ngIf=\"type === 'grid'\">\n  <app-category-brand-card\n    *ngFor=\"let brand of _brands\"\n    [brand]=\"brand\"\n    class=\"d-block px-1 pb-3 col-md-6 col-lg-4 col-xl-3 col-xxl-1-5\"\n  ></app-category-brand-card>\n</div>\n"
    },
    {
      "name": "CategoryCardComponent",
      "id": "component-CategoryCardComponent-b21138c97b56d816826235401dcb3c47",
      "file": "src/app/core/category/category-card/category-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-category-card",
      "styleUrls": ["./category-card.component.scss"],
      "styles": [],
      "templateUrl": ["./category-card.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "category",
          "line": 12,
          "type": "ICategoryBackend"
        },
        {
          "name": "color",
          "defaultValue": "'pink'",
          "line": 13,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { ICategory } from 'src/app/models/category.model';\nimport { ICategoryGroup } from 'src/app/models/category-group.model';\nimport { ICategoryBackend } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-category-card',\n  templateUrl: './category-card.component.html',\n  styleUrls: ['./category-card.component.scss'],\n})\nexport class CategoryCardComponent implements OnInit {\n  @Input() category: ICategoryBackend;\n  @Input() color: string = 'pink';\n\n  constructor() {}\n\n  ngOnInit(): void {\n    console.log(this.category);\n  }\n\n  get classes() {\n    return [this.color].join(' ');\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import \"_media\";\n\n.card-img-top {\n  height: 2rem;\n  object-fit: contain;\n  object-position: left;\n}\n\n@include media-breakpoint-up(sm) {\n  .card-img-top {\n    height: 6rem;\n  }\n}\n",
          "styleUrl": "./category-card.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 13
      },
      "implements": ["OnInit"],
      "accessors": {
        "classes": {
          "name": "classes",
          "getSignature": {
            "name": "classes",
            "type": "",
            "returnType": "",
            "line": 21
          }
        }
      },
      "templateData": "<div\n  class=\"card p-2 p-sm-3 border-0 bold-text text-white view overlay\"\n  [ngClass]=\"classes\"\n>\n  <a [routerLink]=\"['/main/category/' + category.friendly_url]\">\n    <img\n      class=\"card-img-top mb-2 mb-sm-4\"\n      src=\"http://placekitten.com/100/100\"\n    />\n    <div class=\"mask rgba-white-slight\"></div>\n  </a>\n  <div class=\"card-body p-0 font-family-2 font-size-35\">\n    {{ category.name }}\n  </div>\n</div>\n"
    },
    {
      "name": "CategoryComponent",
      "id": "component-CategoryComponent-635915276f2479fc22f9960a8de98fd7",
      "file": "src/app/core/category/category.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-category",
      "styleUrls": ["./category.component.scss"],
      "styles": [],
      "templateUrl": ["./category.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_brands",
          "defaultValue": "[]",
          "type": "IBrandBackend[]",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "category",
          "type": "ICategoryBackend",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "isBrandPage",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 28
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ICategoryPage } from '../../resolvers/category.resolver';\nimport { IProductItem } from 'src/app/models/product.model';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CategoryService,\n  IBrandBackend,\n  ICategoryBackend,\n} from 'src/app/services/category.service';\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss'],\n})\nexport class CategoryComponent implements OnInit {\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as ICategoryPage;\n  }\n\n  category: ICategoryBackend;\n  _brands: IBrandBackend[] = [];\n  isBrandPage: boolean;\n  constructor(\n    private route: ActivatedRoute,\n    private catService: CategoryService\n  ) {}\n\n  ngOnInit(): void {\n    this.catService.category = this.resolvedData.category;\n\n    this.category = this.resolvedData.category;\n    this._brands = this.resolvedData._brands;\n    this.isBrandPage = this.resolvedData.isBrandPage;\n\n    console.log('category', this.category);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./category.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "catService",
            "type": "CategoryService"
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "catService",
            "type": "CategoryService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 16
          }
        }
      },
      "templateData": "<app-category-hero\n  [category]=\"category\"\n  class=\"d-block contain-sm mb-3 mb-md-5\"\n></app-category-hero>\n\n<div class=\"contain px-sm-5\">\n  <ul class=\"mb-3 mb-md-5 custom-breadcrumb\">\n    <li class=\"breadcrumb-item\">\n      <a\n        [routerLink]=\"['/']\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        ><span>Inicio</span></a\n      >\n    </li>\n    <li class=\"breadcrumb-item\">\n      <a\n        [routerLink]=\"['/category/' + category.friendly_url]\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        ><span>{{ category.name }}</span></a\n      >\n    </li>\n  </ul>\n\n  <app-category-brand-list\n    type=\"carousel\"\n    class=\"d-block mb-5\"\n    [_brands]=\"_brands\" *ngIf=\"!isBrandPage\"\n  ></app-category-brand-list>\n  <app-product-list\n    type=\"carousel\"\n    class=\"d-block mb-5\"\n    [filters]=\"category.filters\"\n    [_brands]=\"_brands\"\n    [isPaginated]=\"true\"\n  ></app-product-list>\n</div>\n"
    },
    {
      "name": "CategoryHeroComponent",
      "id": "component-CategoryHeroComponent-e653049bb06b9c62c5dde446e2c33762",
      "file": "src/app/core/category/category-hero/category-hero.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-category-hero",
      "styleUrls": ["./category-hero.component.scss"],
      "styles": [],
      "templateUrl": ["./category-hero.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "category",
          "line": 12,
          "type": "ICategoryBackend"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "catService",
          "type": "CategoryService",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport {\n  CategoryService,\n  ICategoryBackend,\n} from 'src/app/services/category.service';\n@Component({\n  selector: 'app-category-hero',\n  templateUrl: './category-hero.component.html',\n  styleUrls: ['./category-hero.component.scss'],\n})\nexport class CategoryHeroComponent implements OnInit {\n  @Input() category: ICategoryBackend;\n  constructor(public catService: CategoryService) {}\n  ngOnInit(): void {\n    console.log('hero', this.category);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".hero,\n.hero-body,\n.hero-img {\n  min-height: 7rem;\n}\n\n.hero-body {\n  align-items: center;\n}\n",
          "styleUrl": "./category-hero.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "catService",
            "type": "CategoryService"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "catService",
            "type": "CategoryService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"hero row no-gutters orange text-white\">\n  <div class=\"col-6 d-flex align-self-start align-items-center hero-body\">\n    <h1 class=\"font-size-7 bold-text\">\n      {{ category.name }}\n    </h1>\n  </div>\n  <div\n    class=\"col-6 img-cover hero-img\"\n    [style.background-image]=\"\n      'url(' + catService.urlAttachment + category.image_banner + ')'\n    \"\n  ></div>\n</div>\n"
    },
    {
      "name": "CategoryListComponent",
      "id": "component-CategoryListComponent-78c73516f333c2754c801ce13f8e01b6",
      "file": "src/app/core/category/category-list/category-list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: SWIPER_CONFIG, useValue: CUSTOM_SWIPER_CONFIG,\n}"
        }
      ],
      "selector": "app-category-list",
      "styleUrls": ["./category-list.component.scss"],
      "styles": [],
      "templateUrl": ["./category-list.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "categories",
          "defaultValue": "[]",
          "line": 33,
          "type": "ICategoryBackend[]"
        },
        {
          "name": "type",
          "defaultValue": "'grid'",
          "line": 34,
          "type": "CategoryListType"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cardColors",
          "defaultValue": "[\n    'purple',\n    'pink',\n    'yellow',\n    'orange',\n    'red-light',\n    'orange-light',\n    'purple-light',\n    'pink-light',\n  ]",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "swiperDirective",
          "type": "SwiperDirective",
          "optional": false,
          "description": "",
          "line": 46,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "SwiperDirective"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { CategoryListType } from 'src/app/models/category.model';\nimport {\n  SwiperDirective,\n  SwiperConfigInterface,\n  SWIPER_CONFIG,\n} from 'ngx-swiper-wrapper';\nimport { ICategoryBackend } from 'src/app/services/category.service';\n\nconst CUSTOM_SWIPER_CONFIG: SwiperConfigInterface = {\n  direction: 'horizontal',\n  slidesPerView: 2,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: false,\n  pagination: false,\n  spaceBetween: 0,\n};\n@Component({\n  selector: 'app-category-list',\n  templateUrl: './category-list.component.html',\n  styleUrls: ['./category-list.component.scss'],\n  providers: [\n    {\n      provide: SWIPER_CONFIG,\n      useValue: CUSTOM_SWIPER_CONFIG,\n    },\n  ],\n})\nexport class CategoryListComponent implements OnInit {\n  @Input() categories: ICategoryBackend[] = [];\n  @Input() type: CategoryListType = 'grid';\n  cardColors = [\n    'purple',\n    'pink',\n    'yellow',\n    'orange',\n    'red-light',\n    'orange-light',\n    'purple-light',\n    'pink-light',\n  ];\n\n  @ViewChild(SwiperDirective) swiperDirective: SwiperDirective;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use 'variables';\n\n:host {\n  position: relative;\n  //  manage index from another file\n  z-index: variables.$z-category-list-hero;\n}\n",
          "styleUrl": "./category-list.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 46
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"p-3 p-sm-5 z-depth-1 card\">\n  <app-section-header>\n    Categorías\n  </app-section-header>\n  <div class=\"px-lg-5\">\n    <div *ngIf=\"type === 'carousel'\" class=\"swiper-container\" swiper>\n      <div class=\"swiper-wrapper\">\n        <div\n          class=\"swiper-slide\"\n          *ngFor=\"let category of categories; let i = index\"\n        >\n          <app-category-card\n            class=\"d-block px-1\"\n            [category]=\"category\"\n            [color]=\"cardColors[i % cardColors.length]\"\n          ></app-category-card>\n        </div>\n      </div>\n    </div>\n    <div class=\"row no-gutters\" *ngIf=\"type === 'grid'\">\n      <app-category-card\n        *ngFor=\"let category of categories; let i = index\"\n        class=\"d-block px-1 pb-2 col-6 col-lg-4 col-xl-3\"\n        [category]=\"category\"\n        [color]=\"cardColors[i % cardColors.length]\"\n      ></app-category-card>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "CheckoutAddressComponent",
      "id": "component-CheckoutAddressComponent-e7a74c5ebe771c4213f6a705c3e6abc5",
      "file": "src/app/modals/checkout-address/checkout-address.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-checkout-address",
      "styleUrls": ["./checkout-address.component.scss"],
      "styles": [],
      "templateUrl": ["./checkout-address.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "addresses",
          "defaultValue": "addresses",
          "type": "Array<IAddressItem>",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [114]
        },
        {
          "name": "subtotal",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "methodsClass": [
        {
          "name": "changeChecked",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "checkoutSummary",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27
        },
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        },
        {
          "name": "returnCart",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { IAddressItem } from 'src/app/models/address.model';\nimport { CheckoutSummaryComponent } from '../checkout-summary/checkout-summary.component';\nimport { addresses } from 'src/app/mockups/address.mockup';\nimport { CartComponent } from '../cart/cart.component';\nimport { CHECKOUT_SUMMARY_TOKEN } from '../checkout-summary/checkout-summary';\nimport { CART_TOKEN } from '../cart/cart';\n\n@Component({\n  selector: 'app-checkout-address',\n  templateUrl: './checkout-address.component.html',\n  styleUrls: ['./checkout-address.component.scss']\n})\nexport class CheckoutAddressComponent implements OnInit {\n  addresses: Array<IAddressItem> = addresses;\n  subtotal: number;\n\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(CHECKOUT_SUMMARY_TOKEN) private checkoutSummaryComponent: any,\n    @Inject(CART_TOKEN) private cartComponent: any) { }\n\n  ngOnInit(): void {\n    this.addresses.forEach((e)=>{ e.checked = false });\n  }\n\n  checkoutSummary(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutSummaryComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  changeChecked(event): void{\n    this.addresses.forEach((e)=>{ e.checked = false });\n    this.addresses[event].checked = true;\n  }\n\n  returnCart(): void{\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.cartComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./checkout-address.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "checkoutSummaryComponent",
            "type": "any"
          },
          {
            "name": "cartComponent",
            "type": "any"
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutSummaryComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cartComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n\n  <h4 class=\"modal-title mx-0  d-flex\" id=\"myModalLabel\">\n    <a><mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" style=\"cursor: pointer;\" (click)=\"returnCart()\"></mdb-icon></a>\n    Dirección de envío\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <app-checkout-address-item *ngFor=\"let address of addresses; let i = index\" [address]=\"address\" [position]=\"i\" (onClick)=\"changeChecked($event)\"></app-checkout-address-item>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <div class=\"d-flex flex-column flex-grow-1 px-2 py-2 mx-2\">\n    <div class=\"d-flex w-100 my-2\">\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <label class=\"h5 red-text\"><strong>Subtotal</strong></label>\n      <label class=\"h5 red-text\"><strong>{{ subtotal | currency: 'S/ '}}</strong></label>\n    </div>\n    <div class=\"rounded px-2 my-2 beige-light\">\n      <p class=\"disclaimer py-1 grey-dark-text\">\n        <strong>Recuerda que puedes pagar con:</strong><br/>\n        1. Tarjeta Scotiabank<br/>\n        2. Tarjeta Scotiabank + Scotia Puntos<br/>\n        3. Solo canje Scotia Puntos\n      </p>\n    </div>\n  </div>\n  <app-button class=\"w-100 d-flex mx-2\" [size]=\"100\" [label]=\"'Continuar'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"checkoutSummary()\"></app-button>\n</div>\n"
    },
    {
      "name": "CheckoutAddressItemComponent",
      "id": "component-CheckoutAddressItemComponent-6a4406370ce9e48fb3c7bd2ac9e9f13e",
      "file": "src/app/modals/checkout-address/checkout-address-item/checkout-address-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-checkout-address-item",
      "styleUrls": ["./checkout-address-item.component.scss"],
      "styles": [],
      "templateUrl": ["./checkout-address-item.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "address",
          "line": 11,
          "type": "IAddressItem"
        },
        {
          "name": "position",
          "line": 12,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<number>()",
          "line": 13,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16
        },
        {
          "name": "radioChange",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { addressItem } from 'src/app/mockups/address.mockup';\nimport { IAddressItem } from 'src/app/models/address.model';\n\n@Component({\n  selector: 'app-checkout-address-item',\n  templateUrl: './checkout-address-item.component.html',\n  styleUrls: ['./checkout-address-item.component.scss']\n})\nexport class CheckoutAddressItemComponent implements OnInit {\n  @Input() address: IAddressItem;\n  @Input() position: number;\n  @Output() onClick = new EventEmitter<number>();\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(this.address)\n  }\n\n  radioChange(event): void{\n    this.onClick.emit(this.position);\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./checkout-address-item.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 13
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"d-flex w-100 my-2 py-3 justify-content-between rounded\" [ngClass]=\"{'red-border': address.checked, 'grey-border': !address.checked}\">\n  <div class=\"d-flex flex-shrink-1\" >\n    <app-radio-button [checked]=\"address.checked\" [size]=\"20\" (onClick)=\"radioChange($event)\"></app-radio-button>\n  </div>\n  <div class=\"d-flex w-100 flex-column mx-3\">\n    <div class=\"d-flex w-100 justify-content-between\">\n      <h6><strong>{{address.name}}</strong></h6>\n    </div>\n    <div class=\"d-flex w-100 justify-content-between\">\n      <label class=\"my-0\">{{address.address}}</label>\n    </div>\n    <div class=\"d-flex w-100 justify-content-between\">\n      <label class=\"my-0\">{{address.district.name}}, {{address.province.name}}, {{address.department.name}}</label>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "CheckoutErrorComponent",
      "id": "component-CheckoutErrorComponent-dd6164a37b0657c0f391df1d1a3fffe3",
      "file": "src/app/modals/checkout-error/checkout-error.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-checkout-error",
      "styleUrls": ["./checkout-error.component.scss"],
      "styles": [],
      "templateUrl": ["./checkout-error.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34
        },
        {
          "name": "finishCheckout",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { CART_TOKEN } from '../cart/cart';\nimport { CartComponent } from '../cart/cart.component';\nimport { CheckoutSummaryComponent } from '../checkout-summary/checkout-summary.component';\n\n@Component({\n  selector: 'app-checkout-error',\n  templateUrl: './checkout-error.component.html',\n  styleUrls: ['./checkout-error.component.scss']\n})\nexport class CheckoutErrorComponent implements OnInit {\n\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(CART_TOKEN) private cartComponent: any,) { }\n\n  ngOnInit(): void {\n  }\n\n  finishCheckout(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.cartComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true\n    })\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./checkout-error.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "cartComponent",
            "type": "any"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cartComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative border-none\"></div>\n<div class=\"modal-body scrollbar-primary d-flex align-items-center flex-column\">\n  <div></div>\n  <div class=\"d-flex px-2 py-2 mx-2 my-auto align-center flex-column justify-content-center height-fit-content\">\n    <h3 class=\"text-center\"><strong>¡Ha ocurrido<br>un error!</strong></h3>\n    <img class=\"img-fluid my-5\" src=\"assets/error-checkout.svg\">\n    <label class=\"text-center mx-3 my-2 \">Revise su información de pago.</label>\n    <label class=\"text-center mx-3 my-2 \">Si el problema persiste, contactese al:<br><strong>###-#####</strong></label>\n    <img class=\"checkout-logo mx-auto my-3\" src=\"https://via.placeholder.com/200x80\">\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <app-button class=\"w-100 d-flex mx-2\" [size]=\"100\" [label]=\"'Volver a intentar'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"finishCheckout()\"></app-button>\n</div>\n"
    },
    {
      "name": "CheckoutIzipayComponent",
      "id": "component-CheckoutIzipayComponent-74a3cb18d4c779efeba739afa462c8a7",
      "file": "src/app/modals/checkout-izipay/checkout-izipay.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-checkout-izipay",
      "styleUrls": ["./checkout-izipay.component.scss"],
      "styles": [],
      "templateUrl": ["./checkout-izipay.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [114]
        },
        {
          "name": "total",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "checkoutError",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42
        },
        {
          "name": "checkoutSuccess",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        },
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 73
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22
        },
        {
          "name": "returnReciept",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 56
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { CHECKOUT_ERROR_TOKEN } from '../checkout-error/checkout-error';\nimport { CheckoutErrorComponent } from '../checkout-error/checkout-error.component';\nimport { CHECKOUT_RECEIPT_TOKEN } from '../checkout-receipt/checkout-receipt';\nimport { CheckoutReceiptComponent } from '../checkout-receipt/checkout-receipt.component';\nimport { CHECKOUT_SUCCESS_TOKEN } from '../checkout-success/checkout-success';\nimport { CheckoutSuccessComponent } from '../checkout-success/checkout-success.component';\n\n@Component({\n  selector: 'app-checkout-izipay',\n  templateUrl: './checkout-izipay.component.html',\n  styleUrls: ['./checkout-izipay.component.scss']\n})\nexport class CheckoutIzipayComponent implements OnInit {\n  total: number;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(CHECKOUT_SUCCESS_TOKEN) private checkoutSuccessComponent: any,\n    @Inject(CHECKOUT_ERROR_TOKEN) private checkoutErrorComponent: any,\n    @Inject(CHECKOUT_RECEIPT_TOKEN) private checkoutReceiptComponent: any,) { }\n\n  ngOnInit(): void {\n  }\n\n  checkoutSuccess(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutSuccessComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data:{\n        orderNumber: '123445'\n      }\n    })\n  }\n\n  checkoutError(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutErrorComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  returnReciept(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutReceiptComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data:{\n        total: this.total\n      }\n    })\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./checkout-izipay.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "checkoutSuccessComponent",
            "type": "any"
          },
          {
            "name": "checkoutErrorComponent",
            "type": "any"
          },
          {
            "name": "checkoutReceiptComponent",
            "type": "any"
          }
        ],
        "line": 16,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutSuccessComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutErrorComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutReceiptComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0  d-flex\" id=\"myModalLabel\">\n    <a><mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" (click)=\"returnReciept()\"></mdb-icon></a>\n    Pasarela de Pago\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <app-button class=\"w-100 d-flex mx-2\" [size]=\"100\" [label]=\"'Éxito'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"checkoutSuccess()\"></app-button>\n  <app-button class=\"w-100 d-flex mx-2\" [size]=\"100\" [label]=\"'Error'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"checkoutError()\"></app-button>\n</div>\n"
    },
    {
      "name": "CheckoutReceiptComponent",
      "id": "component-CheckoutReceiptComponent-eaf48b5af43095c29d0d1c06b0743106",
      "file": "src/app/modals/checkout-receipt/checkout-receipt.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-checkout-receipt",
      "styleUrls": ["./checkout-receipt.component.scss"],
      "styles": [],
      "templateUrl": ["./checkout-receipt.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "ballot",
          "defaultValue": "true",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "invoice",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "invoiceForm",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 20,
          "modifierKind": [114]
        },
        {
          "name": "total",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methodsClass": [
        {
          "name": "changeOption",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "checkoutIzipay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32
        },
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24
        },
        {
          "name": "returnSummary",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { CHECKOUT_IZIPAY_TOKEN } from '../checkout-izipay/checkout-izipay';\nimport { CheckoutIzipayComponent } from '../checkout-izipay/checkout-izipay.component';\nimport { CHECKOUT_SUMMARY_TOKEN } from '../checkout-summary/checkout-summary';\nimport { CheckoutSummaryComponent } from '../checkout-summary/checkout-summary.component';\n\n@Component({\n  selector: 'app-checkout-receipt',\n  templateUrl: './checkout-receipt.component.html',\n  styleUrls: ['./checkout-receipt.component.scss']\n})\nexport class CheckoutReceiptComponent implements OnInit {\n  invoice: boolean = false;\n  ballot: boolean = true;\n  invoiceForm: FormGroup;\n  total: number;\n\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(CHECKOUT_IZIPAY_TOKEN) private checkoutIzipayComponent: any,\n    @Inject(CHECKOUT_SUMMARY_TOKEN) private checkoutSummaryComponent: any) { }\n\n  ngOnInit(): void {\n    this.invoiceForm = new FormGroup({\n      name: new FormControl('', [ Validators.required ]),\n      ruc: new FormControl(null, [ Validators.required ]),\n      address: new FormControl('', [ Validators.required ])\n    })\n  }\n\n  checkoutIzipay(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutIzipayComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data:{\n        total: this.total\n      }\n    })\n  }\n\n  returnSummary(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutSummaryComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  changeOption(event){\n    this.invoice = !this.invoice;\n    this.ballot = !this.ballot;\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./checkout-receipt.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "checkoutIzipayComponent",
            "type": "any"
          },
          {
            "name": "checkoutSummaryComponent",
            "type": "any"
          }
        ],
        "line": 18,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutIzipayComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutSummaryComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">\n    <a><mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" (click)=\"returnSummary()\"></mdb-icon></a>\n    Comprobante de pago\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"d-flex px-2 py-2 mx-2 flex-column\">\n    <div class=\"d-flex rounded flex-column align-center py-2\"  [ngClass]=\"{'red-border': ballot, 'grey-border': !ballot}\">\n      <div class=\"d-flex justify-content-space-between py-2\">\n        <app-radio-button [checked]=\"ballot\" [size]=\"20\" (onClick)=\"changeOption($event)\"></app-radio-button>\n        Boleta\n      </div>\n    </div>\n    <div class=\"d-flex rounded flex-column align-center my-2 py-2\" [ngClass]=\"{'red-border': invoice, 'grey-border': !invoice}\">\n      <div class=\"d-flex justify-content-space-between py-2\">\n        <app-radio-button [checked]=\"invoice\" [size]=\"20\" (onClick)=\"changeOption($event)\"></app-radio-button>\n        Factura\n      </div>\n      <div class=\"d-flex justify-content-space-between flex-column py-2 px-4\">\n        <form [formGroup]=\"invoiceForm\">\n          <div class=\"input-block\">\n            <label for=\"name\" [ngClass]=\"!invoice? 'grey-text': ''\"><strong>Razón social</strong></label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" placeholder=\"Ingrese razón social\" class=\"form-control\" mdbInput mdbValidate [readOnly]=\"!invoice\">\n          </div>\n          <div class=\"input-block\">\n            <label for=\"name\" [ngClass]=\"!invoice? 'grey-text': ''\"><strong>RUC</strong></label>\n            <input type=\"number\" id=\"ruc\" formControlName=\"ruc\" placeholder=\"Ingrese RUC\" class=\"form-control\" mdbInput mdbValidate [readOnly]=\"!invoice\">\n          </div>\n          <div class=\"input-block\">\n            <label for=\"name\" [ngClass]=\"!invoice? 'grey-text': ''\"><strong>Teléfono</strong></label>\n            <input type=\"text\" id=\"address\" formControlName=\"address\" placeholder=\"Ingrese dirección\" class=\"form-control\" mdbInput mdbValidate [readOnly]=\"!invoice\">\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <div class=\"d-flex flex-column flex-grow-1 px-2 py-2 mx-2\">\n    <div class=\"d-flex w-100 my-2\">\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <label class=\"h5 red-text\"><strong>Total</strong></label>\n      <label class=\"h5 red-text\"><strong>{{total | currency: 'S/ '}}</strong></label>\n    </div>\n    <div class=\"rounded px-2 my-2 beige-light\">\n      <p class=\"disclaimer py-1 grey-dark-text\">\n        <strong>Recuerda que puedes pagar con:</strong><br/>\n        1. Tarjeta Scotiabank<br/>\n        2. Tarjeta Scotiabank + Scotia Puntos<br/>\n        3. Solo canje Scotia Puntos\n      </p>\n    </div>\n  </div>\n  <app-button class=\"w-100 d-flex mx-2\" [size]=\"100\" [label]=\"'Continuar'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"checkoutIzipay()\"></app-button>\n</div>\n"
    },
    {
      "name": "CheckoutSuccessComponent",
      "id": "component-CheckoutSuccessComponent-043be368d2df5463d72e3869b38ce649",
      "file": "src/app/modals/checkout-success/checkout-success.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-checkout-success",
      "styleUrls": ["./checkout-success.component.scss"],
      "styles": [],
      "templateUrl": ["./checkout-success.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [114]
        },
        {
          "name": "orderNumber",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        },
        {
          "name": "finishCheckout",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\n\n@Component({\n  selector: 'app-checkout-success',\n  templateUrl: './checkout-success.component.html',\n  styleUrls: ['./checkout-success.component.scss']\n})\nexport class CheckoutSuccessComponent implements OnInit {\n  orderNumber: string;\n  constructor(public modalRef: MDBModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  finishCheckout(): void {\n    this.closeModal();\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "\n",
          "styleUrl": "./checkout-success.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative border-none\"></div>\n<div class=\"modal-body scrollbar-primary d-flex align-items-center flex-column\">\n  <div ></div>\n  <div class=\"d-flex px-2 py-2 mx-2 my-auto align-center flex-column justify-content-center height-fit-content\">\n    <h3 class=\"text-center\"><strong>¡Pago realizado<br>con exito!</strong></h3>\n    <img class=\"img-fluid my-5\" src=\"assets/success-checkout.svg\">\n    <label class=\"text-center mx-3 my-2 red-text font-size-2\">Orden Nº <strong>{{orderNumber}}</strong></label>\n    <label class=\"text-center mx-3 my-2 font-size-2\">El detalle de tu compra lo enviaremos al correo electrónico que registraste.</label>\n    <img class=\"checkout-logo mx-auto my-3\" src=\"https://via.placeholder.com/200x80\">\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <app-button class=\"w-100 d-flex mx-2\" [size]=\"100\" [label]=\"'Seguir comprando'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"finishCheckout()\"></app-button>\n</div>\n"
    },
    {
      "name": "CheckoutSummaryComponent",
      "id": "component-CheckoutSummaryComponent-aa1fbfffdda2de11577ec05fe1110904",
      "file": "src/app/modals/checkout-summary/checkout-summary.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-checkout-summary",
      "styleUrls": ["./checkout-summary.component.scss"],
      "styles": [],
      "templateUrl": ["./checkout-summary.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [114]
        },
        {
          "name": "summary",
          "defaultValue": "summary",
          "type": "Array<ISupplierOrder>",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "summaryBE",
          "defaultValue": "summaryBE",
          "type": "ICart",
          "optional": false,
          "description": "",
          "line": 18
        }
      ],
      "methodsClass": [
        {
          "name": "checkoutReciept",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26
        },
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        },
        {
          "name": "returnAddress",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { ICart } from 'src/app/models/cart.model';\nimport { ISupplierOrder } from 'src/app/models/supplier-order.model';\nimport { CheckoutReceiptComponent } from '../checkout-receipt/checkout-receipt.component';\nimport { summary, summaryBE } from 'src/app/mockups/summary.mockup'\nimport { CheckoutAddressComponent } from '../checkout-address/checkout-address.component';\nimport { CHECKOUT_RECEIPT_TOKEN } from '../checkout-receipt/checkout-receipt';\nimport { CHECKOUT_ADDRESS_TOKEN } from '../checkout-address/checkout-address';\n\n@Component({\n  selector: 'app-checkout-summary',\n  templateUrl: './checkout-summary.component.html',\n  styleUrls: ['./checkout-summary.component.scss']\n})\nexport class CheckoutSummaryComponent implements OnInit {\n  summary: Array<ISupplierOrder> = summary;\n  summaryBE: ICart = summaryBE;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(CHECKOUT_RECEIPT_TOKEN) private checkoutReceiptComponent: any,\n    @Inject(CHECKOUT_ADDRESS_TOKEN) private checkoutAddressComponent: any) { }\n\n  ngOnInit(): void {\n  }\n\n  checkoutReciept(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutReceiptComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data: {\n        total: this.summaryBE.subtotal\n      }\n    })\n  }\n\n  returnAddress(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.checkoutAddressComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data: {\n        subtotal: this.summaryBE.subtotal\n      }\n    })\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./checkout-summary.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "checkoutReceiptComponent",
            "type": "any"
          },
          {
            "name": "checkoutAddressComponent",
            "type": "any"
          }
        ],
        "line": 18,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutReceiptComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "checkoutAddressComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">\n    <a><mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" (click)=\"returnAddress()\"></mdb-icon></a>\n    Resumen de compra\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-0\">\n    <div class=\"list-group\">\n      <app-cart-modal-item *ngFor=\"let supplier of summary\" [supplierOrder]=\"supplier\"></app-cart-modal-item>\n    </div>\n\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <div class=\"d-flex flex-column flex-grow-1 px-2 py-2 mx-2\">\n    <div class=\"d-flex w-100 my-2\">\n    </div>\n    <div class=\"d-flex justify-content-between\">\n      <label class=\"h5 red-text\"><strong>Total</strong></label>\n      <label class=\"h5 red-text\"><strong>{{summaryBE.subtotal | currency: 'S/ '}}</strong></label>\n    </div>\n    <div class=\"rounded px-2 my-2 beige-light\">\n      <p class=\"disclaimer py-1 grey-dark-text\">\n        <strong>Recuerda que puedes pagar con:</strong><br/>\n        1. Tarjeta Scotiabank<br/>\n        2. Tarjeta Scotiabank + Scotia Puntos<br/>\n        3. Solo canje Scotia Puntos\n      </p>\n    </div>\n  </div>\n\n  <app-button class=\"w-100 d-flex mx-2\" [size]=\"100\" [label]=\"'Continuar'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"checkoutReciept()\"></app-button>\n</div>\n"
    },
    {
      "name": "ComplaintsBookComponent",
      "id": "component-ComplaintsBookComponent-1375ea8200c73f5570122d23595673f8",
      "file": "src/app/static-pages/complaints-book/complaints-book.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-complaints-book",
      "styleUrls": ["./complaints-book.component.scss"],
      "styles": [],
      "templateUrl": ["./complaints-book.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 16
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IComplaintsBookResolver } from 'src/app/resolvers/static-pages/complaints-book.resolver';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-complaints-book',\n  templateUrl: './complaints-book.component.html',\n  styleUrls: ['./complaints-book.component.scss']\n})\nexport class ComplaintsBookComponent implements OnInit {\n\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as IComplaintsBookResolver;\n  }\n  content: IStaticPageBackend;\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.content = this.resolvedData.content;\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./complaints-book.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          }
        ],
        "line": 16,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 13
          }
        }
      },
      "templateData": "<p>complaints-book works!</p>\n"
    },
    {
      "name": "ContactUsComponent",
      "id": "component-ContactUsComponent-bae8b71979d5fed0f246fb8eabd9e4bc",
      "file": "src/app/static-pages/contact-us/contact-us.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-contact-us",
      "styleUrls": ["./contact-us.component.scss"],
      "styles": [],
      "templateUrl": ["./contact-us.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "form",
          "type": "IForm",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "rawContent",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "text",
          "type": "SafeHtml",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { IForm } from 'src/app/models/form.model';\nimport { IContactUsResolver } from 'src/app/resolvers/static-pages/contact-us.resolver';\nimport { StaticPagesTransformService } from 'src/app/services/internal/static-pages-transform.service';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.scss']\n})\nexport class ContactUsComponent implements OnInit {\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as IContactUsResolver;\n  }\n\n  rawContent: IStaticPageBackend;\n  text: SafeHtml;\n  form: IForm;\n\n  constructor(private route: ActivatedRoute, private staticPagesTransformService: StaticPagesTransformService) {}\n\n  ngOnInit(): void {\n    this.rawContent = this.resolvedData.content;\n    this.text = this.staticPagesTransformService.textHTMLStructure(this.rawContent.content_information);\n    this.form = this.staticPagesTransformService.formStructure(this.rawContent.content_form, null, \"Enviar mensaje\");\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host::ng-deep{\n  p{\n    font-family: 'Gotham';\n  }\n}\n",
          "styleUrl": "./contact-us.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService"
          }
        ],
        "line": 21,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 15
          }
        }
      },
      "templateData": "<app-page-hero class=\"d-block contain-sm mb-3 mb-md-5\" [title]=\"'Contactenos'\" [imgUrl]=\"'http://placekitten.com/1000/1000'\" [url]=\"''\" [color]=\"'black-light'\"></app-page-hero>\n<div class=\"px-sm-5 contain mt-3\">\n  <div class=\"w-75 mx-auto mt-5\" [innerHTML]=\"text\"></div>\n  <div class=\"w-75 mx-auto mt-2 mb-5\">\n    <app-form [form]=\"form\"></app-form>\n  </div>\n  <div class=\"w-100 py-5\"></div>\n</div>\n<div class=\"w-100 py-5\"></div>\n<div class=\"w-100 py-5\"></div>\n"
    },
    {
      "name": "CustomerServiceComponent",
      "id": "component-CustomerServiceComponent-33a5eda27147d9e52f9b9fe555244cf9",
      "file": "src/app/static-pages/customer-service/customer-service.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-customer-service",
      "styleUrls": ["./customer-service.component.scss"],
      "styles": [],
      "templateUrl": ["./customer-service.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "rawContent",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "text",
          "type": "SafeHtml",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { ICustomerServiceResolver } from 'src/app/resolvers/static-pages/customer-service.resolver';\nimport { StaticPagesTransformService } from 'src/app/services/internal/static-pages-transform.service';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-customer-service',\n  templateUrl: './customer-service.component.html',\n  styleUrls: ['./customer-service.component.scss']\n})\nexport class CustomerServiceComponent implements OnInit {\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as ICustomerServiceResolver;\n  }\n\n  rawContent: IStaticPageBackend;\n  text: SafeHtml;\n\n  constructor(private route: ActivatedRoute, private staticPagesTransformService: StaticPagesTransformService) {}\n\n  ngOnInit(): void {\n    this.rawContent = this.resolvedData.content;\n    this.text = this.staticPagesTransformService.textHTMLStructure(this.rawContent.content_information);\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host::ng-deep{\n  p{\n    font-family: 'Gotham';\n  }\n}\n",
          "styleUrl": "./customer-service.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService"
          }
        ],
        "line": 19,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 14
          }
        }
      },
      "templateData": "<app-page-hero class=\"d-block contain-sm mb-3 mb-md-5\" [title]=\"'Servicio de entrega'\" [imgUrl]=\"'http://placekitten.com/1000/1000'\" [url]=\"''\" [color]=\"'black-light'\"></app-page-hero>\n<div class=\"px-sm-5 contain mt-3\">\n  <div class=\"w-75 mx-auto my-5\" [innerHTML]=\"text\"></div>\n  <div class=\"w-100 py-5\"></div>\n</div>\n<div class=\"w-100 py-5\"></div>\n"
    },
    {
      "name": "DeliveryServiceComponent",
      "id": "component-DeliveryServiceComponent-61066ae66ee1cdb911aca51c24015580",
      "file": "src/app/static-pages/delivery-service/delivery-service.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-delivery-service",
      "styleUrls": ["./delivery-service.component.scss"],
      "styles": [],
      "templateUrl": ["./delivery-service.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "rawContent",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "text",
          "type": "SafeHtml",
          "optional": false,
          "description": "",
          "line": 20
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { IDeliveryServiceResolver } from 'src/app/resolvers/static-pages/delivery-service.resolver';\nimport { StaticPagesTransformService } from 'src/app/services/internal/static-pages-transform.service';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-delivery-service',\n  templateUrl: './delivery-service.component.html',\n  styleUrls: ['./delivery-service.component.scss']\n})\nexport class DeliveryServiceComponent implements OnInit {\n\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as IDeliveryServiceResolver;\n  }\n\n  rawContent: IStaticPageBackend;\n  text: SafeHtml;\n\n  constructor(private route: ActivatedRoute, private staticPagesTransformService: StaticPagesTransformService) {}\n\n  ngOnInit(): void {\n    this.rawContent = this.resolvedData.content;\n    this.text = this.staticPagesTransformService.textHTMLStructure(this.rawContent.content_information);\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host::ng-deep{\n  p{\n    font-family: 'Gotham';\n  }\n}\n",
          "styleUrl": "./delivery-service.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService"
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 15
          }
        }
      },
      "templateData": "<app-page-hero class=\"d-block contain-sm mb-3 mb-md-5\" [title]=\"'Servicio de entrega'\" [imgUrl]=\"'http://placekitten.com/1000/1000'\" [url]=\"''\" [color]=\"'black-light'\"></app-page-hero>\n<div class=\"px-sm-5 contain mt-3\">\n  <div class=\"w-75 mx-auto my-5\" [innerHTML]=\"text\"></div>\n  <div class=\"w-100 py-5\"></div>\n</div>\n<div class=\"w-100 py-5\"></div>\n"
    },
    {
      "name": "FaqComponent",
      "id": "component-FaqComponent-d5234932e9326bc24de8a6cdec3d8ce0",
      "file": "src/app/static-pages/faq/faq.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-faq",
      "styleUrls": ["./faq.component.scss"],
      "styles": [],
      "templateUrl": ["./faq.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "accordions",
          "type": "IAccordion[]",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 17
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IAccordion } from 'src/app/models/static-pages.model';\nimport { IFAQResolver } from 'src/app/resolvers/static-pages/faq.resolver';\nimport { StaticPagesTransformService } from 'src/app/services/internal/static-pages-transform.service';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.scss']\n})\nexport class FaqComponent implements OnInit {\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as IFAQResolver;\n  }\n  content: IStaticPageBackend;\n  accordions: IAccordion[];\n  constructor(private route: ActivatedRoute, private staticPagesTransform: StaticPagesTransformService) {}\n\n  ngOnInit(): void {\n    this.content = this.resolvedData.content;\n    this.accordions = this.staticPagesTransform.accordionStructure(this.content.content_questions);\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host::ng-deep{\n  p{\n    font-family: 'Gotham';\n  }\n}\n",
          "styleUrl": "./faq.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "staticPagesTransform",
            "type": "StaticPagesTransformService"
          }
        ],
        "line": 18,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "staticPagesTransform",
            "type": "StaticPagesTransformService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 14
          }
        }
      },
      "templateData": "\n<app-page-hero class=\"d-block contain-sm mb-3 mb-md-5\" [title]=\"'Preguntas frecuentes'\" [imgUrl]=\"'http://placekitten.com/1000/1000'\" [url]=\"''\" [color]=\"'black-light'\"></app-page-hero>\n<div class=\"px-sm-5 contain mt-3\">\n  <div class=\"d-flex w-100 justify-content-between m-auto flex-column\">\n    <app-single-accordion *ngFor=\"let accordion of accordions\" [accordion]=\"accordion\"></app-single-accordion>\n  </div>\n  <div class=\"w-100 py-5\"></div>\n</div>\n<div class=\"w-100 py-5\"></div>\n"
    },
    {
      "name": "FooterComponent",
      "id": "component-FooterComponent-868f3962f21c76b835aad91a76be5501",
      "file": "src/app/shared/footer/footer.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-footer",
      "styleUrls": ["./footer.component.scss"],
      "styles": [],
      "templateUrl": ["./footer.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host{\n  .footer-logo{\n    max-width: 250px;\n  }\n  .main-footer-container{\n    min-height: 200px;\n  }\n}\n",
          "styleUrl": "./footer.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<!-- Footer -->\n<footer class=\"page-footer font-small grey darken-2\">\n\n  <!-- Footer Links -->\n  <div class=\"container text-center text-md-left main-footer-container\">\n\n    <!-- Grid row -->\n    <div class=\"row\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 mx-auto\">\n\n        <!-- Links -->\n        <h5 class=\"font-weight-bold text-uppercase mt-3 mb-4\">Contáctenos</h5>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <div class=\"row\">\n              <div class=\"col-md-1\"><mdb-icon fas icon=\"phone-volume\" class=\"mx-1 white-text\"></mdb-icon></div>\n              <div class=\"col-md-10\"><a href=\"#!\">123-123123</a></div>\n            </div>\n          </li>\n          <li>\n            <div class=\"row\">\n              <div class=\"col-md-1\"><mdb-icon fas icon=\"map-marker-alt\" class=\"mx-1 white-text\"></mdb-icon></div>\n              <div class=\"col-md-10\"><a href=\"#!\">Lorem Ipsum at dolorem.</a></div>\n            </div>\n          </li>\n          <li>\n            <div class=\"row\">\n              <div class=\"col-md-1\"><mdb-icon fas icon=\"at\" class=\"mx-1 white-text\"></mdb-icon></div>\n              <div class=\"col-md-10\"><a href=\"#!\">Lorem Ipsum at dolorem.</a></div>\n            </div>\n          </li>\n        </ul>\n\n      </div>\n      <!-- Grid column -->\n\n      <hr class=\"clearfix w-100 d-md-none\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 mx-auto\">\n\n        <!-- Links -->\n        <h5 class=\"font-weight-bold text-uppercase mt-3 mb-4\">Información</h5>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <a href=\"#!\">Nosotros</a>\n          </li>\n          <li>\n            <a href=\"#!\">Preguntas frecuentes</a>\n          </li>\n        </ul>\n\n      </div>\n      <!-- Grid column -->\n\n      <hr class=\"clearfix w-100 d-md-none\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 mx-auto\">\n\n        <!-- Links -->\n        <h5 class=\"font-weight-bold text-uppercase mt-3 mb-4\">Servicio al cliente</h5>\n\n        <ul class=\"list-unstyled\">\n          <li>\n            <a href=\"#!\">Terminos y condiciones</a>\n          </li>\n          <li>\n            <a href=\"#!\">Políticas de privacidad</a>\n          </li>\n          <li>\n            <a href=\"#!\">\n              <!--LIBRO DE RECLAMACIONES-->\n            </a>\n          </li>\n        </ul>\n\n      </div>\n      <!-- Grid column -->\n\n      <hr class=\"clearfix w-100 d-md-none\">\n\n      <!-- Grid column -->\n      <div class=\"col-md-3 mx-auto\">\n        <div class=\"view overlay d-flex align-items-center justify-content-center h-100\">\n          <img src=\"https://via.placeholder.com/200x100\" class=\"img-fluid w-100 mx-4 py-3 footer-logo\" >\n        </div>\n      </div>\n      <!-- Grid column -->\n\n    </div>\n    <!-- Grid row -->\n\n  </div>\n  <!-- Footer Links -->\n\n  <!-- Copyright -->\n  <div class=\"footer-copyright text-center py-3\">\n    © 2020 Copyright:\n    <a href=\"#!\"> Scotiabank</a>\n  </div>\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->\n"
    },
    {
      "name": "FormComponent",
      "id": "component-FormComponent-27b3cc9a98b27f0d38c7065f1eb155f2",
      "file": "src/app/shared/form/form.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-form",
      "styleUrls": ["./form.component.scss"],
      "styles": [],
      "templateUrl": ["./form.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "form",
          "line": 11,
          "type": "IForm"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "formBody",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16
        },
        {
          "name": "sendForm",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { VirtualTimeScheduler } from 'rxjs';\nimport { IForm } from 'src/app/models/form.model'\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent implements OnInit {\n  @Input() form: IForm;\n  formBody: FormGroup;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    let formGroup: any = {};\n    this.form.formFields.forEach( (element) => {\n      formGroup[element.field]= new FormControl(null, element.required ? [Validators.required]: []);\n    })\n    this.formBody = new FormGroup(formGroup);\n  }\n\n  sendForm(): void {\n    if (this.formBody.valid) {\n      //  SEND INFO BACK\n      this.formBody.reset();\n    }else{\n      //  NOTIF\n    }\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".bt-w-100{\n  @media (max-width: 992px) {\n    width: 100%;\n  }\n}\n",
          "styleUrl": "./form.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 12
      },
      "implements": ["OnInit"],
      "templateData": "<form [formGroup]=\"formBody\" class=\"w-100\">\n  <div class=\"row\">\n    <ng-container *ngFor=\"let item of form.formFields\">\n      <div class=\"input-block d-flex flex-column my-2\" [ngClass]=\"{ 'col-12': item.size == 100, 'col-lg-6 col-sm-12': item.size == 50 }\">\n        <label *ngIf=\"item.name\"><strong>{{item.name}}</strong></label>\n        <input class=\"form-control\" [formControlName]=\"item.field\" type=\"text\" *ngIf=\"item.type == 'text' && item.subType == 'text'\"\n          [placeholder]=\"item.name\">\n        <ng-container *ngIf=\"item.type == 'checkbox'\">\n          <div class=\"control-group\">\n            <label class=\"control control--checkbox\"> {{item.name}}\n              <input class=\"form-control\" [formControlName]=\"item.field\" type=\"checkbox\" [placeholder]=\"item.name\" />\n              <div class=\"control__indicator\"></div>\n            </label>\n          </div>\n        </ng-container>\n        <input class=\"form-control\" [formControlName]=\"item.field\" type=\"text\"\n          *ngIf=\"item.type == 'text' && item.subType == 'password'\" [placeholder]=\"item.name\">\n        <input class=\"form-control\" [formControlName]=\"item.field\" type=\"email\" *ngIf=\"item.type == 'text' && item.subType == 'email'\"\n          [placeholder]=\"item.name\">\n        <input class=\"form-control\" [formControlName]=\"item.field\" type=\"date\" *ngIf=\"item.type == 'text' && item.subType == 'date'\"\n          [placeholder]=\"item.name\">\n        <input class=\"form-control\" [formControlName]=\"item.field\" type=\"number\"\n          *ngIf=\"item.type == 'text' && item.subType == 'number'\" [placeholder]=\"item.name\">\n        <select [formControlName]=\"item.field\" *ngIf=\"item.type == 'list'\">\n          <option value=\"\">{{item.name}}</option>\n          <option *ngFor=\"let option of item.list\">{{option}}</option>\n        </select>\n        <span class=\"instruction-detail\" [innerHTML]=\"item.value\" *ngIf=\"item.type=='instruction'\"></span>\n        <textarea class=\"form-control\" [formControlName]=\"item.field\" *ngIf=\"item.type == 'text-area'\"\n          [placeholder]=\" item.name\"></textarea>\n      </div>\n    </ng-container>\n  </div>\n  <div class=\"row justify-content-end\">\n    <app-button [label]=\"form.button_text\" class=\"d-flex mx-2 bt-w-100\" [additionalClasses]=\"'px-5'\" [rounded]=\"true\" [bold]=\"true\"></app-button>\n  </div>\n</form>\n\n"
    },
    {
      "name": "GlobalLoadingComponent",
      "id": "component-GlobalLoadingComponent-770b69dbd3834b8679eea654f0d9d265",
      "file": "src/app/shared/global-loading/global-loading.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-global-loading",
      "styleUrls": ["./global-loading.component.scss"],
      "styles": [],
      "templateUrl": ["./global-loading.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-global-loading',\n  templateUrl: './global-loading.component.html',\n  styleUrls: ['./global-loading.component.scss']\n})\nexport class GlobalLoadingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./global-loading.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<p>global-loading works!</p>\n"
    },
    {
      "name": "HeaderComponent",
      "id": "component-HeaderComponent-97e06ade88d0b0e0b460dc0267b460e9",
      "file": "src/app/shared/header/header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-header",
      "styleUrls": ["./header.component.scss"],
      "styles": [],
      "templateUrl": ["./header.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "navBarListConfig",
          "defaultValue": "navBar",
          "line": 24,
          "type": "INavBar"
        },
        {
          "name": "user",
          "line": 23,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "navBar",
          "type": "NavBarComponent",
          "optional": false,
          "description": "",
          "line": 26,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'navBar', {static: true}"
            }
          ]
        },
        {
          "name": "navBarMobile",
          "type": "NavBarMobileComponent",
          "optional": false,
          "description": "",
          "line": 27,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'navBarMobile', {static: true}"
            }
          ]
        },
        {
          "name": "searchForm",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [
        {
          "name": "findByFilter",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 69
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 32
        },
        {
          "name": "openAccountData",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 94
        },
        {
          "name": "openCart",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 120
        },
        {
          "name": "openLogin",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 81
        },
        {
          "name": "openWishlist",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 107
        },
        {
          "name": "setFilter",
          "args": [
            {
              "name": "e",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "showCategories",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 73
        },
        {
          "name": "showCategoriesMobile",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 77
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { INavBar } from 'src/app/models/navbar.model';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { ProfileComponent } from 'src/app/modals/profile/profile.component';\nimport { LoginComponent } from 'src/app/modals/login/login.component';\nimport { WishlistComponent } from 'src/app/modals/wishlist/wishlist.component';\nimport { CartComponent } from 'src/app/modals/cart/cart.component';\nimport { NavBarMobileComponent } from './nav-bar-mobile/nav-bar-mobile.component';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { navBar } from 'src/app/mockups/header.mockup';\nimport { CategoryService, ICategoryListBackend } from 'src/app/services/category.service'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  modalRef: MDBModalRef;\n  @Input() user: boolean;\n  @Input() navBarListConfig: INavBar = navBar;\n\n  @ViewChild('navBar', { static: true }) navBar: NavBarComponent;\n  @ViewChild('navBarMobile', { static: true }) navBarMobile: NavBarMobileComponent;\n  searchForm: FormGroup;\n\n  constructor(private modalService: MDBModalService, private router: Router, private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.user = localStorage.getItem('jwt')? true:false;\n\n    this.searchForm = new FormGroup({\n      filter: new FormControl('', [Validators.required]),\n    });\n\n    this.categoryService.getCategoryList().subscribe( (result: ICategoryListBackend) => {\n      this.navBarListConfig = {\n        navBarList: []\n      }\n      result.data.forEach( (category) => {\n        this.navBarListConfig.navBarList.push({\n          name: category.name,\n          categoryList: [],\n          selected: false,\n          friendlyUrl: category.friendly_url,\n        })\n        category.filters[0].values.forEach( (filter) => {\n          this.navBarListConfig.navBarList[this.navBarListConfig.navBarList.length - 1].categoryList.push(\n            {\n              name: filter,\n              filter: category.filters[0].filter\n            }\n          )\n        })\n      })\n    })\n\n  }\n\n  setFilter(e): void {\n    if (e.keyCode == 13) {\n      this.router.navigate(['/main/search'], { queryParams: { filter: this.searchForm.controls['filter'].value } });\n    }\n  }\n\n  findByFilter(): void {\n    this.router.navigate(['/main/search'], { queryParams: { filter: this.searchForm.controls['filter'].value } });\n  }\n\n  showCategories() {\n    this.navBar.toggleNavBar();\n  }\n\n  showCategoriesMobile() {\n    this.navBarMobile.toggleNavBar();\n  }\n\n  openLogin() {\n    this.modalRef = this.modalService.show(LoginComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  openAccountData() {\n    this.modalRef = this.modalService.show(ProfileComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  openWishlist() {\n    this.modalRef = this.modalService.show(WishlistComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  openCart() {\n    this.modalRef = this.modalService.show(CartComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use 'variables';\n\n:host {\n  header {\n    position: fixed;\n    right: 0;\n    left: 0;\n    z-index: variables.$z-header;\n    border-width: 0 0 1px;\n    margin-bottom: 20px;\n  }\n  .logo {\n    @media (max-width: 990px) {\n      width: 150px;\n      @media (max-width: 355px) {\n        width: 110px;\n      }\n    }\n  }\n  .category-group {\n    width: 100%;\n    .nav-item {\n      .nav-link {\n        padding-left: 2rem;\n        padding-right: 2rem;\n        @media (max-width: 990px) {\n          padding-left: 0rem;\n          padding-right: 0rem;\n        }\n      }\n    }\n  }\n\n  .nav-item {\n    position: relative;\n    a.active,\n    a:not(.icon):hover {\n      transition: all 0.4s ease-in-out;\n      font-weight: bold;\n    }\n    a.active::before,\n    a:not(.icon)::before {\n      content: '';\n      transition: all 0.4s ease-in-out;\n      position: absolute;\n      right: 50%;\n      left: 50%;\n      bottom: 0;\n      height: 2px;\n      width: 0px;\n      background-color: red;\n    }\n    a.active::before,\n    a:not(.icon):hover::before {\n      right: 0;\n      left: 0;\n      width: 100%;\n    }\n  }\n  .search-box{\n    width: 50%;\n    @media (max-width: 990px) {\n      width: 100%;\n    }\n    input{\n      height: calc(1.5em + 0.75rem);\n      border-radius: 0.25rem 0rem 0rem 0.25rem;\n      width: calc(100% - 80px) !important;\n      @media (max-width: 990px) {\n        width: calc(100% - 47px) !important;\n      }\n    }\n    button {\n      border-radius: 0rem 0.25rem 0.25rem 0rem;\n    }\n  }\n  .bottom-shadow{\n    box-shadow: 0px 10px 10px rgba(0,0,0,0.2);\n  }\n\n  .invisible-scrollable{\n    overflow-x: auto;\n    white-space: nowrap;\n    -webkit-overflow-scrolling: touch;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n  }\n  .invisible-scrollable::-webkit-scrollbar {\n    display: none;\n  }\n}\n",
          "styleUrl": "./header.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "router",
            "type": "Router"
          },
          {
            "name": "categoryService",
            "type": "CategoryService"
          }
        ],
        "line": 28,
        "jsdoctags": [
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "categoryService",
            "type": "CategoryService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<section class=\"sticky-top d-none d-lg-block\">\n  <nav class=\"navbar navbar-expand-lg navbar-light white\">\n    <button class=\"navbar-toggler btn btn-danger d-lg-none px-3\" type=\"button\" data-toggle=\"collapse\"\n      data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\">\n      <mdb-icon fas icon=\"bars\" class=\"adaptative-icon white-text\"></mdb-icon>\n    </button>\n    <app-button class=\"mx-4\" (onClick)=\"showCategories()\" [rounded]=\"true\" [additionalClasses]=\"'px-2'\"\n      [type]=\"'danger'\" [hoverable]=\"false\" [color]=\"null\" [size]=\"100\" [label]=\"'Categorias'\" [prefixIcon]=\"'bars'\"\n      [sufixIcon]=\"'caret-down'\"></app-button>\n    <a class=\"navbar-brand my-1 mx-3\" href=\"\"><img src=\"https://via.placeholder.com/200x80\" class=\"logo img-fluid\"></a>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <form class=\"form-inline my-2 mx-2 ml-auto my-lg-0 search-box\" [formGroup]=\"searchForm\">\n        <input class=\"form-control py-1\" type=\"search\" placeholder=\"¿Qué estas buscando?\" aria-label=\"Search\"\n          formControlName=\"filter\" (keypress)=\"setFilter($event)\">\n        <button class=\"btn btn-danger mx-0 my-0 py-2 px-3  z-depth-0\" type=\"submit\"\n          (click)=\"findByFilter()\">\n          <mdb-icon fas icon=\"search\" class=\"white-text\"></mdb-icon>\n        </button>\n      </form>\n      <ul class=\"navbar-nav align-items-center mx-4\">\n        <li class=\"nav-item d-flex\" *ngIf=\"user\" (click)=\"openCart()\">\n          <a class=\"icon\">\n            <mdb-icon far icon=\"shopping-cart\" class=\"mx-3 adaptative-icon\"></mdb-icon>\n          </a>\n        </li>\n        <li class=\"nav-item d-flex\" *ngIf=\"user\" (click)=\"openWishlist()\">\n          <a class=\"icon\">\n            <mdb-icon far icon=\"heart\" class=\"mx-3 adaptative-icon\"></mdb-icon>\n          </a>\n        </li>\n        <li class=\"nav-item d-none d-lg-flex\" *ngIf=\"user\" (click)=\"openAccountData()\">\n          <a class=\"icon\">\n            <mdb-icon far icon=\"user\" class=\"mx-3 adaptative-icon\"></mdb-icon>\n          </a>\n        </li>\n        <li class=\"nav-item d-flex \" *ngIf=\"!user\" (click)=\"openLogin()\">\n          <a class=\"icon\">\n            <mdb-icon far icon=\"sign-in-alt\" class=\"mx-3 adaptative-icon\"></mdb-icon>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n  <app-nav-bar [config]=\"navBarListConfig\" #navBar></app-nav-bar>\n  <nav class=\"navbar navbar-expand-lg navbar-light white bottom-shadow\">\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav m-auto align-items-center justify-content-around flex-grow-1\">\n        <li class=\"nav-item  d-flex\">\n          <label><a [routerLink]=\"['/info/how-to-buy']\" routerLinkActive=\"active\">Como comprar</a></label>\n        </li>\n        <li class=\"nav-item d-flex\">\n          <label><a [routerLink]=\"['/info/delivery-service']\" routerLinkActive=\"active\">Servicio de entrega</a></label>\n        </li>\n        <li class=\"nav-item d-flex\">\n          <label><a [routerLink]=\"['/info/bio-security']\" routerLinkActive=\"active\">Medidas de bioseguridad</a></label>\n        </li>\n        <li class=\"nav-item d-flex\">\n          <label><a [routerLink]=\"['/info/refund']\" routerLinkActive=\"active\">Devoluciones</a></label>\n        </li>\n        <li class=\"nav-item d-flex\">\n          <label><a [routerLink]=\"['/info/customer-service']\" routerLinkActive=\"active\">Servicio al cliente</a></label>\n        </li>\n        <li class=\"nav-item d-flex\">\n          <label><a [routerLink]=\"['/info/faq']\" routerLinkActive=\"active\">Preguntas frecuentes</a></label>\n        </li>\n        <li class=\"nav-item d-flex\">\n          <label><a [routerLink]=\"['/info/contact-us']\" routerLinkActive=\"active\">Contactenos</a></label>\n        </li>\n        <li class=\"nav-item d-flex\">\n          <label class=\"red-text\"><a [routerLink]=\"['/info/new-card']\" routerLinkActive=\"active\"><strong>Pedir tarjeta Scotiabank</strong></a></label>\n        </li>\n      </ul>\n    </div>\n  </nav>\n</section>\n<section class=\"sticky-top d-lg-none\">\n  <nav class=\"navbar navbar-expand-lg navbar-light white\">\n    <button class=\"navbar-toggler btn btn-danger px-3 z-depth-0\" (click)=\"showCategoriesMobile()\" type=\"button\"\n      data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <mdb-icon fas icon=\"bars\" class=\"adaptative-icon white-text\"></mdb-icon>\n    </button>\n    <a class=\"navbar-brand my-1 mx-1 flex-grow-1\" href=\"\"><img src=\"https://via.placeholder.com/200x80\"\n        class=\"logo img-fluid\"></a>\n    <div *ngIf=\"user\" class=\"d-flex\">\n      <mdb-icon far icon=\"heart\" class=\"mx-1 adaptative-icon d-xxs-none\" (click)=\"openWishlist()\"></mdb-icon>\n      <mdb-icon far icon=\"shopping-cart\" class=\"mx-1 adaptative-icon\" (click)=\"openCart()\"></mdb-icon>\n      <mdb-icon far icon=\"user\" class=\"mx-1 adaptative-icon\" (click)=\"openAccountData()\"></mdb-icon>\n    </div>\n    <div *ngIf=\"!user\" class=\"d-flex\">\n      <mdb-icon far icon=\"sign-in-alt\" class=\"mx-1 adaptative-icon\" (click)=\"openLogin()\"></mdb-icon>\n    </div>\n    <form class=\"form-inline my-2 mx-2 ml-auto my-lg-0 search-box\" [formGroup]=\"searchForm\">\n      <input class=\"form-control py-1\" type=\"search\" placeholder=\"¿Qué estas buscando?\" aria-label=\"Search\" formControlName=\"filter\" (keypress)=\"setFilter($event)\">\n      <button class=\"btn btn-danger mx-0 my-0 py-2 px-3  z-depth-0\" type=\"submit\" (click)=\"findByFilter()\">\n        <mdb-icon fas icon=\"search\" class=\"white-text\"></mdb-icon>\n      </button>\n    </form>\n    <div class=\"navbar-collapse invisible-scrollable mt-2\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav m-auto flex-row align-items-center justify-content-start flex-grow-1 w-100\" style=\"white-space: nowrap;\">\n        <li class=\"nav-item d-flex mx-3\">\n          <label><a class=\"font-size-4\">Como comprar</a></label>\n        </li>\n        <li class=\"nav-item d-flex mx-3\">\n          <label><a class=\"font-size-4\">Servicio de entrega</a></label>\n        </li>\n        <li class=\"nav-item d-flex mx-3\">\n          <label><a class=\"font-size-4\">Medidas de bioseguridad</a></label>\n        </li>\n        <li class=\"nav-item d-flex mx-3\">\n          <label><a class=\"font-size-4\">Devoluciones</a></label>\n        </li>\n        <li class=\"nav-item d-flex mx-3\">\n          <label><a class=\"font-size-4\">Servicio al cliente</a></label>\n        </li>\n        <li class=\"nav-item d-flex mx-3\">\n          <label><a class=\"font-size-4\">Preguntas frecuentes</a></label>\n        </li>\n        <li class=\"nav-item d-flex mx-3\">\n          <label><a class=\"font-size-4\">Contactenos</a></label>\n        </li>\n        <li class=\"nav-item d-flex mx-3\">\n          <label class=\"red-text\"><a class=\"font-size-4\"><strong>Pedir tarjeta Scotiabank</strong></a></label>\n        </li>\n      </ul>\n    </div>\n  </nav>\n  <app-nav-bar-mobile [config]=\"navBarListConfig\" #navBarMobile></app-nav-bar-mobile>\n</section>\n"
    },
    {
      "name": "HomeBannerListComponent",
      "id": "component-HomeBannerListComponent-e9babd3d51586f8635cb69a27d141a7b",
      "file": "src/app/core/home/home-banner-list/home-banner-list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-home-banner-list",
      "styleUrls": ["./home-banner-list.component.scss"],
      "styles": [],
      "templateUrl": ["./home-banner-list.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "banners",
          "defaultValue": "banners",
          "line": 11,
          "type": "IBanner[]"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cardColors",
          "defaultValue": "['yellow', 'red', 'pink']",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { banners } from 'src/app/static/home.static';\nimport { IBanner } from '../../../models/banner.model';\n\n@Component({\n  selector: 'app-home-banner-list',\n  templateUrl: './home-banner-list.component.html',\n  styleUrls: ['./home-banner-list.component.scss'],\n})\nexport class HomeBannerListComponent implements OnInit {\n  @Input() banners: IBanner[] = banners;\n  cardColors = ['yellow', 'red', 'pink'];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./home-banner-list.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 12
      },
      "implements": ["OnInit"],
      "templateData": "<app-section-header>\n  ¿Aún no eres cliente?\n</app-section-header>\n<div class=\"px-lg-5\">\n  <div class=\"swiper-container overflow-visible d-sm-none\" swiper>\n    <div class=\"swiper-wrapper\">\n      <div\n        class=\"swiper-slide h-unset d-flex align-items-stretch\"\n        *ngFor=\"let banner of banners; let i = index\"\n      >\n        <app-banner\n          class=\"d-block px-1\"\n          [banner]=\"banner\"\n          [color]=\"cardColors[i % cardColors.length]\"\n        ></app-banner>\n      </div>\n    </div>\n  </div>\n  <div class=\"row no-gutters d-none d-sm-flex align-items-stretch\">\n    <app-banner\n      *ngFor=\"let banner of banners; let i = index\"\n      class=\"d-flex px-1 pb-2 col-lg-6 col-xl-4\"\n      [banner]=\"banner\"\n      [color]=\"cardColors[i % cardColors.length]\"\n    ></app-banner>\n  </div>\n</div>\n"
    },
    {
      "name": "HomeComponent",
      "id": "component-HomeComponent-a0f594b0f2d4ad4d45fc2fa7570a8019",
      "file": "src/app/core/home/home.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-home",
      "styleUrls": ["./home.component.scss"],
      "styles": [],
      "templateUrl": ["./home.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "user",
          "defaultValue": "null",
          "line": 22,
          "type": "unknown"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "categories",
          "defaultValue": "[]",
          "type": "ICategoryBackend[]",
          "optional": false,
          "description": "",
          "line": 18
        },
        {
          "name": "payments",
          "defaultValue": "[]",
          "type": "IPaymentCard[]",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "productFeat",
          "defaultValue": "[]",
          "type": "IProductItem[]",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { ActivatedRoute } from '@angular/router';\nimport { IHomePage } from '../../resolvers/home.resolver';\nimport { IProductItem } from 'src/app/models/product.model';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { IPaymentCard } from 'src/app/models/home.model';\nimport { ICategoryBackend } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as IHomePage;\n  }\n\n  categories: ICategoryBackend[] = [];\n  productFeat: IProductItem[] = [];\n  payments: IPaymentCard[] = [];\n\n  @Input() user: unknown = null;\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.categories = this.resolvedData.categories;\n    this.productFeat = this.resolvedData.productsFeat;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import \"_media\";\n\n@include media-breakpoint-up(sm) {\n  app-category-list {\n    margin-top: -1rem;\n  }\n}\n",
          "styleUrl": "./home.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 14
          }
        }
      },
      "templateData": "<app-home-hero class=\"d-block contain-sm mb-5 mb-sm-0\"></app-home-hero>\n<app-category-list\n  class=\"d-block contain contain-mb mb-5\"\n  type=\"grid\"\n  [categories]=\"categories\"\n></app-category-list>\n<div class=\"contain px-sm-5\">\n  <app-home-payment-list class=\"d-block mb-5\"></app-home-payment-list>\n  <app-home-banner-list class=\"d-block mb-5\"></app-home-banner-list>\n  <app-product-list\n    class=\"d-block mb-5\"\n    [products]=\"productFeat\"\n  ></app-product-list>\n</div>\n"
    },
    {
      "name": "HomeHeroComponent",
      "id": "component-HomeHeroComponent-26dd90303f6880a84ebacc2d758230e2",
      "file": "src/app/core/home/home-hero/home-hero.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-home-hero",
      "styleUrls": ["./home-hero.component.scss"],
      "styles": [],
      "templateUrl": ["./home-hero.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "swiperDirective",
          "type": "SwiperDirective",
          "optional": false,
          "description": "",
          "line": 10,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "SwiperDirective"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SwiperDirective } from 'ngx-swiper-wrapper';\n\n@Component({\n  selector: 'app-home-hero',\n  templateUrl: './home-hero.component.html',\n  styleUrls: ['./home-hero.component.scss'],\n})\nexport class HomeHeroComponent implements OnInit {\n  @ViewChild(SwiperDirective) swiperDirective: SwiperDirective;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import \"_media\";\n.hero-body {\n  p {\n    line-height: 14.4px;\n  }\n}\n@include media-breakpoint-up(sm) {\n  .hero-body {\n    h1 {\n      line-height: 50px;\n    }\n    p {\n      line-height: 24px;\n    }\n  }\n}\n@include media-breakpoint-down(sm) {\n  // rounded-mb fix\n  .rounded-mb .hero-img {\n    border-top-right-radius: 0.25rem;\n    border-bottom-right-radius: 0.25rem;\n  }\n}\n",
          "styleUrl": "./home-hero.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 10
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"d-flex h-auto justify-content-stretch red text-white rounded-mb\">\n  <div class=\"row no-gutters hero\">\n    <div class=\"col-6 flex-grow-1 hero-body\">\n      <div class=\"flex-column\">\n        <h1 class=\"mb-2 mb-sm-3 font-size-7 bold-text\">\n          Compra lo que quieras sin salir de casa\n        </h1>\n        <p class=\"mb-3 font-size-3\">\n          Duis deserunt occaehome amet qui nostrud consectetur nostrud deserunt\n          sint officia. Ad magna labore reprehenderit ad ipsum. Irure id laborum\n          anim commodo eu irure.\n        </p>\n        <div class=\"d-flex\">\n          <app-button\n            class=\"d-none d-sm-block\"\n            type=\"custom\"\n            color=\"secondary\"\n            label=\"Call to action\"\n            additionalClasses=\"btn-rounded\"\n          ></app-button>\n          <a href=\"http://google.com\" class=\"d-sm-none\">\n            <span class=\"read-more\">Ver más</span>\n          </a>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"col-6 hero-img img-cover\"\n      [style.background-image]=\"\n        'url(' + 'http://placekitten.com/1000/1000' + ')'\n      \"\n    ></div>\n  </div>\n</div>\n"
    },
    {
      "name": "HomePaymentCardComponent",
      "id": "component-HomePaymentCardComponent-e29e60b20d704e14cbaf50e553b5bfb8",
      "file": "src/app/core/home/home-payment-card/home-payment-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-home-payment-card",
      "styleUrls": ["./home-payment-card.component.scss"],
      "styles": [],
      "templateUrl": ["./home-payment-card.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "color",
          "line": 10,
          "type": "string"
        },
        {
          "name": "payment",
          "line": 11,
          "type": "IPaymentCard"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { IPaymentCard } from 'src/app/models/home.model';\n\n@Component({\n  selector: 'app-home-payment-card',\n  templateUrl: './home-payment-card.component.html',\n  styleUrls: ['./home-payment-card.component.scss'],\n})\nexport class HomePaymentCardComponent implements OnInit {\n  @Input() color: string;\n  @Input() payment: IPaymentCard;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".payment {\n  border-width: 2px;\n  border-style: solid;\n  p {\n    line-height: 19.2px;\n  }\n}\n",
          "styleUrl": "./home-payment-card.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 11
      },
      "implements": ["OnInit"],
      "templateData": "<div\n  class=\"payment d-flex h-100 flex-column justify-content-between rounded font-family-2 p-3 p-sm-4\"\n  [style.border-color]=\"'var(--' + color + ')'\"\n>\n  <h3 class=\"font-size-4 mb-4 bold-text\" [ngClass]=\"color + '-text'\">\n    {{ payment?.title }}\n  </h3>\n  <p class=\"font-size-2\" [innerHtml]=\"payment?.description\"></p>\n</div>\n"
    },
    {
      "name": "HomePaymentListComponent",
      "id": "component-HomePaymentListComponent-3d9713cd8b8e63176201c2b2b93d2ded",
      "file": "src/app/core/home/home-payment-list/home-payment-list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-home-payment-list",
      "styleUrls": ["./home-payment-list.component.scss"],
      "styles": [],
      "templateUrl": ["./home-payment-list.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "payments",
          "defaultValue": "payments",
          "line": 10,
          "type": "IPaymentCard[]"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cardColors",
          "defaultValue": "['purple', 'pink', 'orange']",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { IPaymentCard } from '../../../models/home.model';\nimport { payments } from '../../../static/home.static';\n@Component({\n  selector: 'app-home-payment-list',\n  templateUrl: './home-payment-list.component.html',\n  styleUrls: ['./home-payment-list.component.scss'],\n})\nexport class HomePaymentListComponent implements OnInit {\n  @Input() payments: IPaymentCard[] = payments;\n  cardColors = ['purple', 'pink', 'orange'];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./home-payment-list.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 11
      },
      "implements": ["OnInit"],
      "templateData": "<app-section-header>\n  Cómo pagar en la feria\n</app-section-header>\n<div class=\"px-lg-5\">\n  <div class=\"swiper-container overflow-visible d-sm-none\" swiper>\n    <div class=\"swiper-wrapper\">\n      <div\n        class=\"swiper-slide h-unset d-flex align-items-stretch\"\n        *ngFor=\"let payment of payments; let i = index\"\n      >\n        <app-home-payment-card\n          class=\"d-block px-1\"\n          [payment]=\"payment\"\n          [color]=\"cardColors[i % cardColors.length]\"\n        ></app-home-payment-card>\n      </div>\n    </div>\n  </div>\n  <div class=\"row no-gutters d-none d-sm-flex align-items-stretch\">\n    <app-home-payment-card\n      *ngFor=\"let payment of payments; let i = index\"\n      class=\"d-flex px-1 pb-2 col-lg-6 col-xl-4\"\n      [payment]=\"payment\"\n      [color]=\"cardColors[i % cardColors.length]\"\n    ></app-home-payment-card>\n  </div>\n</div>\n"
    },
    {
      "name": "HowToBuyComponent",
      "id": "component-HowToBuyComponent-9d971cfa33f57f532e08dcb9a1de5cab",
      "file": "src/app/static-pages/how-to-buy/how-to-buy.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-how-to-buy",
      "styleUrls": ["./how-to-buy.component.scss"],
      "styles": [],
      "templateUrl": ["./how-to-buy.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cards",
          "defaultValue": "[]",
          "type": "ISimpleCard[]",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "rawContent",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 19
        },
        {
          "name": "text",
          "type": "SafeHtml",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IHowToBuyResolver } from 'src/app/resolvers/static-pages/how-to-buy.resolver';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\nimport { StaticPagesTransformService } from 'src/app/services/internal/static-pages-transform.service'\nimport { ISimpleCard, IHTMLText } from 'src/app/models/static-pages.model';\nimport { SafeHtml } from '@angular/platform-browser';\n@Component({\n  selector: 'app-how-to-buy',\n  templateUrl: './how-to-buy.component.html',\n  styleUrls: ['./how-to-buy.component.scss']\n})\nexport class HowToBuyComponent implements OnInit {\n\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as IHowToBuyResolver;\n  }\n\n  rawContent: IStaticPageBackend;\n  cards: ISimpleCard[] = [];\n  text: SafeHtml;\n\n  constructor(private route: ActivatedRoute, private staticPagesTransformService: StaticPagesTransformService) {}\n\n  ngOnInit(): void {\n    this.rawContent = this.resolvedData.content;\n    this.cards = this.staticPagesTransformService.simpleCardsStructure(this.rawContent.content_cards);\n    this.text = this.staticPagesTransformService.textHTMLStructure(this.rawContent.content_information);\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host::ng-deep{\n  p{\n    font-family: 'Gotham';\n  }\n}\n",
          "styleUrl": "./how-to-buy.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService"
          }
        ],
        "line": 21,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 15
          }
        }
      },
      "templateData": "<app-page-hero class=\"d-block contain-sm mb-3 mb-md-5\" [title]=\"'Como Comprar'\" [imgUrl]=\"'http://placekitten.com/1000/1000'\" [url]=\"''\" [color]=\"'black-light'\"></app-page-hero>\n<div class=\"px-sm-5 contain mt-3\">\n  <div class=\"d-flex w-100 justify-content-between m-auto\">\n    <app-simple-card class=\"d-flex\" *ngFor=\"let card of cards; let i = index\" [height]=\"175\" [width]=\"350\" [image]=\"card.iconURL\" [text]=\"(i+1)+'. '+card.title\" [url]=\"card.url\" [color]=\"card.color\" [textSize]=\"4\"></app-simple-card>\n  </div>\n  <div class=\"w-75 mx-auto my-5\" [innerHTML]=\"text\"></div>\n  <div class=\"w-100 py-5\"></div>\n</div>\n<div class=\"w-100 py-5\"></div>\n"
    },
    {
      "name": "InnerBannerComponent",
      "id": "component-InnerBannerComponent-71d70aa5d72e96c2f3886e12be62b750",
      "file": "src/app/shared/inner-banner/inner-banner.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-inner-banner",
      "styleUrls": ["./inner-banner.component.scss"],
      "styles": [],
      "templateUrl": ["./inner-banner.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inner-banner',\n  templateUrl: './inner-banner.component.html',\n  styleUrls: ['./inner-banner.component.scss']\n})\nexport class InnerBannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./inner-banner.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<p>inner-banner works!</p>\n"
    },
    {
      "name": "LoginComponent",
      "id": "component-LoginComponent-497d0d8422a6de58075b822150ff0d10",
      "file": "src/app/modals/login/login.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-login",
      "styleUrls": ["./login.component.scss"],
      "styles": [],
      "templateUrl": ["./login.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "loginForm",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61
        },
        {
          "name": "logInUser",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        },
        {
          "name": "registerUser",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47
        },
        {
          "name": "rememberPassword",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\n\nimport { RECOVER_PASSWORD_TOKEN } from '../recover-password/recover-password';\nimport { RecoverPasswordComponent } from '../recover-password/recover-password.component';\nimport { REGISTER_TOKEN } from '../register/register';\nimport { RegisterComponent } from '../register/register.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(RECOVER_PASSWORD_TOKEN) private recoverPasswordComponent: any,\n    @Inject(REGISTER_TOKEN) private registerComponent: any) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.required]),\n      password: new FormControl('', [Validators.required]),\n      keepLogged: new FormControl(true)\n    });\n  }\n\n  logInUser(): void {\n\n  }\n\n  rememberPassword(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.recoverPasswordComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    });\n  }\n\n  registerUser(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.registerComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    });\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./login.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "recoverPasswordComponent",
            "type": "any"
          },
          {
            "name": "registerComponent",
            "type": "any"
          }
        ],
        "line": 16,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "recoverPasswordComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "registerComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative border-none\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">\n    <a><mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" (click)=\"closeModal()\"></mdb-icon></a>\n    <strong>Iniciar sesión</strong>\n  </h4>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <label class=\"my-0 font-size-1\">Inicia sesión para poder agregar productos<br>a tu carrito.</label>\n    <div class=\"w-100 d-flex my-5\"></div>\n    <form [formGroup]=\"loginForm\">\n      <div class=\"row my-5\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\n          <div class=\"form-group\">\n            <div class=\"input-block\">\n              <label for=\"email\"><strong>Correo electronico</strong></label>\n              <input type=\"text\" id=\"email\" formControlName=\"email\" class=\"form-control\" mdbInput mdbValidate>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"input-block\">\n              <label for=\"password\"><strong>Contraseña</strong></label>\n              <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" mdbInput mdbValidate>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"px-4 py-1 d-flex align-items-center justify-content-center\">\n              ¿Olvidaste tu contraseña?\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"d-flex flex-column\">\n      <app-button class=\"w-100 d-flex\" [size]=\"100\" [label]=\"'Iniciar sesión'\" [rounded]=\"true\" [hoverable]=\"false\" [bold]=\"true\" (onClick)=\"logInUser()\" [disabled]=\"loginForm.invalid\"></app-button>\n      <app-button class=\"w-100 d-flex\" [color]=\"'secondary-red'\" [size]=\"100\" [label]=\"'Regístrate'\" [rounded]=\"true\" [hoverable]=\"false\" [bold]=\"true\" (onClick)=\"registerUser()\"></app-button>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "MainCarouselComponent",
      "id": "component-MainCarouselComponent-f205a78fbdeb3202f8d3a4f8b812f77f",
      "file": "src/app/shared/main-carousel/main-carousel.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-main-carousel",
      "styleUrls": ["./main-carousel.component.scss"],
      "styles": [],
      "templateUrl": ["./main-carousel.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-carousel',\n  templateUrl: './main-carousel.component.html',\n  styleUrls: ['./main-carousel.component.scss']\n})\nexport class MainCarouselComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host{\n  .carousel-inner {\n\n    max-height: 400px;\n\n    img {\n\n    max-height: 400px;\n\n    }\n\n    }\n}\n",
          "styleUrl": "./main-carousel.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"w-100\">\n  <mdb-carousel class=\"carousel slide carousel-fade\" [animation]=\"'fade'\">\n    <mdb-carousel-item>\n      <div class=\"d-flex w-100\">\n        <div class=\"col-md-6 px-0\">\n          <div class=\"d-flex orange h-100 w-100 justify-content-center align-items-center\">\n\n          </div>\n        </div>\n        <div class=\"col-md-6 px-0\">\n          <img class=\"d-block w-100\" src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(68).jpg\" alt=\"First slide\">\n        </div>\n      </div>\n    </mdb-carousel-item>\n    <mdb-carousel-item>\n      <div class=\"d-flex w-100\">\n        <div class=\"col-md-6 px-0\">\n          <div class=\"d-flex orange h-100 w-100 justify-content-center align-items-center\">\n\n          </div>\n        </div>\n        <div class=\"col-md-6 px-0\">\n          <img class=\"d-block w-100\" src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(68).jpg\" alt=\"First slide\">\n        </div>\n      </div>\n    </mdb-carousel-item>\n    <mdb-carousel-item>\n      <div class=\"d-flex w-100\">\n        <div class=\"col-md-6 px-0\">\n          <div class=\"d-flex orange h-100 w-100 justify-content-center align-items-center\">\n\n          </div>\n        </div>\n        <div class=\"col-md-6 px-0\">\n          <img class=\"d-block w-100\" src=\"https://mdbootstrap.com/img/Photos/Slides/img%20(68).jpg\" alt=\"First slide\">\n        </div>\n      </div>\n    </mdb-carousel-item>\n  </mdb-carousel>\n</div>\n\n"
    },
    {
      "name": "MyDataComponent",
      "id": "component-MyDataComponent-91e705c24c6555b84f3697cbff9924c5",
      "file": "src/app/modals/my-data/my-data.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-my-data",
      "styleUrls": ["./my-data.component.scss"],
      "styles": [],
      "templateUrl": ["./my-data.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 17,
          "modifierKind": [114]
        },
        {
          "name": "passwordForm",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 16
        },
        {
          "name": "profileForm",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        },
        {
          "name": "returnProfile",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 49
        },
        {
          "name": "updatePassword",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        },
        {
          "name": "updateProfile",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\n\nimport { PROFILE_TOKEN } from '../profile/profile';\nimport { ProfileComponent } from '../profile/profile.component';\n\n@Component({\n  selector: 'app-my-data',\n  templateUrl: './my-data.component.html',\n  styleUrls: ['./my-data.component.scss']\n})\nexport class MyDataComponent implements OnInit {\n\n  profileForm: FormGroup;\n  passwordForm: FormGroup;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(PROFILE_TOKEN) private profileComponent: any) { }\n\n  ngOnInit(): void {\n    this.profileForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      last_name_father: new FormControl('', [Validators.required]),\n      last_name_mother: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      type_document: new FormControl('', [Validators.required]),\n      number_document: new FormControl('', [Validators.required]),\n      birth_date: new FormControl('', [Validators.required]),\n    })\n    this.passwordForm = new FormGroup({\n      current_password: new FormControl('', [Validators.minLength(6), Validators.required]),\n      new_password: new FormControl('', [Validators.minLength(6), Validators.required]),\n      repeat_new_password: new FormControl('', [Validators.minLength(6), Validators.required])\n    })\n  }\n\n  updateProfile(): void{\n\n  }\n\n  updatePassword(): void{\n\n  }\n\n  closeModal(): void{\n    this.modalRef && this.modalRef.hide();\n  }\n\n  returnProfile(): void{\n    this.closeModal();\n    this.modalRef = this.modalService.show( this.profileComponent , {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host{\n  .close-icon-block {\n    margin-top: 4px;\n  }\n\n  .input-block {\n    margin-bottom: 15px;\n  }\n\n  .update-password-title {\n    margin-left: 15px;\n    margin-top: 30px;\n    margin-bottom: 30px;\n  }\n}\n",
          "styleUrl": "./my-data.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "profileComponent",
            "type": "any"
          }
        ],
        "line": 16,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "profileComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title d-flex\" id=\"myModalLabel\">\n    <mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" style=\"cursor: pointer;\" (click)=\"returnProfile()\"></mdb-icon>\n    <strong>Mis datos</strong>\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\">\n    </mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <form [formGroup]=\"profileForm\">\n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\n          <div class=\"form-group\">\n            <div class=\"input-block\">\n              <label for=\"name\" class=\"label-input\"><strong>Nombre</strong></label>\n              <input type=\"text\" id=\"nameMobile\" formControlName=\"name\" class=\"form-control\" mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"last_name_father\" class=\"label-input\"><strong>Apellido paterno</strong></label>\n              <input type=\"text\" id=\"last_name_father_mobile\" formControlName=\"last_name_father\" class=\"form-control\"\n                mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"last_name_mother\" class=\"label-input\"><strong>Apellido materno</strong></label>\n              <input type=\"text\" id=\"last_name_mother_mobile\" formControlName=\"last_name_mother\" class=\"form-control\"\n                mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"email\" class=\"label-input\"><strong>Correo electronico personal</strong></label>\n              <input type=\"email\" id=\"email_mobile\" formControlName=\"email\" class=\"form-control\" mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"birth_date\" class=\"label-input\"><strong>Fecha de nacimiento</strong></label>\n              <input type=\"date\" id=\"birth_date_mobile\" formControlName=\"birth_date\" class=\"form-control\" mdbInput\n                mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"type_document\" class=\"label-input\"><strong>Documento de identidad</strong></label>\n              <select class=\"form-control\" id=\"type_document_mobile\" mdbInput mdbValidate>\n                <option selected disabled></option>\n                <option value=\"1\">DNI</option>\n                <option value=\"2\">C.E.</option>\n              </select>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"number_document_mobile\" class=\"label-input\"><strong>Número de documento</strong></label>\n              <input type=\"number\" id=\"number_document_mobile\" formControlName=\"number_document\"\n                class=\"form-control\" mdbInput mdbValidate>\n            </div>\n            <div class=\"row my-0\">\n              <app-button class=\"w-100 mx-2\" [size]=\"100\" [label]=\"'Guardar Datos'\" [rounded]=\"true\" [hoverable]=\"true\"\n                (onClick)=\"updateProfile()\"></app-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n    <div class=\"update-password-title\">\n      <label class=\"my-0 black-text h5\"><strong>Actualizar contraseña</strong></label>\n    </div>\n    <form [formGroup]=\"passwordForm\">\n      <div class=\"row my-0\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 my-0\">\n          <div class=\"form-group\">\n            <div class=\"input-block\">\n              <label for=\"current_password_mobile\" class=\"label-input\"><strong>Contraseña actual</strong></label>\n              <input type=\"password\" id=\"current_password_mobile\" formControlName=\"current_password\"\n                class=\"form-control\" mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"new_password_mobile\" class=\"label-input\"><strong>Nueva contraseña</strong></label>\n              <input type=\"password\" id=\"new_password_mobile\" formControlName=\"new_password\" class=\"form-control\"\n                mdbInput mdbValidate>\n            </div>\n            <div class=\"input-block\">\n              <label for=\"repeat_new_password_mobile\" class=\"label-input\"><strong>Repita la contraseña</strong></label>\n              <input type=\"password\" id=\"repeat_new_password_mobile\" formControlName=\"repeat_new_password\"\n                class=\"form-control\" mdbInput mdbValidate>\n            </div>\n            <div class=\"row my-0\">\n              <app-button class=\"w-100 mx-2\" [size]=\"100\" [label]=\"'Actualizar contraseña'\" [rounded]=\"true\"\n                [hoverable]=\"true\" (onClick)=\"updatePassword()\"></app-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"
    },
    {
      "name": "NavBarComponent",
      "id": "component-NavBarComponent-e6202a5abcd217a966124395d08b6ed2",
      "file": "src/app/shared/header/nav-bar/nav-bar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-nav-bar",
      "styleUrls": ["./nav-bar.component.scss"],
      "styles": [],
      "templateUrl": ["./nav-bar.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "config",
          "line": 13,
          "type": "INavBar"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "selectedCategory",
          "type": "INavBarItem",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "selectedIndex",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "show",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 9
        }
      ],
      "methodsClass": [
        {
          "name": "deselectCategory",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        },
        {
          "name": "selectCategory",
          "args": [
            {
              "name": "item",
              "type": "INavBarItem"
            },
            {
              "name": "index",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "jsdoctags": [
            {
              "name": "item",
              "type": "INavBarItem",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleNavBar",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { INavBar, INavBarItem } from '../../../models/navbar.model'\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n  show: boolean = false;\n  selectedCategory: INavBarItem;\n  selectedIndex: number;\n\n  @Input() config: INavBar;\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  toggleNavBar(): void{\n    this.show = !this.show;\n    this.selectedCategory = null;\n    this.selectedIndex = null;\n  }\n\n  selectCategory(item: INavBarItem, index: number ): void{\n    this.selectedCategory = item;\n    this.selectedIndex = index;\n  }\n\n  deselectCategory(): void{\n    this.selectedCategory = null;\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@use 'variables';\n\n:host{\n  .nav-item{\n    cursor: pointer;\n  }\n  .nav-container{\n    width: 450px;\n    margin-left: 2rem;\n    @media (max-width: 992px){\n      margin-left: 0rem;\n      top: 5.5rem;\n      @media (max-width: 500px) {\n        width: 100%;\n      }\n    }\n  }\n  .top-decorator{\n    position: relative;\n    &::before{\n      content: \"\";\n      top: -10px;\n      left: 50px;\n      background-color: white;\n      width: 20px;\n      height: 20px;\n      position: absolute;\n      transform: rotateZ(45deg);\n      z-index: 1;\n      box-shadow: -3px -3px 5px -2px rgba(0, 0, 0, 0.1), -5px -4px 5px 1px rgba(0, 0, 0, 0.05)\n    }\n    @media (max-width: 992px) {\n      &::before{\n        left: 35px;\n      }\n    }\n  }\n\n  .scroll{\n    max-height: 416px;\n    overflow-y: auto;\n    &::-webkit-scrollbar {\n      width: 5px;\n      background-color: #f5f5f5;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border-radius: 10px;\n      -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.1);\n      background-color: #ec111a;\n    }\n  }\n}\n:host::ng-deep{\n  .icon-active{\n    i{\n      top: 50%;\n      transform: translateY(-50%);\n      right: 0;\n    }\n  }\n}\n",
          "styleUrl": "./nav-bar.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 13
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"d-flex position-absolute nav-container overtop top-decorator\" *ngIf=\"show\" (mouseleave)=\"toggleNavBar()\">\n  <div class=\"col-md-7 py-3 white z-depth-1\">\n    <ul class=\"navbar-nav\">\n      <li class=\"py-1 position-relative\" *ngFor=\"let navItem of config.navBarList; index as index\" (mouseenter)=\"selectCategory(navItem, index)\" [ngClass]=\"{'text-danger': index === selectedIndex}\">\n        <a [routerLink]=\"['/main/category', navItem.friendlyUrl]\"><mdb-icon far icon=\"square\" class=\"mx-1\"></mdb-icon> {{navItem.name}}</a>\n        <mdb-icon far icon=\"chevron-right position-absolute\" class=\"icon-active\" *ngIf=\"index === selectedIndex\"></mdb-icon>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-md-5 py-3 grey lighten-2 z-depth-1\" *ngIf=\"selectedCategory\">\n    <div class=\"row\">\n      <div class=\"col-md-3 col-sm-2 py-0\">\n        <label *ngFor=\"let category of selectedCategory.categoryList\" class=\"d-block\"><a>{{category.name}}</a></label>\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "NavBarMobileComponent",
      "id": "component-NavBarMobileComponent-41bd1d1a2e0caabf0cbc0486d647a8dc",
      "file": "src/app/shared/header/nav-bar-mobile/nav-bar-mobile.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-nav-bar-mobile",
      "styleUrls": ["./nav-bar-mobile.component.scss"],
      "styles": [],
      "templateUrl": ["./nav-bar-mobile.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "config",
          "line": 14,
          "type": "INavBar"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "selectedCategory",
          "type": "INavBarItem",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "selectedIndex",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "show",
          "defaultValue": "false",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 10
        }
      ],
      "methodsClass": [
        {
          "name": "deselectCategory",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        },
        {
          "name": "selectCategory",
          "args": [
            {
              "name": "item",
              "type": "INavBarItem"
            },
            {
              "name": "index",
              "type": "number"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "jsdoctags": [
            {
              "name": "item",
              "type": "INavBarItem",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "number",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleNavBar",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { INavBar, INavBarItem } from 'src/app/models/navbar.model';\n\n@Component({\n  selector: 'app-nav-bar-mobile',\n  templateUrl: './nav-bar-mobile.component.html',\n  styleUrls: ['./nav-bar-mobile.component.scss']\n})\nexport class NavBarMobileComponent implements OnInit {\n  show: boolean = false;\n  selectedCategory: INavBarItem;\n  selectedIndex: number;\n\n  @Input() config: INavBar;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleNavBar(): void{\n    this.show = !this.show;\n    this.selectedCategory = null;\n    this.selectedIndex = null;\n  }\n\n  selectCategory(item: INavBarItem, index: number ): void{\n    this.selectedCategory = item;\n    this.selectedIndex = index;\n    console.log(this.selectedCategory, this.selectedIndex)\n  }\n\n  deselectCategory(): void{\n    this.selectedCategory = null;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host{\n  .nav-item{\n    cursor: pointer;\n  }\n}\n:host::ng-deep{\n  .icon-active{\n    i{\n      top: 50%;\n      transform: translateY(-50%);\n      right: 0;\n    }\n  }\n}\n",
          "styleUrl": "./nav-bar-mobile.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 14
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"d-flex position-absolute overtop w-100 vh-100 fixed-top flex-column\" *ngIf=\"show\">\n  <nav class=\"navbar navbar-expand-lg navbar-light white d-block\">\n    <button class=\"navbar-toggler btn btn-danger d-lg-none px-3 z-depth-0\" (click)=\"toggleNavBar()\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <mdb-icon fas icon=\"times\" class=\"adaptative-icon white-text\"></mdb-icon>\n    </button>\n  </nav>\n  <div class=\"px-3 white w-100 h-100\">\n    <ul class=\"navbar-nav\">\n      <li class=\"py-1 position-relative\" *ngFor=\"let navItem of config.navBarList; index as index\" (click)=\"categories.toggle();\">\n        <a class=\"my-1 d-flex align-items-center\">\n          <label class=\"w-100 my-0 font-size-35 font-family-2\"><strong>{{navItem.name}}</strong></label>\n          <mdb-icon *ngIf=\"categories.isCollapsed\" far icon=\"chevron-down\" class=\"mx-1\"></mdb-icon>\n          <mdb-icon *ngIf=\"!categories.isCollapsed\" far icon=\"chevron-up\" class=\"mx-1\"></mdb-icon>\n        </a>\n\n        <div class=\"col-md-12 z-depth-0\"  mdbCollapse #categories=\"bs-collapse\">\n          <div class=\"row\">\n            <div class=\"col-md-12 py-2 px-0\">\n              <label *ngFor=\"let category of navItem.categoryList\" class=\"d-block font-size-35 font-family-2\"><a>{{category.name}}</a></label>\n            </div>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</div>\n"
    },
    {
      "name": "NewCardComponent",
      "id": "component-NewCardComponent-07cd816563d6fcc76c4649837f0e8307",
      "file": "src/app/static-pages/new-card/new-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-new-card",
      "styleUrls": ["./new-card.component.scss"],
      "styles": [],
      "templateUrl": ["./new-card.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { INewCardResolver } from 'src/app/resolvers/static-pages/new-card.resolver';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-new-card',\n  templateUrl: './new-card.component.html',\n  styleUrls: ['./new-card.component.scss']\n})\nexport class NewCardComponent implements OnInit {\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as INewCardResolver;\n  }\n  content: IStaticPageBackend;\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.content = this.resolvedData.content;\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./new-card.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          }
        ],
        "line": 15,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 12
          }
        }
      },
      "templateData": "<p>new-card works!</p>\n"
    },
    {
      "name": "NotFoundComponent",
      "id": "component-NotFoundComponent-b1a88fa6fba2daac3112da5692c9c00a",
      "file": "src/app/static-pages/not-found/not-found.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-not-found",
      "styleUrls": ["./not-found.component.scss"],
      "styles": [],
      "templateUrl": ["./not-found.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./not-found.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<p>not-found works!</p>\n"
    },
    {
      "name": "OrderDetailComponent",
      "id": "component-OrderDetailComponent-e537396d165d82359996d9ea1e53833c",
      "file": "src/app/modals/order-detail/order-detail.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-order-detail",
      "styleUrls": ["./order-detail.component.scss"],
      "styles": [],
      "templateUrl": ["./order-detail.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [114]
        },
        {
          "name": "order",
          "type": "IOrderItem",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "methodsClass": [
        {
          "name": "buyBack",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        },
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15
        },
        {
          "name": "userOrders",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { IOrderItem } from 'src/app/models/order-item.model';\nimport { OrdersComponent } from '../orders/orders.component';\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.scss']\n})\nexport class OrderDetailComponent implements OnInit {\n  order: IOrderItem;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService) { }\n\n  ngOnInit(): void {\n  }\n\n  buyBack(): void{\n    this.closeModal();\n  }\n\n  userOrders(): void{\n    this.closeModal();\n    this.modalRef = this.modalService.show(OrdersComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  closeModal(): void{\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "\n",
          "styleUrl": "./order-detail.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">\n    <mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" style=\"cursor: pointer;\" (click)=\"userOrders()\"></mdb-icon>\n    <strong>Detalle de Pedido</strong>\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary my-2\">\n  <div class=\"px-4 py-2 mx-2 rounded border-grey\">\n    <div class=\"d-flex w-100 justify-content-between my-1\">\n      <h6 class=\"my-0\"><strong>Orden Nº {{order.code}}</strong></h6>\n      <small><strong>{{order.create_date | date: 'dd/MM/yyyy'}}</strong></small>\n    </div>\n    <div class=\"d-flex w-100 justify-content-between my-2\">\n      <label >Estatus del pedido</label>\n      <label [ngClass]=\"{'green-text': order.state}\"><strong>{{order.state}}</strong></label>\n    </div>\n    <div class=\"d-flex w-100 justify-content-between my-1\">\n      <label>Vendido por {{order.type_payment}}</label>\n    </div>\n    <div class=\"d-flex w-100 my-1 flex-column\">\n      <div class=\"d-flex w-100 my-2 justify-content-between\" *ngFor=\"let orderItem of order.detail\">\n        <div class=\"d-flex w-100 flex-shrink-2\" >\n          <img class=\"rounded item-image\" src=\"https://via.placeholder.com/75x75\">\n        </div>\n        <div class=\"d-flex w-100 flex-column mx-3\">\n          <div class=\"d-flex w-100\">\n            <h5><strong>{{orderItem.product_name}}</strong></h5>\n          </div>\n          <div class=\"d-flex w-100\">\n            <label>{{orderItem.brand.name}}</label>\n          </div>\n          <div class=\"d-flex w-100 justify-content-between\">\n            <label>Precio</label>\n            <label><strong>{{ orderItem.amount_subtotal | currency: 'S/ '}}</strong></label>\n          </div>\n          <div class=\"d-flex w-100 justify-content-between\">\n            <label>ScotiaPuntos</label>\n            <label><strong>{{ orderItem.amount_subtotal * 300 | number: ''}}</strong></label>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex w-100 my-3 justify-content-between\">\n      <div class=\"d-flex w-100 flex-shrink-2\"></div>\n      <div class=\"d-flex w-100 flex-column\">\n        <div class=\"d-flex w-100 justify-content-between\">\n          <label>Costo de envio</label>\n          <label><strong>{{ order.amount_delivery | currency: 'S/ '}}</strong></label>\n        </div>\n        <div class=\"d-flex w-100 justify-content-between\">\n          <label><strong>Total</strong></label>\n          <label><strong>{{ order.amount_total | currency: 'S/ '}}</strong></label>\n        </div>\n        <div class=\"d-flex w-100 justify-content-between red-text\">\n          <label><strong>Total ScotiaPuntos</strong></label>\n          <label><strong>{{ order.amount_total * 300 | currency: 'S/ '}}</strong></label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"rounded mx-2 px-2 my-2 beige-light\">\n    <p class=\"disclaimer py-1 grey-dark-text\">\n      <span>Para cualquier duda relacionada a su pedido, comunicarse al siguiente teléfono o correo:</span>\n      <br/><br/>\n      <strong>mail@proveedor.com</strong><br/>\n      <strong>999-999-999</strong>\n    </p>\n  </div>\n</div>\n<div class=\"modal-footer d-flex\">\n  <app-button class=\"w-100\" [size]=\"100\" [label]=\"'Volver a comprar'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"buyBack()\"></app-button>\n</div>\n"
    },
    {
      "name": "OrderItemComponent",
      "id": "component-OrderItemComponent-3d55e0b72f46e704b630c27aafb8ca76",
      "file": "src/app/modals/orders/order-item/order-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-order-item",
      "styleUrls": ["./order-item.component.scss"],
      "styles": [],
      "templateUrl": ["./order-item.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "order",
          "line": 12,
          "type": "IOrderItem"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16
        },
        {
          "name": "orderDetail",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\n\nimport { IOrderItem } from 'src/app/models/order-item.model'\nimport { ORDER_DETAIL_TOKEN } from '../../order-detail/order-detail';\n@Component({\n  selector: 'app-order-item',\n  templateUrl: './order-item.component.html',\n  styleUrls: ['./order-item.component.scss']\n})\nexport class OrderItemComponent implements OnInit {\n  @Input() order: IOrderItem;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(ORDER_DETAIL_TOKEN) private orderDetailComponent: any) { }\n\n  ngOnInit(): void {\n  }\n\n  orderDetail(): void {\n    this.modalRef && this.modalRef.hide();\n    this.modalRef = this.modalService.show(this.orderDetailComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n      data: {\n        order: this.order\n      }\n    });\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./order-item.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "orderDetailComponent",
            "type": "any"
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "orderDetailComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<a class=\"list-group-item list-group-item-action flex-column align-items-start my-1 py-4\" (click)=\"orderDetail()\">\n  <div class=\"d-flex w-100 justify-content-between\">\n    <h6 class=\"mb-1\"><strong>Orden Nº{{order.code}}</strong></h6>\n    <small><strong>{{order.create_date | date: 'dd/MM/yyyy'}}</strong></small>\n  </div>\n  <p class=\"my-1\">Total: {{order.amount_total | currency: 'S/ '}}</p>\n  <p>Productos: {{order.detail.length}}</p>\n</a>\n"
    },
    {
      "name": "OrdersComponent",
      "id": "component-OrdersComponent-a07169095a4ceba9ab716835322a89f6",
      "file": "src/app/modals/orders/orders.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-orders",
      "styleUrls": ["./orders.component.scss"],
      "styles": [],
      "templateUrl": ["./orders.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "orders",
          "defaultValue": "orders",
          "line": 13,
          "type": "Array<IOrderItem>"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        },
        {
          "name": "returnProfile",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { IOrderItem } from 'src/app/models/order-item.model';\nimport { AddressesComponent } from 'src/app/modals/addresses/addresses.component';\nimport { ProfileComponent } from 'src/app/modals/profile/profile.component';\nimport { orders } from 'src/app/mockups/order.mockup';\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n  @Input() orders: Array<IOrderItem> = orders;\n\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService) {}\n\n  ngOnInit(): void {}\n\n  returnProfile(): void{\n    this.closeModal();\n    this.modalRef = this.modalService.show(ProfileComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./orders.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">\n    <mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" style=\"cursor: pointer;\" (click)=\"returnProfile()\"></mdb-icon>\n    <strong>Mis ordenes</strong>\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <label class=\"my-0 red-text h5\"></label>\n    <div class=\"list-group\">\n      <app-order-item *ngFor=\"let orderItem of orders\" [order]=\"orderItem\"></app-order-item>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "PageHeroComponent",
      "id": "component-PageHeroComponent-dc7ab9b61d9bd799e7ab1662385aadb3",
      "file": "src/app/shared/page-hero/page-hero.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-page-hero",
      "styleUrls": ["./page-hero.component.scss"],
      "styles": [],
      "templateUrl": ["./page-hero.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "color",
          "defaultValue": "\"orange\"",
          "line": 13,
          "type": "string"
        },
        {
          "name": "imgUrl",
          "line": 12,
          "type": "string"
        },
        {
          "name": "title",
          "line": 10,
          "type": "string"
        },
        {
          "name": "url",
          "line": 11,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-hero',\n  templateUrl: './page-hero.component.html',\n  styleUrls: ['./page-hero.component.scss']\n})\nexport class PageHeroComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() url: string;\n  @Input() imgUrl: string;\n  @Input() color: string = \"orange\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".hero,\n.hero-body,\n.hero-img {\n  min-height: 20rem;\n}\n\n.hero-body {\n  align-items: center;\n}\n",
          "styleUrl": "./page-hero.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 13
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"hero row no-gutters text-white\" [ngClass]=\"[color]\">\n  <div class=\"col-6 d-flex align-self-start align-items-center hero-body\">\n    <h1 class=\"font-size-7 bold-text\">\n      {{title}}\n    </h1>\n  </div>\n  <div\n    class=\"col-6 img-cover hero-img\"\n    [style.background-image]=\"'url(' + url + imgUrl + ')'\"\n  ></div>\n</div>\n"
    },
    {
      "name": "ProductDetailComponent",
      "id": "component-ProductDetailComponent-7388b24dcec34a73d0f4476d715d74ec",
      "file": "src/app/core/product-detail/product-detail.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-product-detail",
      "styleUrls": ["./product-detail.component.scss"],
      "styles": [],
      "templateUrl": ["./product-detail.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.scss']\n})\nexport class ProductDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./product-detail.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "\n<div class=\"contain px-sm-5\">\n  <ul class=\"mb-3 mb-md-5 custom-breadcrumb\">\n    <li class=\"breadcrumb-item\">\n      <a\n        [routerLink]=\"['/']\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        ><span>Inicio</span></a\n      >\n    </li>\n    <!-- <li class=\"breadcrumb-item\">\n      <a\n        [routerLink]=\"['/category/' + category.friendly_url]\"\n        routerLinkActive=\"active\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n        ><span>{{ category.name }}</span></a\n      >\n    </li> -->\n  </ul>\n\n</div>\n"
    },
    {
      "name": "ProductItemComponent",
      "id": "component-ProductItemComponent-60c79fcca0c67914729727d95e03726c",
      "file": "src/app/shared/product-item/product-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-product-item",
      "styleUrls": ["./product-item.component.scss"],
      "styles": [],
      "templateUrl": ["./product-item.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "product",
          "line": 13,
          "type": "IProductBackend"
        },
        {
          "name": "type",
          "defaultValue": "'scotia'",
          "line": 14,
          "type": "ProductItemType"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "catService",
          "type": "CategoryService",
          "optional": false,
          "description": "",
          "line": 19,
          "modifierKind": [114]
        },
        {
          "name": "pointsDivider",
          "defaultValue": "Constants.POINTS_DIVIDER",
          "type": "",
          "optional": false,
          "description": "",
          "line": 17
        },
        {
          "name": "shortName",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21
        },
        {
          "name": "shortStringWithPoints",
          "args": [
            {
              "name": "value",
              "type": "string",
              "defaultValue": "''"
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 25,
          "modifierKind": [112],
          "jsdoctags": [
            {
              "name": "value",
              "type": "string",
              "defaultValue": "''",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { Constants } from 'src/app/constants';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { IProductBackend } from 'src/app/services/product.service';\nimport { ProductItemType } from '../../models/product.model';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.scss'],\n})\nexport class ProductItemComponent implements OnInit {\n  @Input() product: IProductBackend;\n  @Input() type: ProductItemType = 'scotia';\n\n  public shortName: string;\n  pointsDivider = Constants.POINTS_DIVIDER;\n\n  constructor(public catService: CategoryService) {}\n\n  ngOnInit(): void {\n    this.shortName = this.shortStringWithPoints(this.product.name);\n  }\n\n  private shortStringWithPoints(value: string = ''): string {\n    const maxLength = 30;\n    if (value.length <= maxLength) {\n      return value;\n    }\n    return `${value.substr(0, maxLength)} ...`;\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import \"_media\";\n\n.flex-fill {\n  flex-basis: 0 !important;\n}\n\n.rounded {\n  border-bottom-left-radius: 0 !important;\n  border-bottom-right-radius: 0 !important;\n}\n\n.card-img-top {\n  height: 8rem;\n  object-fit: contain;\n}\n\n.z-depth-1 {\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0), 0 2px 10px 0 rgba(0, 0, 0, 0.1) !important;\n}\n\n.simple {\n  .pi-points,\n  .pi-special-price-text,\n  .pi-regular-price-text {\n    display: none;\n  }\n}\n.discount {\n  .pi-points {\n    //  use global variable\n    color: red !important;\n    .pi-points-amount {\n      font-weight: bold;\n    }\n  }\n  .pi-regular-price-text {\n    display: block;\n  }\n}\n.scotia {\n  .pi-brand,\n  .pi-special-price {\n    font-size: 14px !important;\n  }\n  .pi-special-price {\n    display: flex;\n    flex-flow: row wrap;\n    line-height: 1.1em;\n    .pi-special-price-text {\n      font-weight: bold;\n    }\n  }\n  .pi-points,\n  .pi-regular-price {\n    line-height: 16.8px;\n    display: flex;\n    flex-flow: row wrap;\n  }\n}\n@include media-breakpoint-up(sm) {\n  .card-img-top {\n    height: 11rem;\n  }\n\n  .scotia {\n    .pi-special-price,\n    .pi-points,\n    .pi-regular-price {\n      line-height: inherit;\n    }\n    .pi-regular-price {\n      font-size: var(--font-size-05);\n    }\n  }\n}\n",
          "styleUrl": "./product-item.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "catService",
            "type": "CategoryService"
          }
        ],
        "line": 17,
        "jsdoctags": [
          {
            "name": "catService",
            "type": "CategoryService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"card z-depth-1 border-0 font-family-2 font-size-1\" [ngClass]=\"type\">\n  <div class=\"view overlay waves-light\" mdbWavesEffect>\n    <img\n      class=\"card-img-top\"\n      [src]=\"catService.urlAttachment + product.image_cover\"\n    />\n    <a [href]=\"product.friendly_url\">\n      <div class=\"mask rgba-white-slight\"></div>\n    </a>\n  </div>\n\n  <div class=\"card-body p-2 p-sm-3\">\n    <div class=\"pi-brand bold-text\">\n      {{ product.brand.name }}\n    </div>\n    <p class=\"mb-2 text-clip-1 pi-name\">\n      {{ product.name }}\n    </p>\n    <div class=\"mb-1 red-text pi-special-price\">\n      <div class=\"pi-special-price-text\">\n        Precio Scotiabank&nbsp;\n      </div>\n      <div class=\"pi-special-price-amount bold-text\">\n        S/{{ product.special_price | number: \"1.0-0\" }}\n      </div>\n    </div>\n    <div class=\"mb-1 black-light-text pi-points\">\n      <div>\n        Scotia puntos&nbsp;\n      </div>\n      <div class=\"pi-points-amount\">\n        {{ product.special_price / pointsDivider | number: \"1.0-0\" }}\n      </div>\n    </div>\n    <div class=\"mb-2 black-light-text pi-regular-price\">\n      <span class=\"pi-regular-price-text\">Precio regular&nbsp;</span>\n      <span>S/{{ product.price | number: \"1.0-0\" }}</span>\n    </div>\n    <div>\n      <a [href]=\"product.friendly_url\">\n        <app-button\n          label=\"Añadir al carrito\"\n          type=\"custom\"\n          hoverable=\"true\"\n          additionalClasses=\"btn-block primary\"\n        ></app-button>\n      </a>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "ProductListComponent",
      "id": "component-ProductListComponent-b781ddc3283682259a7a3911d27290e1",
      "file": "src/app/shared/product-list/product-list.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-product-list",
      "styleUrls": ["./product-list.component.scss"],
      "styles": [],
      "templateUrl": ["./product-list.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "_brands",
          "defaultValue": "[]",
          "line": 21,
          "type": "IBrandBackend[]"
        },
        {
          "name": "filters",
          "defaultValue": "[]",
          "line": 20,
          "type": "IFilterBackend[]"
        },
        {
          "name": "isPaginated",
          "defaultValue": "false",
          "line": 23
        },
        {
          "name": "itemsPerPage",
          "defaultValue": "10",
          "line": 24
        },
        {
          "name": "loading",
          "defaultValue": "true",
          "line": 25
        },
        {
          "name": "products",
          "defaultValue": "[]",
          "line": 19,
          "type": "IProductBackend[]"
        },
        {
          "name": "type",
          "defaultValue": "'scotia'",
          "line": 22,
          "type": "ProductItemType"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "currentPage",
          "defaultValue": "1",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 26
        }
      ],
      "methodsClass": [
        {
          "name": "menuChanged",
          "args": [
            {
              "name": "menuFilters",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "jsdoctags": [
            {
              "name": "menuFilters",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33
        },
        {
          "name": "pageChanged",
          "args": [
            {
              "name": "index",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "jsdoctags": [
            {
              "name": "index",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\nimport { IProductItem, ProductItemType } from 'src/app/models/product.model';\nimport {\n  CategoryService,\n  IBrandBackend,\n  IFilterBackend,\n} from 'src/app/services/category.service';\nimport {\n  IProductBackend,\n  ProductService,\n} from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss'],\n})\nexport class ProductListComponent implements OnInit {\n  @Input() products: IProductBackend[] = [];\n  @Input() filters: IFilterBackend[] = [];\n  @Input() _brands: IBrandBackend[] = [];\n  @Input() type: ProductItemType = 'scotia';\n  @Input() isPaginated = false;\n  @Input() itemsPerPage = 10;\n  @Input() loading = true;\n  currentPage = 1;\n\n  constructor(\n    private productService: ProductService,\n    private catService: CategoryService\n  ) {}\n\n  ngOnInit(): void {}\n\n  pageChanged(index) {\n    this.currentPage = index;\n  }\n\n  menuChanged(menuFilters) {\n    this.loading = true;\n    this.productService\n      .getProducts(menuFilters, this.catService.category._id)\n      .subscribe((res) => {\n        this.products = res;\n        this.loading = false;\n      });\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./product-list.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "productService",
            "type": "ProductService"
          },
          {
            "name": "catService",
            "type": "CategoryService"
          }
        ],
        "line": 26,
        "jsdoctags": [
          {
            "name": "productService",
            "type": "ProductService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "catService",
            "type": "CategoryService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<app-section-header>\n  Productos {{ isPaginated ? \"\" : \"destacados\" }}\n</app-section-header>\n<div [class.px-lg-5]=\"!isPaginated\">\n  <div class=\"d-flex flex-row justify-content-space\">\n    <app-product-list-menu\n      *ngIf=\"isPaginated\"\n      [filters]=\"filters\"\n      [_brands]=\"_brands\"\n      (menuChange)=\"menuChanged($event)\"\n      class=\"d-block d-mb-none mr-2\"\n    >\n    </app-product-list-menu>\n    <div class=\"flex-grow-1\">\n      <app-product-list-nav\n        *ngIf=\"isPaginated\"\n        class=\"d-block d-mb-none mb-4 px-1\"\n        [isOrderByVisible]=\"true\"\n        (pageChange)=\"pageChanged($event)\"\n      >\n      </app-product-list-nav>\n      <div class=\"row no-gutters\" *ngIf=\"!loading\">\n        <app-product-item\n          class=\"d-block px-1 pb-3 col-sm-6 col-md-6 col-lg-4 col-xl-3 col-xxl-1-5\"\n          [class.col-sm-12]=\"isPaginated\"\n          *ngFor=\"\n            let product of products\n              | paginate\n                : {\n                    itemsPerPage: itemsPerPage,\n                    currentPage: currentPage,\n                    totalItems: products.length\n                  }\n          \"\n          [product]=\"product\"\n          [type]=\"type\"\n        ></app-product-item>\n      </div>\n      <div *ngIf=\"isPaginated\" class=\"px-1 text-center\">\n        <app-global-loading\n          *ngIf=\"loading\"\n          class=\"d-block pb-4 pt-2 pt-md-3\"\n        ></app-global-loading>\n        <p\n          class=\"bold-text pb-4 pt-2 pt-md-3\"\n          *ngIf=\"!loading && products.length === 0\"\n        >\n          No se encontraron artículos\n        </p>\n        <app-product-list-nav\n          class=\"d-block mt-2\"\n          (pageChange)=\"pageChanged($event)\"\n        >\n        </app-product-list-nav>\n      </div>\n    </div>\n  </div>\n</div>\n"
    },
    {
      "name": "ProductListMenuComponent",
      "id": "component-ProductListMenuComponent-7dea5706fa63f5806eb3afc2a1461089",
      "file": "src/app/shared/product-list-menu/product-list-menu.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-product-list-menu",
      "styleUrls": ["./product-list-menu.component.scss"],
      "styles": [],
      "templateUrl": ["./product-list-menu.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "_brands",
          "line": 16,
          "type": "IBrandBackend[]"
        },
        {
          "name": "filters",
          "line": 15,
          "type": "IFilterBackend[]"
        }
      ],
      "outputsClass": [
        {
          "name": "menuChange",
          "defaultValue": "new EventEmitter<any>()",
          "line": 17,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "formMenu",
          "defaultValue": "this.fb.group({})",
          "type": "",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "methodsClass": [
        {
          "name": "initFormFilters",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33
        },
        {
          "name": "sendFormFilters",
          "args": [
            {
              "name": "val",
              "type": "object",
              "defaultValue": "{}"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 119,
          "jsdoctags": [
            {
              "name": "val",
              "type": "object",
              "defaultValue": "{}",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport {\n  IBrandBackend,\n  IFilterBackend,\n} from 'src/app/services/category.service';\nimport { Constants } from 'src/app/constants';\n\n@Component({\n  selector: 'app-product-list-menu',\n  templateUrl: './product-list-menu.component.html',\n  styleUrls: ['./product-list-menu.component.scss'],\n})\nexport class ProductListMenuComponent implements OnInit {\n  @Input() filters: IFilterBackend[];\n  @Input() _brands: IBrandBackend[];\n  @Output() menuChange = new EventEmitter<any>();\n\n  formMenu = this.fb.group({});\n\n  // Getters for the html\n  get formFilters() {\n    return (this.formMenu.get('formFilters') as FormArray)?.controls;\n  }\n  get formBrands() {\n    return ((this.formMenu.get('formBrand') as FormGroup)?.get(\n      'value'\n    ) as FormArray)?.controls;\n  }\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.initFormFilters();\n    this.formMenu.valueChanges.subscribe((val) => {\n      this.sendFormFilters(val);\n    });\n    console.log(this.formMenu.value);\n    this.sendFormFilters(this.formMenu.value);\n  }\n\n  initFormFilters() {\n    // Add every form group|array to formMenu\n    // price, points, brands, filters\n    const formPrice = this.fb.group(\n      {\n        bindedTo: ['precio'],\n        used: [true],\n        value: this.fb.array([this.fb.control(null), this.fb.control(null)]),\n      },\n      {\n        validators: (controls) => {\n          return (controls.get('value') as FormArray).controls[0].value <\n            (controls.get('value') as FormArray).controls[1].value\n            ? null\n            : {\n                errorPricesInvalid: true,\n              };\n        },\n      }\n    );\n    this.formMenu.addControl('formPrice', formPrice);\n\n    const formPoints = this.fb.group(\n      {\n        bindedTo: ['precio'],\n        used: [true],\n        value: this.fb.array([this.fb.control(null), this.fb.control(null)]),\n      },\n      {\n        validators: (controls) => {\n          return (controls.get('value') as FormArray).controls[0].value <\n            (controls.get('value') as FormArray).controls[1].value\n            ? null\n            : {\n                errorPricesInvalid: true,\n              };\n        },\n      }\n    );\n    this.formMenu.addControl('formPoints', formPoints);\n\n    const formBrand = this.fb.group({\n      bindedTo: ['marca'],\n      used: [true],\n      value: this.fb.array(\n        this._brands.map((val) =>\n          this.fb.group({\n            name: [val.name],\n            toggle: [true],\n          })\n        )\n      ),\n    });\n    this.formMenu.addControl('formBrand', formBrand);\n\n    const formFilters = this.fb.array(\n      this.filters.map((filter) =>\n        this.fb.group({\n          bindedTo: [''],\n          name: [(filter as any).filter.name],\n          used: [true],\n          filter_id: [filter._id],\n          type: ['checkbox'],\n          value: this.fb.array(\n            filter.values.map((val) =>\n              this.fb.group({\n                name: [val],\n                toggle: [true],\n              })\n            )\n          ),\n        })\n      )\n    );\n    this.formMenu.addControl('formFilters', formFilters);\n  }\n\n  sendFormFilters(val = {}) {\n    // Mildly validate the values of formMenu\n    // so the back receives|processes less params\n    let flatFormArr = [];\n    if (this.formMenu.get('formPrice').valid && val['formPrice'])\n      flatFormArr.push(val['formPrice']);\n    if (this.formMenu.get('formPoints').valid && val['formPoints']) {\n      // shallow copy to avoid modifying source obj\n      let formPointsCopy = Object.assign({}, val['formPoints']);\n      // points is the price divided by POINTS_DIVIDER\n      formPointsCopy.value = (formPointsCopy.value as [\n        number,\n        number\n      ])?.map((val) => Number((val / Constants.POINTS_DIVIDER).toFixed(2)));\n\n      // merge with price filter if price is also valid\n      if (this.formMenu.get('formPrice').valid && val['formPrice']) {\n        flatFormArr = [];\n        // intersect the filter amount values\n        if (val['formPrice'].value[0] > formPointsCopy.value[0])\n          formPointsCopy.value[0] = val['formPrice'].value[0];\n        if (val['formPrice'].value[1] < formPointsCopy.value[1])\n          formPointsCopy.value[1] = val['formPrice'].value[1];\n      }\n      flatFormArr.push(formPointsCopy);\n    }\n\n    if (this.formMenu.get('formBrand').dirty && val['formBrand'])\n      flatFormArr.push(val['formBrand']);\n    if (this.formMenu.get('formFilters').dirty && val['formFilters'])\n      flatFormArr.push(...val['formFilters']);\n\n    // then emit them\n    this.menuChange.emit(flatFormArr);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".card {\n  width: 14rem;\n  > * + * {\n    border-top: 1px solid var(--grey);\n  }\n  .form-control {\n    font-size: inherit;\n  }\n\n  /* Webkit */\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n}\n",
          "styleUrl": "./product-list-menu.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "fb",
            "type": "FormBuilder"
          }
        ],
        "line": 29,
        "jsdoctags": [
          {
            "name": "fb",
            "type": "FormBuilder",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "formFilters": {
          "name": "formFilters",
          "getSignature": {
            "name": "formFilters",
            "type": "",
            "returnType": "",
            "line": 22
          }
        },
        "formBrands": {
          "name": "formBrands",
          "getSignature": {
            "name": "formBrands",
            "type": "",
            "returnType": "",
            "line": 25
          }
        }
      },
      "templateData": "<div\n  class=\"card z-depth-1 font-size-1 font-family-2 border-0\"\n  [formGroup]=\"formMenu\"\n>\n  <ng-container formArrayName=\"formFilters\">\n    <div\n      *ngFor=\"let formFilter of formFilters; let i = index\"\n      [formGroupName]=\"i\"\n      class=\"p-4\"\n    >\n      <h5 class=\"bold-text mb-2\">{{ formFilter.value?.name }}</h5>\n      <ng-container formArrayName=\"value\">\n        <ng-container\n          *ngFor=\"let filter of formFilter.get('value').controls; let j = index\"\n          [formGroupName]=\"j\"\n        >\n          <mdb-checkbox\n            class=\"d-block\"\n            [ngClass]=\"{ 'mb-1': j === formFilter.get('value').length }\"\n            [default]=\"true\"\n            [checked]=\"true\"\n            formControlName=\"toggle\"\n            >{{ filter.value?.name }}</mdb-checkbox\n          >\n        </ng-container>\n      </ng-container>\n    </div>\n  </ng-container>\n\n  <div class=\"p-4\" formGroupName=\"formPrice\">\n    <h5 class=\"bold-text mb-2\">Precio</h5>\n    <div formArrayName=\"value\" class=\"form-row\">\n      <div class=\"col\">\n        <input\n          mdbInput\n          OnlyNumber=\"true\"\n          type=\"number\"\n          class=\"form-control\"\n          placeholder=\"S/0\"\n          formControlName=\"0\"\n        />\n      </div>\n      <span class=\"d-flex align-self-center px-1\">a</span>\n      <div class=\"col\">\n        <input\n          mdbInput\n          OnlyNumber=\"true\"\n          type=\"number\"\n          class=\"form-control\"\n          placeholder=\"S/1,000\"\n          formControlName=\"1\"\n        />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"p-4\" formGroupName=\"formPoints\">\n    <h5 class=\"bold-text mb-2\">Puntos</h5>\n    <div formArrayName=\"value\" class=\"form-row\">\n      <div class=\"col\">\n        <input\n          mdbInput\n          OnlyNumber=\"true\"\n          type=\"number\"\n          class=\"form-control\"\n          placeholder=\"0\"\n          formControlName=\"0\"\n        />\n      </div>\n      <span class=\"d-flex align-self-center px-1\">a</span>\n      <div class=\"col\">\n        <input\n          mdbInput\n          OnlyNumber=\"true\"\n          type=\"number\"\n          class=\"form-control\"\n          placeholder=\"1,000\"\n          formControlName=\"1\"\n        />\n      </div>\n    </div>\n  </div>\n\n  <div class=\"p-4\" *ngIf=\"_brands\" formGroupName=\"formBrand\">\n    <h5 class=\"bold-text mb-2\">Marca</h5>\n    <ng-container formArrayName=\"value\">\n      <ng-container\n        *ngFor=\"let _formBrand of formBrands; let i = index\"\n        [formGroupName]=\"i\"\n      >\n        <mdb-checkbox\n          class=\"d-block\"\n          [ngClass]=\"{ 'mb-1': i === formBrands.length }\"\n          [default]=\"true\"\n          [checked]=\"true\"\n          formControlName=\"toggle\"\n          >{{ _formBrand.value?.name }}</mdb-checkbox\n        >\n      </ng-container>\n    </ng-container>\n  </div>\n</div>\n"
    },
    {
      "name": "ProductListNavComponent",
      "id": "component-ProductListNavComponent-59a4ed678e2df051a44c1eed2765ad6b",
      "file": "src/app/shared/product-list-nav/product-list-nav.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-product-list-nav",
      "styleUrls": ["./product-list-nav.component.scss"],
      "styles": [],
      "templateUrl": ["./product-list-nav.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "isOrderByVisible",
          "defaultValue": "false",
          "line": 9
        }
      ],
      "outputsClass": [
        {
          "name": "pageChange",
          "defaultValue": "new EventEmitter<number>()",
          "line": 10,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-product-list-nav',\n  templateUrl: './product-list-nav.component.html',\n  styleUrls: ['./product-list-nav.component.scss'],\n})\nexport class ProductListNavComponent implements OnInit {\n  @Input() isOrderByVisible = false;\n  @Output() pageChange = new EventEmitter<number>();\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import \"_media\";\n\nnav {\n  .custom-select {\n    width: unset;\n  }\n  pagination-template {\n    margin-left: auto;\n    margin-right: auto;\n  }\n  .pagination {\n    line-height: 0;\n    font-variant-numeric: tabular-nums;\n    .page-item .page-link {\n      font-size: var(--font-size-1);\n      &.selected {\n        border-color: var(--red) !important;\n        color: var(--red);\n      }\n    }\n  }\n}\n\n@include media-breakpoint-up(sm) {\n  nav {\n    background-color: var(--white);\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16),\n      0 2px 10px 0 rgba(0, 0, 0, 0.12) !important;\n    pagination-template {\n      margin-right: 0;\n      margin-left: auto;\n    }\n  }\n}\n",
          "styleUrl": "./product-list-nav.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 10
      },
      "implements": ["OnInit"],
      "templateData": "<nav\n  class=\"font-family-2 p-sm-4 d-flex flex-row rounded\"\n  [ngClass]=\"{ 'd-mb-none': isOrderByVisible }\"\n>\n  <select\n    *ngIf=\"isOrderByVisible\"\n    class=\"col flex-grow-0 box-select custom-select font-size-1 mr-2\"\n  >\n    <option selected>Ordenar por: Precio de mayor a menor</option>\n  </select>\n\n  <pagination-template\n    class=\"d-block\"\n    #p=\"paginationApi\"\n    (pageChange)=\"pageChange.emit($event)\"\n    maxSize=\"5\"\n  >\n    <ul class=\"pagination\">\n      <li\n        class=\"page-item mr-2\"\n        [class.disabled]=\"p.isFirstPage()\"\n        (click)=\"p.previous()\"\n      >\n        <a class=\"page-link border-grey rounded\" mdbWavesEffect>\n          <mdb-icon fas icon=\"chevron-left\"></mdb-icon>\n        </a>\n      </li>\n      <li\n        class=\"page-item mr-2\"\n        *ngFor=\"let page of p.pages\"\n        (click)=\"p.setCurrent(page.value)\"\n      >\n        <a\n          class=\"page-link border-grey rounded\"\n          [class.selected]=\"p.getCurrent() === page.value\"\n          mdbWavesEffect\n        >\n          {{ page.label }}\n        </a>\n      </li>\n      <li\n        class=\"page-item\"\n        [class.disabled]=\"p.isLastPage()\"\n        (click)=\"p.next()\"\n      >\n        <a class=\"page-link border-grey rounded\" mdbWavesEffect>\n          <mdb-icon fas icon=\"chevron-right\"></mdb-icon>\n        </a>\n      </li>\n    </ul>\n  </pagination-template>\n</nav>\n"
    },
    {
      "name": "ProfileComponent",
      "id": "component-ProfileComponent-54fd2c97c133f66efe9065b8c6fbc395",
      "file": "src/app/modals/profile/profile.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-profile",
      "styleUrls": ["./profile.component.scss"],
      "styles": [],
      "templateUrl": ["./profile.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 16,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 71
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22
        },
        {
          "name": "userAddresses",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39
        },
        {
          "name": "userData",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25
        },
        {
          "name": "userLogOut",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67
        },
        {
          "name": "userOrders",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\n\nimport { ADDRESSES_TOKEN } from '../addresses/addresses';\nimport { MY_DATA_TOKEN } from '../my-data/my-data';\nimport { ORDERS_TOKEN } from '../orders/orders';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(MY_DATA_TOKEN) private myDataComponent: any,\n    @Inject(ADDRESSES_TOKEN) private addressesComponent: any,\n    @Inject(ORDERS_TOKEN) private ordersComponent: any\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  userData(): void{\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.myDataComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  userAddresses(): void{\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.addressesComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  userOrders(): void{\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.ordersComponent, {\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    })\n  }\n\n  userLogOut(): void{\n    this.closeModal();\n  }\n\n  closeModal(): void{\n    this.modalRef && this.modalRef.hide();\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host{\n  .close-icon-block {\n    margin-top: 4px;\n  }\n\n  .label-input {\n      font-weight: bold;\n  }\n\n  .input-block {\n      margin-bottom: 15px;\n  }\n\n  .update-password-title {\n      margin-left: 15px;\n      margin-top: 30px;\n      margin-bottom: 30px;\n  }\n\n  .list-text{\n    font-size: --font-size-3;\n    line-height: 17px;\n  }\n}\n\n",
          "styleUrl": "./profile.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "myDataComponent",
            "type": "any"
          },
          {
            "name": "addressesComponent",
            "type": "any"
          },
          {
            "name": "ordersComponent",
            "type": "any"
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "myDataComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "addressesComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "ordersComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">\n    <strong>Mi Perfil</strong>\n  </h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\">\n    </mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"d-flex justify-content-center align-items-center h-100 px-2 py-2 mx-2\">\n    <ul class=\"list-group\">\n      <li class=\"list-group-item border-none text-center\">\n        <a (click)=\"userData()\" class=\"list-text\">Mis datos</a>\n      </li>\n      <li class=\"list-group-item border-none text-center\">\n        <a (click)=\"userAddresses()\" class=\"list-text\">Mis direcciones</a>\n      </li>\n      <li class=\"list-group-item border-none text-center\">\n        <a (click)=\"userOrders()\" class=\"list-text\">Historial de pedidos</a>\n      </li>\n    </ul>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <app-button class=\"w-100\" [size]=\"100\" [label]=\"'Cerrar sesión'\" [rounded]=\"true\" [hoverable]=\"false\"\n    (onClick)=\"userLogOut()\"></app-button>\n</div>\n"
    },
    {
      "name": "RadioButtonComponent",
      "id": "component-RadioButtonComponent-f1c2af312e5b329f9e0165e52845e499",
      "file": "src/app/micro/radio-button/radio-button.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-radio-button",
      "styleUrls": ["./radio-button.component.scss"],
      "styles": [],
      "templateUrl": ["./radio-button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "centerColor",
          "defaultValue": "'white'",
          "line": 14,
          "type": "string"
        },
        {
          "name": "centerWidth",
          "defaultValue": "3",
          "line": 15,
          "type": "number"
        },
        {
          "name": "checked",
          "defaultValue": "false",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "color",
          "defaultValue": "'red'",
          "line": 9,
          "type": "string"
        },
        {
          "name": "fontSize",
          "defaultValue": "14",
          "line": 10,
          "type": "number"
        },
        {
          "name": "label",
          "line": 12,
          "type": "string"
        },
        {
          "name": "size",
          "defaultValue": "20",
          "line": 11,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<boolean>()",
          "line": 16,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "choose",
          "args": [
            {
              "name": "event",
              "type": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23,
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.scss']\n})\nexport class RadioButtonComponent implements OnInit {\n  @Input() color: string = 'red';\n  @Input() fontSize: number = 14;\n  @Input() size: number = 20;\n  @Input() label: string;\n  @Input() checked: boolean = false;\n  @Input() centerColor: string = 'white';\n  @Input() centerWidth: number = 3;\n  @Output() onClick = new EventEmitter<boolean>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  choose(event): void{\n    this.checked = !this.checked;\n    this.onClick.emit(this.checked);\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".container {\n  display: block;\n  position: relative;\n  padding-left: 35px;\n  margin-bottom: 12px;\n  cursor: pointer;\n  font-size: 22px;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n/* Hide the browser's default radio button */\n.container input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n}\n\n/* Create a custom radio button */\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  border-radius: 50%;\n  border: 1px solid var(--grey);\n}\n\n/* On mouse-over, add a grey background color */\n.container:hover input ~ .checkmark {\n  background-color: #ccc;\n}\n\n/* Create the indicator (the dot/circle - hidden when not checked) */\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n/* Show the indicator (dot/circle) when checked */\n.container input:checked ~ .checkmark:after {\n  display: block;\n}\n\n.container input.checked ~ .checkmark:after {\n  display: block;\n}\n/* Style the indicator (dot/circle) */\n.container .checkmark .center{\n  top: 50%;\n  transform: translateY(-50%);\n  left: 0;\n  right: 0;\n  margin: auto;\n  display: block;\n  border-radius: 50%;\n  position: absolute;\n}\n",
          "styleUrl": "./radio-button.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 16
      },
      "implements": ["OnInit"],
      "templateData": "<label class=\"container\" [ngStyle]=\"{ 'font-size': fontSize+'px'}\">{{label}}\n  <input type=\"radio\" name=\"radio\" [ngClass]=\"checked? 'checked':''\" [(ngModel)]=\"checked\" (click)=\"choose($event)\">\n  <span class=\"checkmark\" [ngClass]=\"checked? color: ''\" [style.width]=\"size+'px'\" [style.height]=\"size+'px'\">\n    <span class=\"center\" [ngStyle]=\"{'border': centerWidth+'px solid ' + centerColor, 'width': (size/2 + 2)+'px', 'height': (size/2 + 2)+'px'}\"></span>\n  </span>\n</label>\n"
    },
    {
      "name": "RecoverPasswordComponent",
      "id": "component-RecoverPasswordComponent-cb91aeed0f5d44ead1ae3ff82843823a",
      "file": "src/app/modals/recover-password/recover-password.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-recover-password",
      "styleUrls": ["./recover-password.component.scss"],
      "styles": [],
      "templateUrl": ["./recover-password.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [114]
        },
        {
          "name": "recoverForm",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 14
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        },
        {
          "name": "logInUser",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        },
        {
          "name": "recoverPassword",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 23
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\n\nimport { LOGIN_TOKEN } from '../login/login';\nimport { LoginComponent } from '../login/login.component';\n\n@Component({\n  selector: 'app-recover-password',\n  templateUrl: './recover-password.component.html',\n  styleUrls: ['./recover-password.component.scss']\n})\nexport class RecoverPasswordComponent implements OnInit {\n  recoverForm: FormGroup;\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService, @Inject(LOGIN_TOKEN) private loginComponent: any) { }\n\n  ngOnInit(): void {\n    this.recoverForm = new FormGroup({\n      email: new FormControl('', [Validators.email, Validators.required]),\n    })\n  }\n\n  recoverPassword(): void {\n\n  }\n\n  logInUser(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.loginComponent,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    });\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./recover-password.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "loginComponent",
            "type": "any"
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "loginComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">Recuperar contraseña</h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <label class=\"my-0 red-text h5\">______</label>\n    <p class=\"text-center\">Ingrese su correo electronico con el que se registro a la plataforma. Pronto nos pondremos en contacto con usted.</p>\n    <form [formGroup]=\"recoverForm\">\n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\n          <div class=\"form-group\">\n            <div class=\"md-form my-4\">\n              <input type=\"text\" id=\"email\" formControlName=\"email\" class=\"form-control\" mdbInput mdbValidate>\n              <label for=\"email\">Correo electronico</label>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n<div class=\"modal-footer d-flex\">\n  <app-button class=\"w-100\" [size]=\"100\" [label]=\"'Recuperar contraseña'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"recoverPassword()\" [disabled]=\"recoverForm.invalid\"></app-button>\n  <app-button class=\"w-100\" [size]=\"100\" [label]=\"'Regresar'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"logInUser()\"></app-button>\n</div>\n"
    },
    {
      "name": "RefundComponent",
      "id": "component-RefundComponent-d85267deee88450206298a7aa75b539a",
      "file": "src/app/static-pages/refund/refund.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-refund",
      "styleUrls": ["./refund.component.scss"],
      "styles": [],
      "templateUrl": ["./refund.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "cards",
          "defaultValue": "[]",
          "type": "IComplexCard[]",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "rawContent",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "text",
          "type": "SafeHtml",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\nimport { IComplexCard } from 'src/app/models/static-pages.model';\nimport { IRefundResolver } from 'src/app/resolvers/static-pages/refund.resolver';\nimport { StaticPagesTransformService } from 'src/app/services/internal/static-pages-transform.service';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-refund',\n  templateUrl: './refund.component.html',\n  styleUrls: ['./refund.component.scss']\n})\nexport class RefundComponent implements OnInit {\n\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as IRefundResolver;\n  }\n\n  rawContent: IStaticPageBackend;\n  text: SafeHtml;\n  cards: IComplexCard[] = [];\n\n  constructor(private route: ActivatedRoute, private staticPagesTransformService: StaticPagesTransformService) {}\n\n  ngOnInit(): void {\n    this.rawContent = this.resolvedData.content;\n    this.cards = this.staticPagesTransformService.complexCardsStructure(this.rawContent.content_cards);\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./refund.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService"
          }
        ],
        "line": 22,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "staticPagesTransformService",
            "type": "StaticPagesTransformService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 16
          }
        }
      },
      "templateData": "<app-page-hero class=\"d-block contain-sm mb-3 mb-md-5\" [title]=\"'Medidas de bioseguridad'\" [imgUrl]=\"'http://placekitten.com/1000/1000'\" [url]=\"''\" [color]=\"'black-light'\"></app-page-hero>\n<div class=\"px-sm-5 contain mt-3\">\n  <div class=\"d-flex w-100 justify-content-between m-auto\">\n    <div class=\"d-flex flex-column mx-4\" *ngFor=\"let card of cards\">\n      <app-banner [withButton]=\"false\" [color]=\"card.color\" [banner]=\"{\n        title: card.title,\n        description: card.subtitle,\n        image_cover: card.url + card.iconURL,\n        friendly_url: ''\n      }\"></app-banner>\n      <p class=\"font-size-3 mt-5 mb-3\"><strong>{{card.description.title}}</strong></p>\n      <p class=\"font-size-3\">{{card.description.text}}</p>\n    </div>\n  </div>\n  <div class=\"w-100 py-5\"></div>\n</div>\n<div class=\"w-100 py-5\"></div>\n"
    },
    {
      "name": "RegisterComponent",
      "id": "component-RegisterComponent-4bebf68c2a7764247dfa18e361e55eda",
      "file": "src/app/modals/register/register.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-register",
      "styleUrls": ["./register.component.scss"],
      "styles": [],
      "templateUrl": ["./register.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 15,
          "modifierKind": [114]
        },
        {
          "name": "registerForm",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "methodsClass": [
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33
        },
        {
          "name": "logInUser",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 41
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        },
        {
          "name": "registerUser",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 37
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { LOGIN_TOKEN } from '../login/login';\nimport { LoginComponent } from '../login/login.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService,\n    @Inject(LOGIN_TOKEN) private loginComponent: any) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirm_password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      name: new FormControl('', [Validators.required]),\n      last_name_father: new FormControl('', [Validators.required]),\n      last_name_mother: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.email, Validators.required]),\n      type_document: new FormControl('', [Validators.required]),\n      number_document: new FormControl('', [Validators.required]),\n      birth_date: new FormControl('', [Validators.required]),\n      check_terms: new FormControl(false, [Validators.requiredTrue])\n    })\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n  registerUser(): void {\n\n  }\n\n  logInUser(): void {\n    this.closeModal();\n    this.modalRef = this.modalService.show(this.loginComponent ,{\n      backdrop: true,\n      keyboard: true,\n      focus: true,\n      show: false,\n      ignoreBackdropClick: false,\n      class: \"modal-full-height modal-right mh-100 my-0\",\n      containerClass: \"right modal-dialog-scrollable mh-100 my-0\",\n      animated: true,\n    });\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "\n\n",
          "styleUrl": "./register.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          },
          {
            "name": "loginComponent",
            "type": "any"
          }
        ],
        "line": 13,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "loginComponent",
            "type": "any",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">\n    <a><mdb-icon far icon=\"angle-left\" class=\"mx-1 adaptative-icon\" (click)=\"logInUser()\"></mdb-icon></a>\n    <strong>Registro</strong>\n  </h4>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <form [formGroup]=\"registerForm\">\n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\n          <div class=\"form-group\">\n            <div class=\"input-block\">\n              <label for=\"name\"><strong>Nombre</strong></label>\n              <input type=\"text\" id=\"name\" formControlName=\"name\" class=\"form-control\" mdbInput mdbValidate>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"input-block\">\n              <label for=\"last_name_father\"><strong>Apellido paterno</strong></label>\n              <input type=\"text\" id=\"last_name_father\" formControlName=\"last_name_father\" class=\"form-control\" mdbInput mdbValidate>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"input-block\">\n              <label for=\"last_name_mother\"><strong>Apellido materno</strong></label>\n              <input type=\"text\" id=\"last_name_mother\" formControlName=\"last_name_mother\" class=\"form-control\" mdbInput mdbValidate>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"input-block\">\n              <label for=\"email\"><strong>Correo electronico personal</strong></label>\n              <input type=\"email\" id=\"email\" formControlName=\"email\" class=\"form-control\" mdbInput mdbValidate>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"input-block\">\n              <label for=\"password\"><strong>Contraseña</strong></label>\n              <input type=\"password\" id=\"password\" formControlName=\"password\" class=\"form-control\" mdbInput mdbValidate>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"input-block\">\n              <label for=\"confirm_password\"><strong>Repita su contraseña</strong></label>\n              <input type=\"password\" id=\"confirm_password\" formControlName=\"confirm_password\" class=\"form-control\" mdbInput mdbValidate>\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"input-block\">\n              <label for=\"birth_date\"><strong>Fecha de nacimiento</strong></label>\n              <input type=\"date\" id=\"birth_date\" formControlName=\"birth_date\" class=\"form-control\" mdbInput mdbValidate placeholder=\"\">\n              <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n            </div>\n            <div class=\"row my-0\">\n              <div class=\"col-md-4\">\n                <div class=\"input-block\">\n                  <label for=\"type_document\"><strong>DNI/C.E.</strong></label>\n                  <select class=\"browser-default custom-select\" id=\"type_document\" formControlName=\"type_document\" mdbInput mdbValidate>\n                    <option selected disabled></option>\n                    <option value=\"DNI\">DNI</option>\n                    <option value=\"C.E.\">C.E.</option>\n                  </select>\n                  <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n                </div>\n              </div>\n              <div class=\"col-md-8\">\n                <div class=\"input-block\">\n                  <label for=\"number_document\"><strong>Número de documento</strong></label>\n                  <input type=\"number\" id=\"number_document\" formControlName=\"number_document\" class=\"form-control\" mdbInput mdbValidate>\n                  <!-- <mdb-error *ngIf=\"addressForm.get('name').invalid && (addressForm.get('name').dirty || addressForm.get('name').touched)\"></mdb-error> -->\n                </div>\n              </div>\n            </div>\n            <div class=\"px-4 pt-1 d-flex align-items-center justify-content-center\">\n              <mdb-checkbox formControlName=\"check_terms\"><span class=\"font-size-2\">He leído y acepto la <strong class=\"red-text\">Política de Privacidad</strong> y los <strong class=\"red-text\">Términos y Condiciones</strong> de Feria Scotiabank Online.</span></mdb-checkbox>\n            </div>\n            <div class=\"md-form my-0 d-flex align-items-center justify-content-center\">\n              <mdb-error style=\"top: 10px\" *ngIf=\"registerForm.get('check_terms').invalid && (registerForm.get('check_terms').dirty || registerForm.get('check_terms').touched)\">Campo obligatorio.</mdb-error>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n<div class=\"modal-footer d-flex\">\n  <app-button class=\"w-100\" [size]=\"100\" [label]=\"'Registrarse'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"registerUser()\" [disabled]=\"registerForm.invalid\"></app-button>\n</div>\n"
    },
    {
      "name": "SearchComponent",
      "id": "component-SearchComponent-ca24eda7566968608c1e913c95890944",
      "file": "src/app/core/search/search.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-search",
      "styleUrls": ["./search.component.scss"],
      "styles": [],
      "templateUrl": ["./search.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "filter",
          "defaultValue": "''",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [114]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  public filter = '';\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.queryParamMap\n      .subscribe((params) => {\n        this.filter = params.get('filter');\n      }\n      );\n  }\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./search.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          },
          {
            "name": "router",
            "type": "Router"
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<p>search works!You Serach {{ filter }}</p>"
    },
    {
      "name": "SectionHeaderComponent",
      "id": "component-SectionHeaderComponent-5e570be6ba8e507002f8d68ac1d632e7",
      "file": "src/app/micro/section-header/section-header.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-section-header",
      "styleUrls": ["./section-header.component.scss"],
      "styles": [],
      "templateUrl": ["./section-header.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-section-header',\n  templateUrl: './section-header.component.html',\n  styleUrls: ['./section-header.component.scss']\n})\nexport class SectionHeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./section-header.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 8
      },
      "implements": ["OnInit"],
      "templateData": "<h2 class=\"mb-3 mb-md-5 font-size-6 font-family-2 bold-text\">\n  <ng-content></ng-content>\n</h2>\n"
    },
    {
      "name": "SimpleCardComponent",
      "id": "component-SimpleCardComponent-201efc3e8df8b8ce8c3aef21a3bd7c7c",
      "file": "src/app/shared/simple-card/simple-card.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-simple-card",
      "styleUrls": ["./simple-card.component.scss"],
      "styles": [],
      "templateUrl": ["./simple-card.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "color",
          "line": 15,
          "type": "string"
        },
        {
          "name": "height",
          "defaultValue": "100",
          "line": 14,
          "type": "number"
        },
        {
          "name": "image",
          "line": 11,
          "type": "string"
        },
        {
          "name": "text",
          "line": 10,
          "type": "string"
        },
        {
          "name": "textSize",
          "line": 16,
          "type": "number"
        },
        {
          "name": "url",
          "line": 12,
          "type": "string"
        },
        {
          "name": "width",
          "defaultValue": "150",
          "line": 13,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-card',\n  templateUrl: './simple-card.component.html',\n  styleUrls: ['./simple-card.component.scss']\n})\nexport class SimpleCardComponent implements OnInit {\n\n  @Input() text: string;\n  @Input() image: string;\n  @Input() url: string;\n  @Input() width: number = 150;\n  @Input() height: number = 100;\n  @Input() color: string;\n  @Input() textSize?:number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host{\n  .shadow{\n    box-shadow: 0px 2px 4px rgba(145, 159, 179, 0.07), 0px 4px 5px rgba(145, 159, 179, 0.06), 0px 1px 10px rgba(145, 159, 179, 0.1);\n  }\n}\n",
          "styleUrl": "./simple-card.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 16
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"d-flex flex-column position-relative white-text my-3 px-3 py-3 rounded shadow\" [ngClass]=\"[color]\" [ngStyle]=\"{ 'height': height+'px', 'width': width+'px' }\">\n  <label class=\"my-2 mx-3 w-75\" [ngClass]=\"['font-size-'+textSize]\"><strong>{{text}}</strong></label>\n  <img class=\"position-absolute bottom right my-3 mx-3\" [src]=\"url+image\">\n</div>\n"
    },
    {
      "name": "SingleAccordionComponent",
      "id": "component-SingleAccordionComponent-efa89c264c37c04450ec1bf012b11368",
      "file": "src/app/shared/single-accordion/single-accordion.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-single-accordion",
      "styleUrls": ["./single-accordion.component.scss"],
      "styles": [],
      "templateUrl": ["./single-accordion.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "accordion",
          "line": 11,
          "type": "IAccordion"
        },
        {
          "name": "closedColor",
          "defaultValue": "'grey-dark'",
          "line": 12,
          "type": "string"
        },
        {
          "name": "openedColor",
          "defaultValue": "'black-light'",
          "line": 13,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17
        },
        {
          "name": "toggleAccordion",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { reduce } from 'rxjs/operators';\nimport { IAccordion } from 'src/app/models/static-pages.model';\n\n@Component({\n  selector: 'app-single-accordion',\n  templateUrl: './single-accordion.component.html',\n  styleUrls: ['./single-accordion.component.scss']\n})\nexport class SingleAccordionComponent implements OnInit {\n  @Input() accordion: IAccordion;\n  @Input() closedColor: string = 'grey-dark';\n  @Input() openedColor: string = 'black-light';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleAccordion(): void {\n    this.accordion.opened = !this.accordion.opened;\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ".answer{\n  max-height: 300vh;\n  overflow: hidden;\n  transition: height 0.3s ease;\n\n  &.open{\n    height: 300px;\n  }\n  &.close{\n    height: 0;\n  }\n}\n",
          "styleUrl": "./single-accordion.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 13
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"d-flex flex-column w-100 mt-3\">\n  <a (click)=\"toggleAccordion()\">\n    <div class=\"d-flex w-100 align-items-start position-relative p-3 rounded\" [ngClass]=\"[accordion.opened? openedColor:'', !accordion.opened? closedColor:'' ] \">\n      <p class=\"white-text font-size-2\"><strong>{{accordion.question}}</strong></p>\n      <mdb-icon far icon=\"chevron-up\" class=\"position-absolute right white-text adaptative-icon mx-3\" *ngIf=\"accordion.opened\"></mdb-icon>\n      <mdb-icon far icon=\"chevron-down\" class=\"position-absolute right white-text adaptative-icon  mx-3\" *ngIf=\"!accordion.opened\"></mdb-icon>\n    </div>\n  </a>\n  <div class=\"d-flex w-100 flex-column font-size-2 answer my-3\" [ngClass]=\"{ 'open': accordion.opened, 'close': !accordion.opened }\" [innerHTML]=\"accordion.answer\"></div>\n</div>\n"
    },
    {
      "name": "TermsAndConditionsComponent",
      "id": "component-TermsAndConditionsComponent-ed6227f861269aaba842c5a6e2cfcc59",
      "file": "src/app/static-pages/terms-and-conditions/terms-and-conditions.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-terms-and-conditions",
      "styleUrls": ["./terms-and-conditions.component.scss"],
      "styles": [],
      "templateUrl": ["./terms-and-conditions.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "content",
          "type": "IStaticPageBackend",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ITermsAndConditionsResolver } from 'src/app/resolvers/static-pages/terms-and-conditions.resolver';\nimport { IStaticPageBackend } from 'src/app/services/static-page.service';\n\n@Component({\n  selector: 'app-terms-and-conditions',\n  templateUrl: './terms-and-conditions.component.html',\n  styleUrls: ['./terms-and-conditions.component.scss']\n})\nexport class TermsAndConditionsComponent implements OnInit {\n  get resolvedData() {\n    return this.route.snapshot.data['resolved'] as ITermsAndConditionsResolver;\n  }\n  content: IStaticPageBackend;\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    this.content = this.resolvedData.content;\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./terms-and-conditions.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "route",
            "type": "ActivatedRoute"
          }
        ],
        "line": 15,
        "jsdoctags": [
          {
            "name": "route",
            "type": "ActivatedRoute",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "accessors": {
        "resolvedData": {
          "name": "resolvedData",
          "getSignature": {
            "name": "resolvedData",
            "type": "",
            "returnType": "",
            "line": 12
          }
        }
      },
      "templateData": "<p>terms-and-conditions works!</p>\n"
    },
    {
      "name": "WishlistComponent",
      "id": "component-WishlistComponent-eace314847c9244bf3d3f5ce49d3db03",
      "file": "src/app/modals/wishlist/wishlist.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-wishlist",
      "styleUrls": ["./wishlist.component.scss"],
      "styles": [],
      "templateUrl": ["./wishlist.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "modalRef",
          "type": "MDBModalRef",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [114]
        },
        {
          "name": "wishlist",
          "defaultValue": "wishlist",
          "type": "Array<IWishlistItem>",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "methodsClass": [
        {
          "name": "addAllToCart",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18
        },
        {
          "name": "closeModal",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { MDBModalRef, MDBModalService } from 'angular-bootstrap-md';\nimport { IWishlistItem } from 'src/app/models/wishlist.model';\nimport { wishlist } from 'src/app/mockups/wishlist.mockup'\n@Component({\n  selector: 'app-wishlist',\n  templateUrl: './wishlist.component.html',\n  styleUrls: ['./wishlist.component.scss']\n})\nexport class WishlistComponent implements OnInit {\n  wishlist: Array<IWishlistItem> = wishlist;\n\n  constructor(public modalRef: MDBModalRef, private modalService: MDBModalService) { }\n\n  ngOnInit(): void {\n  }\n\n  addAllToCart(): void {\n    this.closeModal();\n  }\n\n  closeModal(): void {\n    this.modalRef && this.modalRef.hide();\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./wishlist.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [
          {
            "name": "modalRef",
            "type": "MDBModalRef"
          },
          {
            "name": "modalService",
            "type": "MDBModalService"
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "modalRef",
            "type": "MDBModalRef",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "modalService",
            "type": "MDBModalService",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit"],
      "templateData": "<div class=\"modal-header mx-4 px-1 position-relative\">\n  <h4 class=\"modal-title mx-0 d-flex\" id=\"myModalLabel\">Mis favoritos</h4>\n  <a>\n    <mdb-icon fas icon=\"times\" class=\"mr-3 h4 position-absolute my-2\" (click)=\"closeModal()\" style=\"top: 0; right: 0;\"></mdb-icon>\n  </a>\n</div>\n<div class=\"modal-body scrollbar-primary\">\n  <div class=\"px-2 py-2 mx-2\">\n    <label class=\"my-0 red-text h5\"></label>\n    <div class=\"list-group\">\n      <app-wishlist-item *ngFor=\"let wishlistItem of wishlist\" [wishlistItem]=\"wishlistItem\"></app-wishlist-item>\n    </div>\n  </div>\n</div>\n<div class=\"modal-footer\">\n  <app-button class=\"w-100\" [color]=\"'primary'\" [size]=\"100\" [label]=\"'Agregar todo al carrito'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"addAllToCart()\"></app-button>\n</div>\n"
    },
    {
      "name": "WishlistItemComponent",
      "id": "component-WishlistItemComponent-37b69cefa26e66e1f0b93fae1021d1bf",
      "file": "src/app/modals/wishlist/wishlist-item/wishlist-item.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "app-wishlist-item",
      "styleUrls": ["./wishlist-item.component.scss"],
      "styles": [],
      "templateUrl": ["./wishlist-item.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "wishlistItem",
          "line": 9
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "addToCart",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19
        },
        {
          "name": "deleteFromWishlist",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12
        }
      ],
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wishlist-item',\n  templateUrl: './wishlist-item.component.html',\n  styleUrls: ['./wishlist-item.component.scss']\n})\nexport class WishlistItemComponent implements OnInit {\n  @Input() wishlistItem;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  deleteFromWishlist(): void {\n\n  }\n\n  addToCart(): void {\n\n  }\n\n}\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./wishlist-item.component.scss"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "args": [],
        "line": 9
      },
      "implements": ["OnInit"],
      "templateData": "<a class=\"list-group-item list-group-item-action align-items-start flex-fill d-flex\">\n  <div class=\"row justify-content-between w-100 align-items-center flex-grow-1\" >\n    <div class=\"d-flex w-100 my-1 flex-column mx-2\">\n      <div class=\"d-flex w-100 my-2 justify-content-between\">\n        <div class=\"d-flex w-100 flex-shrink-2\" >\n          <img class=\"rounded item-image px-2\" src=\"https://via.placeholder.com/75x75\">\n        </div>\n        <div class=\"d-flex w-100 flex-column mx-3\">\n          <div class=\"d-flex w-100\">\n            <h5><strong>{{wishlistItem.name}}</strong></h5>\n          </div>\n          <div class=\"d-flex w-100\">\n            <label>{{wishlistItem.brand.name}}</label>\n          </div>\n          <div class=\"d-flex w-100 justify-content-between\">\n            <label>{{ wishlistItem.special_price | currency: 'S/ '}}</label>\n          </div>\n        </div>\n      </div>\n    </div>\n<!--     <div class=\"col px-0\">\n      <img [src]=\"'https://via.placeholder.com/100x100'\" class=\"mx-3\">\n    </div>\n    <div class=\"col px-0\">\n      <div class=\"d-flex w-100 justify-content-between\">\n        <h5 class=\"mb-1\">{{wishlistItem.name}}</h5>\n      </div>\n      <p class=\"mb-1\">{{wishlistItem.brand.name}}</p>\n      <small>{{wishlistItem.special_price | currency: 'S/ '}}</small>\n    </div> -->\n    <div class=\"col px-0 d-flex justify-content-between align-items-center text-center\" >\n      <div class=\"col-6\">\n        <app-button class=\"w-100 d-flex\" [color]=\"'primary-outline'\" [size]=\"100\" [label]=\"'Eliminar'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"deleteFromWishlist()\"></app-button>\n      </div>\n      <div class=\"col-6\">\n        <app-button class=\"w-100 d-flex\" [color]=\"'primary'\" [size]=\"100\" [label]=\"'Añadir al Carrito'\" [rounded]=\"true\" [hoverable]=\"false\" (onClick)=\"addToCart()\"></app-button>\n      </div>\n      <!-- <button mdbBtn mdbWavesEffect class=\"btn z-depth-0 btn-danger w-100 rounded \" (click)=\"deleteFromWishlist()\">Eliminar</button>\n      <button mdbBtn mdbWavesEffect class=\"btn z-depth-0 btn-info w-100 rounded\"  (click)=\"addToCart()\">Añadir al Carrito</button> -->\n    </div>\n  </div>\n</a>\n"
    }
  ],
  "modules": [
    {
      "name": "AppModule",
      "children": [
        {
          "type": "providers",
          "elements": [
            {
              "name": "InterceptorService"
            }
          ]
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "AppRoutingModule"
            },
            {
              "name": "CoreModule"
            },
            {
              "name": "SharedModule"
            },
            {
              "name": "StaticPagesModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": [
            {
              "name": "AppComponent"
            }
          ]
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "AppRoutingModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CategoryModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CategoryBrandCardComponent"
            },
            {
              "name": "CategoryBrandListComponent"
            },
            {
              "name": "CategoryCardComponent"
            },
            {
              "name": "CategoryComponent"
            },
            {
              "name": "CategoryHeroComponent"
            },
            {
              "name": "CategoryListComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "MicroModule"
            },
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CategoryListComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "CoreModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "HomeModule"
            },
            {
              "name": "ProductDetailModule"
            },
            {
              "name": "SearchModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "DirectivesModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "NoespecialCharactersDirective"
            },
            {
              "name": "OnlyNumberDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "NoespecialCharactersDirective"
            },
            {
              "name": "OnlyNumberDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "HomeModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "HomeBannerListComponent"
            },
            {
              "name": "HomeComponent"
            },
            {
              "name": "HomeHeroComponent"
            },
            {
              "name": "HomePaymentCardComponent"
            },
            {
              "name": "HomePaymentListComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "CategoryModule"
            },
            {
              "name": "MicroModule"
            },
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "MicroModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ButtonComponent"
            },
            {
              "name": "RadioButtonComponent"
            },
            {
              "name": "SectionHeaderComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ButtonComponent"
            },
            {
              "name": "RadioButtonComponent"
            },
            {
              "name": "SectionHeaderComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ModalsModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "AddressFormComponent"
            },
            {
              "name": "AddressItemComponent"
            },
            {
              "name": "AddressesComponent"
            },
            {
              "name": "CartComponent"
            },
            {
              "name": "CartModalItemComponent"
            },
            {
              "name": "CartModalItemProductComponent"
            },
            {
              "name": "CheckoutAddressComponent"
            },
            {
              "name": "CheckoutAddressItemComponent"
            },
            {
              "name": "CheckoutErrorComponent"
            },
            {
              "name": "CheckoutIzipayComponent"
            },
            {
              "name": "CheckoutReceiptComponent"
            },
            {
              "name": "CheckoutSuccessComponent"
            },
            {
              "name": "CheckoutSummaryComponent"
            },
            {
              "name": "LoginComponent"
            },
            {
              "name": "MyDataComponent"
            },
            {
              "name": "OrderDetailComponent"
            },
            {
              "name": "OrderItemComponent"
            },
            {
              "name": "OrdersComponent"
            },
            {
              "name": "ProfileComponent"
            },
            {
              "name": "RecoverPasswordComponent"
            },
            {
              "name": "RegisterComponent"
            },
            {
              "name": "WishlistComponent"
            },
            {
              "name": "WishlistItemComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "MicroModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "AddressFormComponent"
            },
            {
              "name": "AddressesComponent"
            },
            {
              "name": "CartComponent"
            },
            {
              "name": "LoginComponent"
            },
            {
              "name": "MyDataComponent"
            },
            {
              "name": "OrderDetailComponent"
            },
            {
              "name": "OrdersComponent"
            },
            {
              "name": "ProfileComponent"
            },
            {
              "name": "RecoverPasswordComponent"
            },
            {
              "name": "RegisterComponent"
            },
            {
              "name": "WishlistComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ProductDetailModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ProductDetailComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "SearchModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "SearchComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "SharedModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "BannerComponent"
            },
            {
              "name": "FooterComponent"
            },
            {
              "name": "FormComponent"
            },
            {
              "name": "GlobalLoadingComponent"
            },
            {
              "name": "HeaderComponent"
            },
            {
              "name": "InnerBannerComponent"
            },
            {
              "name": "MainCarouselComponent"
            },
            {
              "name": "NavBarComponent"
            },
            {
              "name": "NavBarMobileComponent"
            },
            {
              "name": "PageHeroComponent"
            },
            {
              "name": "ProductItemComponent"
            },
            {
              "name": "ProductListComponent"
            },
            {
              "name": "ProductListMenuComponent"
            },
            {
              "name": "ProductListNavComponent"
            },
            {
              "name": "SimpleCardComponent"
            },
            {
              "name": "SingleAccordionComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "DirectivesModule"
            },
            {
              "name": "MicroModule"
            },
            {
              "name": "ModalsModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "BannerComponent"
            },
            {
              "name": "FooterComponent"
            },
            {
              "name": "FormComponent"
            },
            {
              "name": "GlobalLoadingComponent"
            },
            {
              "name": "HeaderComponent"
            },
            {
              "name": "MainCarouselComponent"
            },
            {
              "name": "NavBarComponent"
            },
            {
              "name": "PageHeroComponent"
            },
            {
              "name": "ProductItemComponent"
            },
            {
              "name": "ProductListComponent"
            },
            {
              "name": "SimpleCardComponent"
            },
            {
              "name": "SingleAccordionComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "StaticPagesModule",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "BioSecurityComponent"
            },
            {
              "name": "ComplaintsBookComponent"
            },
            {
              "name": "ContactUsComponent"
            },
            {
              "name": "CustomerServiceComponent"
            },
            {
              "name": "DeliveryServiceComponent"
            },
            {
              "name": "FaqComponent"
            },
            {
              "name": "HowToBuyComponent"
            },
            {
              "name": "NewCardComponent"
            },
            {
              "name": "NotFoundComponent"
            },
            {
              "name": "RefundComponent"
            },
            {
              "name": "TermsAndConditionsComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "SharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "ADDRESS_FORM_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/address-form/address-form.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('ADDRESS_FORM_TOKEN')"
      },
      {
        "name": "addresses",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/address.mockup.ts",
        "type": "Array<IAddressItem>",
        "defaultValue": "[addressItem, addressItem, addressItem]"
      },
      {
        "name": "ADDRESSES_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/addresses/addresses.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('ADDRESSES_TOKEN')"
      },
      {
        "name": "addressesOrder",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/address.mockup.ts",
        "type": "Array<IAddressItem>",
        "defaultValue": "[addressOrderItem, addressOrderItem2, addressOrderItem3]"
      },
      {
        "name": "addressItem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/address.mockup.ts",
        "type": "IAddressItem",
        "defaultValue": "{\n  _id: '001',\n  address: 'Av. Prueba 123',\n  cellphone: '998213123',\n  department: { name: 'Lima' },\n  district: { name: 'Surco' },\n  province: { name: 'Lima' },\n  name: 'Casa Prueba',\n  reference: 'Al lado de la casa azul.',\n  type_address: 'Casa'\n}"
      },
      {
        "name": "addressOrderItem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/address.mockup.ts",
        "type": "IAddressItem",
        "defaultValue": "{\n  _id: '001',\n  address: 'Av. Prueba 123',\n  cellphone: '998213123',\n  department: { name: 'Lima' },\n  district: { name: 'Surco' },\n  province: { name: 'Lima' },\n  name: 'Casa Prueba',\n  reference: 'Al lado de la casa azul.',\n  type_address: 'Casa',\n  checked: true,\n  delivery_price: 10\n}"
      },
      {
        "name": "addressOrderItem2",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/address.mockup.ts",
        "type": "IAddressItem",
        "defaultValue": "{\n  _id: '002',\n  address: 'Av. Prueba 123',\n  cellphone: '998213123',\n  department: { name: 'Lima' },\n  district: { name: 'Surco' },\n  province: { name: 'Lima' },\n  name: 'Casa Prueba',\n  reference: 'Al lado de la casa azul.',\n  type_address: 'Casa',\n  checked: false,\n  delivery_price: 10\n}"
      },
      {
        "name": "addressOrderItem3",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/address.mockup.ts",
        "type": "IAddressItem",
        "defaultValue": "{\n  _id: '003',\n  address: 'Av. Prueba 123',\n  cellphone: '998213123',\n  department: { name: 'Lima' },\n  district: { name: 'Surco' },\n  province: { name: 'Lima' },\n  name: 'Casa Prueba',\n  reference: 'Al lado de la casa azul.',\n  type_address: 'Casa',\n  checked: false,\n  delivery_price: 10\n}"
      },
      {
        "name": "banner",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/banner.mockup.ts",
        "type": "IBanner",
        "defaultValue": "banners[0]"
      },
      {
        "name": "banners",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/banner.mockup.ts",
        "type": "IBanner[]",
        "defaultValue": "[\n  {\n    title: 'Abre una cuenta de ahorros',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/500/500',\n    friendly_url: 'https://google.com',\n  },\n  {\n    title: 'Solicita tu tarjeta Scotiabank',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/300/500',\n    friendly_url: 'https://google.com',\n  },\n  {\n    title: 'Seguro de tarjeta protegida',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/700/500',\n    friendly_url: 'https://google.com',\n  },\n]"
      },
      {
        "name": "banners",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/static/home.static.ts",
        "type": "IBanner[]",
        "defaultValue": "[\n  {\n    title: 'Abre una cuenta de ahorros',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/500/500',\n    friendly_url: 'https://google.com',\n  },\n  {\n    title: 'Solicita tu tarjeta Scotiabank',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/300/500',\n    friendly_url: 'https://google.com',\n  },\n  {\n    title: 'Seguro de tarjeta protegida',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/700/500',\n    friendly_url: 'https://google.com',\n  },\n]"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/Footer.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Shared/Footer', module).addDecorator(\n  moduleMetadata({\n    imports: [MicroModule, IconsModule]\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/Header.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Shared/Header', module).addDecorator(\n  moduleMetadata({\n    imports: [SharedModule, MicroModule, ModalModule.forRoot(), BrowserAnimationsModule, RouterTestingModule]\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/banner.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Shared/Banner', module).addDecorator(\n  moduleMetadata({\n    imports: [SharedModule],\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/brand.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Brand', module).addDecorator(\n  moduleMetadata({\n    imports: [CategoryModule],\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/category.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Category', module).addDecorator(\n  moduleMetadata({\n    imports: [CategoryModule, RouterTestingModule],\n    providers: [\n      { provide: APP_BASE_HREF, useValue: '/' },\n      {\n        provide: ActivatedRoute,\n        useValue: {\n          snapshot: {\n            data: {\n              resolved: mockResolver,\n            },\n          },\n        },\n      },\n    ],\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/checkout.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Modals/Checkout', module).addDecorator(\n  moduleMetadata({\n    imports: [ModalsModule, ModalModule.forRoot()],\n    providers: [\n      MDBModalRef,\n      { provide: CART_TOKEN, useValue: CartComponent },\n      { provide: CHECKOUT_ADDRESS_TOKEN, useValue: CheckoutAddressComponent },\n      { provide: CHECKOUT_SUMMARY_TOKEN, useValue: CheckoutSummaryComponent },\n      { provide: CHECKOUT_RECEIPT_TOKEN, useValue: CheckoutReceiptComponent },\n      { provide: CHECKOUT_IZIPAY_TOKEN, useValue: CheckoutIzipayComponent },\n      { provide: CHECKOUT_ADDRESS_TOKEN, useValue: CheckoutSuccessComponent },\n      { provide: CHECKOUT_ERROR_TOKEN, useValue: CheckoutErrorComponent },\n    ]\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/home.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Home', module).addDecorator(\n  moduleMetadata({\n    imports: [RouterTestingModule, HomeModule],\n    providers: [\n      { provide: APP_BASE_HREF, useValue: '/' },\n      {\n        provide: ActivatedRoute,\n        useValue: {\n          snapshot: {\n            data: {\n              resolved: mockResolver,\n            },\n          },\n        },\n      },\n    ],\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/login.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Modals/Login-Register', module).addDecorator(\n  moduleMetadata({\n    imports: [ModalsModule, ModalModule.forRoot()],\n    providers: [\n      MDBModalRef,\n      { provide: LOGIN_TOKEN, useValue: LoginComponent },\n      { provide: REGISTER_TOKEN, useValue: RegisterComponent },\n      { provide: RECOVER_PASSWORD_TOKEN, useValue: RecoverPasswordComponent },\n    ]\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/product.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Product', module).addDecorator(\n  moduleMetadata({\n    imports: [SharedModule],\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/profile.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Modals/User', module).addDecorator(\n  moduleMetadata({\n    imports: [ModalsModule, ModalModule.forRoot()],\n    providers: [\n      MDBModalRef,\n      { provide: PROFILE_TOKEN, useValue: ProfileComponent },\n      { provide: MY_DATA_TOKEN, useValue: MyDataComponent },\n      { provide: ADDRESSES_TOKEN, useValue: AddressesComponent },\n      { provide: ADDRESS_FORM_TOKEN, useValue: AddressFormComponent },\n      { provide: ORDERS_TOKEN, useValue: OrdersComponent },\n      { provide: ORDER_DETAIL_TOKEN, useValue: OrderDetailComponent },\n    ],\n  })\n)"
      },
      {
        "name": "card",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/wishlist.stories.ts",
        "type": "",
        "defaultValue": "storiesOf('Modals/Wishlist', module).addDecorator(\n  moduleMetadata({\n    imports: [ModalsModule, ModalModule.forRoot()],\n    providers: [MDBModalRef]\n  })\n)"
      },
      {
        "name": "cart",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/cart.mockup.ts",
        "type": "ISupplierOrder[]",
        "defaultValue": "[supplierOrder, supplierOrder, supplierOrder]"
      },
      {
        "name": "CART_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/cart/cart.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('CART_TOKEN')"
      },
      {
        "name": "cartBE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/cart.mockup.ts",
        "type": "ICart",
        "defaultValue": "cartFull"
      },
      {
        "name": "cartFull",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/cart.mockup.ts",
        "type": "ICart",
        "defaultValue": "{\n  infoProducts: [cartItem, cartItem, cartItem],\n  subtotal: 8000\n}"
      },
      {
        "name": "cartFull",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/summary.mockup.ts",
        "type": "ICart",
        "defaultValue": "{\n  infoProducts: [cartItem, cartItem, cartItem],\n  subtotal: 8000\n}"
      },
      {
        "name": "cartItem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/cart.mockup.ts",
        "type": "ICartItem",
        "defaultValue": "{\n  _id: '1111111',\n  id_product: '22222',\n  image_product: 'https://via.placeholder.com/100x100',\n  name_product: 'Producto',\n  price: 10,\n  quantity: 2,\n  total_price: 20,\n  info_product: {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca',\n    image_cover: 'http://placekitten.com/400/400',\n    price: 1600,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n}"
      },
      {
        "name": "cartItem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/summary.mockup.ts",
        "type": "ICartItem",
        "defaultValue": "{\n  _id: '1111111',\n  id_product: '22222',\n  image_product: 'https://via.placeholder.com/100x100',\n  name_product: 'Producto',\n  price: 10,\n  quantity: 2,\n  total_price: 20,\n  info_product: {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca',\n    image_cover: 'http://placekitten.com/400/400',\n    price: 1600,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n}"
      },
      {
        "name": "categories",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/category.mockup.ts",
        "type": "[]",
        "defaultValue": "[category, category, category, category, category]"
      },
      {
        "name": "category",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/category.mockup.ts",
        "type": "ICategory",
        "defaultValue": "{\n  name: 'Hogar.',\n  subcategoryList: [\n    {\n      name: 'Refrigeracion',\n      subcategoryList: [],\n    },\n    {\n      name: 'Lavado',\n      subcategoryList: [],\n    },\n    {\n      name: 'Cocina',\n      subcategoryList: [],\n    },\n    {\n      name: 'Electrodomesticos',\n      subcategoryList: [],\n    },\n  ],\n}"
      },
      {
        "name": "category",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/header.mockup.ts",
        "type": "ICategory",
        "defaultValue": "{\n  name: 'Categoria',\n  subcategoryList: [subCategory,subCategory,subCategory,subCategory]\n}"
      },
      {
        "name": "categoryGroup",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/category-group.mockup.ts",
        "type": "",
        "defaultValue": "categoryGroups[0]"
      },
      {
        "name": "categoryGroups",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/category-group.mockup.ts",
        "type": "ICategoryGroup[]",
        "defaultValue": "[\n  {\n    name: 'Hogar',\n    categoryList: [],\n  },\n  {\n    name: 'Electronica',\n    categoryList: [],\n  },\n  {\n    name: 'Ropa',\n    categoryList: [],\n  },\n  {\n    name: 'Restaurantes',\n    categoryList: [],\n  },\n  {\n    name: 'Viajes',\n    categoryList: [],\n  },\n  {\n    name: 'Werkwerk',\n    categoryList: [],\n  },\n]"
      },
      {
        "name": "CHECKOUT_ADDRESS_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/checkout-address/checkout-address.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('CHECKOUT_ADDRESS_TOKEN')"
      },
      {
        "name": "CHECKOUT_ERROR_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/checkout-error/checkout-error.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('CHECKOUT_ERROR_TOKEN')"
      },
      {
        "name": "CHECKOUT_IZIPAY_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/checkout-izipay/checkout-izipay.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('CHECKOUT_IZIPAY_TOKEN')"
      },
      {
        "name": "CHECKOUT_RECEIPT_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/checkout-receipt/checkout-receipt.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('CHECKOUT_RECEIPT_TOKEN')"
      },
      {
        "name": "CHECKOUT_SUCCESS_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/checkout-success/checkout-success.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('CHECKOUT_SUCCESS_TOKEN')"
      },
      {
        "name": "CHECKOUT_SUMMARY_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/checkout-summary/checkout-summary.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('CHECKOUT_SUMMARY_TOKEN')"
      },
      {
        "name": "context",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "type": "",
        "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
      },
      {
        "name": "CUSTOM_SWIPER_CONFIG",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/category/category-brand-list/category-brand-list.component.ts",
        "type": "SwiperConfigInterface",
        "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 2,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: true,\n  pagination: true,\n  spaceBetween: 0,\n  breakpoints: {\n    // when window width is >= $px\n    768: {\n      //md\n      slidesPerView: 2,\n    },\n    992: {\n      //lg\n      slidesPerView: 3,\n    },\n    1200: {\n      //xl\n      slidesPerView: 4,\n    },\n    1600: {\n      //xxl\n      slidesPerView: 5,\n    },\n  },\n}"
      },
      {
        "name": "CUSTOM_SWIPER_CONFIG",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/category/category-list/category-list.component.ts",
        "type": "SwiperConfigInterface",
        "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 2,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: false,\n  pagination: false,\n  spaceBetween: 0,\n}"
      },
      {
        "name": "DEFAULT_SWIPER_CONFIG",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/category/category.module.ts",
        "type": "SwiperConfigInterface",
        "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 2,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: false,\n  pagination: false,\n  spaceBetween: 0,\n}"
      },
      {
        "name": "DEFAULT_SWIPER_CONFIG",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/home/home.module.ts",
        "type": "SwiperConfigInterface",
        "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 1,\n  initialSlide: 1, //  not hardcode this variable (it's static content but it may change in the future)\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: true,\n  pagination: false,\n  spaceBetween: 0,\n}"
      },
      {
        "name": "DEFAULT_SWIPER_CONFIG",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/core/search/search.module.ts",
        "type": "SwiperConfigInterface",
        "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 1,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: true,\n  pagination: false,\n  spaceBetween: 0,\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.prod.ts",
        "type": "object",
        "defaultValue": "{\n  production: true,\n  URL_BACKEND: ''\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.test.ts",
        "type": "object",
        "defaultValue": "{\n  production: true,\n  URL_BACKEND: ''\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.trial.ts",
        "type": "object",
        "defaultValue": "{\n  production: true,\n  URL_BACKEND: ''\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.ts",
        "type": "object",
        "defaultValue": "{\n  production: false,\n  URL_BACKEND: 'http://10.147.18.26:3000/',\n  JWT_TOKEN:\n    'ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnJaWGtpT2lJNU56Z3dZVEk1TW1FMU9HVXlNMlJoWlRJME1qZzBOakUwTlRObFpqa3habUppTVROaU5qZG1OekV5WW1ZeFpXTTNabU00TURjMVl6STFNakJoTUdRM1pEVmxZVE0zT0RBMk1XTTFaR0l6WkRBM056YzFOalptWWpBMlpETXpZemNpTENKemVYTjBaVzFmWVhCcElqb2ljMk52ZEdsaFltRnVhMTltWlhKcFlTSXNJbWxoZENJNk1UWXdNREV3TnpVMU1IMC5DcTZqbFZsMWw1SE0tSW1VTXZDX2tFQklMZXRxMGlIRUxEdVhreW9IMHBqV0I3V09uZEY3TG5hc0hjVEJaV013LThXUjAxUVUwM2MtWUlEdjVjcHctdw==',\n}"
      },
      {
        "name": "environment",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/environments/environment.uat.ts",
        "type": "object",
        "defaultValue": "{\n  production: true,\n  URL_BACKEND: ''\n}"
      },
      {
        "name": "filter",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/header.mockup.ts",
        "type": "IFilter",
        "defaultValue": "{\n  filter: '000001',\n  name: 'ABC'\n}"
      },
      {
        "name": "Header",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/Button.stories.ts",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "LOGIN_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/login/login.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('LOGIN_TOKEN')"
      },
      {
        "name": "mockResolver",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/category-group.mockup.ts",
        "type": "ICategoryPage",
        "defaultValue": "{\n  _brands: [],\n  category: {\n    _id: '',\n    brands: [],\n    filters: [],\n    friendly_url: '',\n    image_banner: '',\n    image_link: '',\n    name: '',\n    url_attachment: '',\n  },\n  isBrandPage: false,\n}"
      },
      {
        "name": "mockResolver",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/home.mockup.ts",
        "type": "object",
        "defaultValue": "{\n  categories: categoryGroups,\n  productsFeat: products,\n}"
      },
      {
        "name": "MY_DATA_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/my-data/my-data.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('MY_DATA_TOKEN')"
      },
      {
        "name": "navBar",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/header.mockup.ts",
        "type": "INavBar",
        "defaultValue": "{\n  navBarList: [navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem]\n}"
      },
      {
        "name": "navBarItem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/header.mockup.ts",
        "type": "INavBarItem",
        "defaultValue": "{\n  name: 'Grupo de Categoria',\n  categoryList: [filter,filter,filter,filter,filter,filter,filter,filter,filter]\n}"
      },
      {
        "name": "ORDER_DETAIL_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/order-detail/order-detail.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('ORDER_DETAIL_TOKEN')"
      },
      {
        "name": "orderDetailItem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/order.mockup.ts",
        "type": "IOrderDetailItem",
        "defaultValue": "{\n  amount_subtotal: 25,\n  amount_total: 30,\n  delivery: 5,\n  discount_price: 0,\n  product_price: 10,\n  quantity: 3,\n  range_day: '1-1',\n  supplier_delivery: { name: 'XXXXXXXX' },\n  method_id: {},\n  product_id: 'prueba',\n  product_name: 'Producto Prueba',\n  friendly_url: 'producto_prueba',\n  brand: {\n    name: 'Test'\n  }\n}"
      },
      {
        "name": "orderItem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/order.mockup.ts",
        "type": "IOrderItem",
        "defaultValue": "{\n  code: \"#########\",\n  amount_discount: 0,\n  amount_subtotal: 90,\n  amount_total: 90,\n  amount_delivery: 15,\n  type_payment: 'IziPay',\n  delivery_address: 'Av. Prueba 123',\n  delivery_reference: 'Al lado de la casa azul.',\n  create_date: new Date(),\n  state: 'Entregado',\n  detail: [orderDetailItem, orderDetailItem, orderDetailItem]\n}"
      },
      {
        "name": "orders",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/order.mockup.ts",
        "type": "Array<IOrderItem>",
        "defaultValue": "[orderItem, orderItem, orderItem]"
      },
      {
        "name": "ORDERS_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/orders/orders.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('ORDERS_TOKEN')"
      },
      {
        "name": "payments",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/static/home.static.ts",
        "type": "IPaymentCard[]",
        "defaultValue": "[\n  {\n    title: 'Con Scotia Puntos',\n    description:\n      'Irure officia culpa et sunt qui non ipsum ex reprehenderit fugiat et ullamco Lorem amet. <strong>Proident</strong> excepteur elit ipsum proident ipsum aute anim nulla tempor. Non non cillum aute fugiat duis esse ut aliquip reprehenderit laboris laborum enim elit ad.',\n  },\n  {\n    title: 'Con Scotia Puntos + Tarjeta Scotiabank',\n    description:\n      'Irure officia culpa et sunt qui non <strong>ipsum</strong> ex reprehenderit fugiat et ullamco Lorem amet. Proident excepteur elit ipsum proident ipsum aute anim nulla tempor. Non non cillum aute fugiat duis esse ut aliquip reprehenderit laboris laborum enim elit ad.',\n  },\n  {\n    title: 'Tarjeta Scotiabank',\n    description:\n      '<strong>Irure</strong> officia culpa et sunt qui non ipsum ex reprehenderit fugiat et ullamco Lorem amet. Proident excepteur elit ipsum proident ipsum aute anim nulla tempor. Non non cillum aute fugiat duis esse ut aliquip reprehenderit laboris laborum enim elit ad.',\n  },\n]"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/Button.stories.ts",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "product",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/product.mockup.ts",
        "type": "",
        "defaultValue": "products[0]"
      },
      {
        "name": "products",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/product.mockup.ts",
        "type": "IProductItem[]",
        "defaultValue": "[\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca',\n    image_cover: 'http://placekitten.com/400/400',\n    price: 1600,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca2',\n    image_cover: 'http://placekitten.com/600/400',\n    price: 3300,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca3',\n    image_cover: 'http://placekitten.com/100/400',\n    price: 10,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca4',\n    image_cover: 'http://placekitten.com/800/300',\n    price: 100,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca5',\n    image_cover: 'http://placekitten.com/700/100',\n    price: 600,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n]"
      },
      {
        "name": "PROFILE_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/profile/profile.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('PROFILE_TOKEN')"
      },
      {
        "name": "RECOVER_PASSWORD_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/recover-password/recover-password.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('RECOVER_PASSWORD_TOKEN')"
      },
      {
        "name": "REGISTER_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/register/register.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('REGISTER_TOKEN')"
      },
      {
        "name": "require",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/test.ts",
        "type": "literal type"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/Button.stories.ts",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Small",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/Button.stories.ts",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "subCategory",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/header.mockup.ts",
        "type": "ICategory",
        "defaultValue": "{\n  name: 'Subcategoria',\n  subcategoryList: []\n}"
      },
      {
        "name": "summary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/summary.mockup.ts",
        "type": "ISupplierOrder[]",
        "defaultValue": "[supplierOrder, supplierOrder, supplierOrder]"
      },
      {
        "name": "summaryBE",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/summary.mockup.ts",
        "type": "ICart",
        "defaultValue": "cartFull"
      },
      {
        "name": "supplierOrder",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/cart.mockup.ts",
        "type": "ISupplierOrder",
        "defaultValue": "{\n  name: 'Nombre Proveedor',\n  delivery_price: null,\n  delivery_time: null,\n  products: [cartItem, cartItem]\n}"
      },
      {
        "name": "supplierOrder",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/summary.mockup.ts",
        "type": "ISupplierOrder",
        "defaultValue": "{\n  name: 'Nombre Proveedor',\n  delivery_price: 10,\n  delivery_time: '2 a 3 días',\n  products: [cartItem, cartItem]\n}"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/Button.stories.ts",
        "type": "Story<ButtonComponent>",
        "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args\n})"
      },
      {
        "name": "wishlist",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/wishlist.mockup.ts",
        "type": "IWishlistItem[]",
        "defaultValue": "[wishlistItem, wishlistItem, wishlistItem]"
      },
      {
        "name": "WISHLIST_TOKEN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/modals/wishlist/wishlist.ts",
        "type": "InjectionToken<any>",
        "defaultValue": "new InjectionToken<any>('WISHLIST_TOKEN')"
      },
      {
        "name": "wishlistItem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/app/mockups/wishlist.mockup.ts",
        "type": "IWishlistItem",
        "defaultValue": "{\n  _id: '1111111',\n  name: 'Producto',\n  brand: {\n    name: 'Marca',\n  },\n  friendly_url: 'https://via.placeholder.com/100x100',\n  price: 100,\n  special_price: 80,\n  stock: 3\n}"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "CategoryBrandListType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"carousel\" | \"grid\"",
        "file": "src/app/models/category.model.ts",
        "description": "",
        "kind": 168
      },
      {
        "name": "CategoryListType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"carousel\" | \"grid\"",
        "file": "src/app/models/category.model.ts",
        "description": "",
        "kind": 168
      },
      {
        "name": "IFilterQueryValueBoolean",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "[boolean]",
        "file": "src/app/services/product.service.ts",
        "description": "",
        "kind": 167
      },
      {
        "name": "IFilterQueryValueRange",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "[number, number]",
        "file": "src/app/services/product.service.ts",
        "description": "",
        "kind": 167
      },
      {
        "name": "IFilterQueryValueToggle",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type[]",
        "file": "src/app/services/product.service.ts",
        "description": "",
        "kind": 166
      },
      {
        "name": "ProductItemType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"simple\" | \"star\" | \"discount\" | \"scotia\"",
        "file": "src/app/models/product.model.ts",
        "description": "",
        "kind": 168
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "src/app/modals/address-form/address-form.ts": [
        {
          "name": "ADDRESS_FORM_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/address-form/address-form.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('ADDRESS_FORM_TOKEN')"
        }
      ],
      "src/app/mockups/address.mockup.ts": [
        {
          "name": "addresses",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/address.mockup.ts",
          "type": "Array<IAddressItem>",
          "defaultValue": "[addressItem, addressItem, addressItem]"
        },
        {
          "name": "addressesOrder",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/address.mockup.ts",
          "type": "Array<IAddressItem>",
          "defaultValue": "[addressOrderItem, addressOrderItem2, addressOrderItem3]"
        },
        {
          "name": "addressItem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/address.mockup.ts",
          "type": "IAddressItem",
          "defaultValue": "{\n  _id: '001',\n  address: 'Av. Prueba 123',\n  cellphone: '998213123',\n  department: { name: 'Lima' },\n  district: { name: 'Surco' },\n  province: { name: 'Lima' },\n  name: 'Casa Prueba',\n  reference: 'Al lado de la casa azul.',\n  type_address: 'Casa'\n}"
        },
        {
          "name": "addressOrderItem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/address.mockup.ts",
          "type": "IAddressItem",
          "defaultValue": "{\n  _id: '001',\n  address: 'Av. Prueba 123',\n  cellphone: '998213123',\n  department: { name: 'Lima' },\n  district: { name: 'Surco' },\n  province: { name: 'Lima' },\n  name: 'Casa Prueba',\n  reference: 'Al lado de la casa azul.',\n  type_address: 'Casa',\n  checked: true,\n  delivery_price: 10\n}"
        },
        {
          "name": "addressOrderItem2",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/address.mockup.ts",
          "type": "IAddressItem",
          "defaultValue": "{\n  _id: '002',\n  address: 'Av. Prueba 123',\n  cellphone: '998213123',\n  department: { name: 'Lima' },\n  district: { name: 'Surco' },\n  province: { name: 'Lima' },\n  name: 'Casa Prueba',\n  reference: 'Al lado de la casa azul.',\n  type_address: 'Casa',\n  checked: false,\n  delivery_price: 10\n}"
        },
        {
          "name": "addressOrderItem3",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/address.mockup.ts",
          "type": "IAddressItem",
          "defaultValue": "{\n  _id: '003',\n  address: 'Av. Prueba 123',\n  cellphone: '998213123',\n  department: { name: 'Lima' },\n  district: { name: 'Surco' },\n  province: { name: 'Lima' },\n  name: 'Casa Prueba',\n  reference: 'Al lado de la casa azul.',\n  type_address: 'Casa',\n  checked: false,\n  delivery_price: 10\n}"
        }
      ],
      "src/app/modals/addresses/addresses.ts": [
        {
          "name": "ADDRESSES_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/addresses/addresses.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('ADDRESSES_TOKEN')"
        }
      ],
      "src/app/mockups/banner.mockup.ts": [
        {
          "name": "banner",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/banner.mockup.ts",
          "type": "IBanner",
          "defaultValue": "banners[0]"
        },
        {
          "name": "banners",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/banner.mockup.ts",
          "type": "IBanner[]",
          "defaultValue": "[\n  {\n    title: 'Abre una cuenta de ahorros',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/500/500',\n    friendly_url: 'https://google.com',\n  },\n  {\n    title: 'Solicita tu tarjeta Scotiabank',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/300/500',\n    friendly_url: 'https://google.com',\n  },\n  {\n    title: 'Seguro de tarjeta protegida',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/700/500',\n    friendly_url: 'https://google.com',\n  },\n]"
        }
      ],
      "src/app/static/home.static.ts": [
        {
          "name": "banners",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/static/home.static.ts",
          "type": "IBanner[]",
          "defaultValue": "[\n  {\n    title: 'Abre una cuenta de ahorros',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/500/500',\n    friendly_url: 'https://google.com',\n  },\n  {\n    title: 'Solicita tu tarjeta Scotiabank',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/300/500',\n    friendly_url: 'https://google.com',\n  },\n  {\n    title: 'Seguro de tarjeta protegida',\n    description:\n      'Dolore excepteur nulla quis id non proident incididunt nisi cupidatat. Fugiat reprehenderit do amet voluptate.',\n    image_cover: 'https://placekitten.com/700/500',\n    friendly_url: 'https://google.com',\n  },\n]"
        },
        {
          "name": "payments",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/static/home.static.ts",
          "type": "IPaymentCard[]",
          "defaultValue": "[\n  {\n    title: 'Con Scotia Puntos',\n    description:\n      'Irure officia culpa et sunt qui non ipsum ex reprehenderit fugiat et ullamco Lorem amet. <strong>Proident</strong> excepteur elit ipsum proident ipsum aute anim nulla tempor. Non non cillum aute fugiat duis esse ut aliquip reprehenderit laboris laborum enim elit ad.',\n  },\n  {\n    title: 'Con Scotia Puntos + Tarjeta Scotiabank',\n    description:\n      'Irure officia culpa et sunt qui non <strong>ipsum</strong> ex reprehenderit fugiat et ullamco Lorem amet. Proident excepteur elit ipsum proident ipsum aute anim nulla tempor. Non non cillum aute fugiat duis esse ut aliquip reprehenderit laboris laborum enim elit ad.',\n  },\n  {\n    title: 'Tarjeta Scotiabank',\n    description:\n      '<strong>Irure</strong> officia culpa et sunt qui non ipsum ex reprehenderit fugiat et ullamco Lorem amet. Proident excepteur elit ipsum proident ipsum aute anim nulla tempor. Non non cillum aute fugiat duis esse ut aliquip reprehenderit laboris laborum enim elit ad.',\n  },\n]"
        }
      ],
      "src/stories/Footer.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/Footer.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Shared/Footer', module).addDecorator(\n  moduleMetadata({\n    imports: [MicroModule, IconsModule]\n  })\n)"
        }
      ],
      "src/stories/Header.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/Header.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Shared/Header', module).addDecorator(\n  moduleMetadata({\n    imports: [SharedModule, MicroModule, ModalModule.forRoot(), BrowserAnimationsModule, RouterTestingModule]\n  })\n)"
        }
      ],
      "src/stories/banner.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/banner.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Shared/Banner', module).addDecorator(\n  moduleMetadata({\n    imports: [SharedModule],\n  })\n)"
        }
      ],
      "src/stories/brand.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/brand.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Brand', module).addDecorator(\n  moduleMetadata({\n    imports: [CategoryModule],\n  })\n)"
        }
      ],
      "src/stories/category.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/category.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Category', module).addDecorator(\n  moduleMetadata({\n    imports: [CategoryModule, RouterTestingModule],\n    providers: [\n      { provide: APP_BASE_HREF, useValue: '/' },\n      {\n        provide: ActivatedRoute,\n        useValue: {\n          snapshot: {\n            data: {\n              resolved: mockResolver,\n            },\n          },\n        },\n      },\n    ],\n  })\n)"
        }
      ],
      "src/stories/checkout.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/checkout.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Modals/Checkout', module).addDecorator(\n  moduleMetadata({\n    imports: [ModalsModule, ModalModule.forRoot()],\n    providers: [\n      MDBModalRef,\n      { provide: CART_TOKEN, useValue: CartComponent },\n      { provide: CHECKOUT_ADDRESS_TOKEN, useValue: CheckoutAddressComponent },\n      { provide: CHECKOUT_SUMMARY_TOKEN, useValue: CheckoutSummaryComponent },\n      { provide: CHECKOUT_RECEIPT_TOKEN, useValue: CheckoutReceiptComponent },\n      { provide: CHECKOUT_IZIPAY_TOKEN, useValue: CheckoutIzipayComponent },\n      { provide: CHECKOUT_ADDRESS_TOKEN, useValue: CheckoutSuccessComponent },\n      { provide: CHECKOUT_ERROR_TOKEN, useValue: CheckoutErrorComponent },\n    ]\n  })\n)"
        }
      ],
      "src/stories/home.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/home.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Home', module).addDecorator(\n  moduleMetadata({\n    imports: [RouterTestingModule, HomeModule],\n    providers: [\n      { provide: APP_BASE_HREF, useValue: '/' },\n      {\n        provide: ActivatedRoute,\n        useValue: {\n          snapshot: {\n            data: {\n              resolved: mockResolver,\n            },\n          },\n        },\n      },\n    ],\n  })\n)"
        }
      ],
      "src/stories/login.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/login.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Modals/Login-Register', module).addDecorator(\n  moduleMetadata({\n    imports: [ModalsModule, ModalModule.forRoot()],\n    providers: [\n      MDBModalRef,\n      { provide: LOGIN_TOKEN, useValue: LoginComponent },\n      { provide: REGISTER_TOKEN, useValue: RegisterComponent },\n      { provide: RECOVER_PASSWORD_TOKEN, useValue: RecoverPasswordComponent },\n    ]\n  })\n)"
        }
      ],
      "src/stories/product.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/product.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Product', module).addDecorator(\n  moduleMetadata({\n    imports: [SharedModule],\n  })\n)"
        }
      ],
      "src/stories/profile.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/profile.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Modals/User', module).addDecorator(\n  moduleMetadata({\n    imports: [ModalsModule, ModalModule.forRoot()],\n    providers: [\n      MDBModalRef,\n      { provide: PROFILE_TOKEN, useValue: ProfileComponent },\n      { provide: MY_DATA_TOKEN, useValue: MyDataComponent },\n      { provide: ADDRESSES_TOKEN, useValue: AddressesComponent },\n      { provide: ADDRESS_FORM_TOKEN, useValue: AddressFormComponent },\n      { provide: ORDERS_TOKEN, useValue: OrdersComponent },\n      { provide: ORDER_DETAIL_TOKEN, useValue: OrderDetailComponent },\n    ],\n  })\n)"
        }
      ],
      "src/stories/wishlist.stories.ts": [
        {
          "name": "card",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/wishlist.stories.ts",
          "type": "",
          "defaultValue": "storiesOf('Modals/Wishlist', module).addDecorator(\n  moduleMetadata({\n    imports: [ModalsModule, ModalModule.forRoot()],\n    providers: [MDBModalRef]\n  })\n)"
        }
      ],
      "src/app/mockups/cart.mockup.ts": [
        {
          "name": "cart",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/cart.mockup.ts",
          "type": "ISupplierOrder[]",
          "defaultValue": "[supplierOrder, supplierOrder, supplierOrder]"
        },
        {
          "name": "cartBE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/cart.mockup.ts",
          "type": "ICart",
          "defaultValue": "cartFull"
        },
        {
          "name": "cartFull",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/cart.mockup.ts",
          "type": "ICart",
          "defaultValue": "{\n  infoProducts: [cartItem, cartItem, cartItem],\n  subtotal: 8000\n}"
        },
        {
          "name": "cartItem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/cart.mockup.ts",
          "type": "ICartItem",
          "defaultValue": "{\n  _id: '1111111',\n  id_product: '22222',\n  image_product: 'https://via.placeholder.com/100x100',\n  name_product: 'Producto',\n  price: 10,\n  quantity: 2,\n  total_price: 20,\n  info_product: {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca',\n    image_cover: 'http://placekitten.com/400/400',\n    price: 1600,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n}"
        },
        {
          "name": "supplierOrder",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/cart.mockup.ts",
          "type": "ISupplierOrder",
          "defaultValue": "{\n  name: 'Nombre Proveedor',\n  delivery_price: null,\n  delivery_time: null,\n  products: [cartItem, cartItem]\n}"
        }
      ],
      "src/app/modals/cart/cart.ts": [
        {
          "name": "CART_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/cart/cart.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('CART_TOKEN')"
        }
      ],
      "src/app/mockups/summary.mockup.ts": [
        {
          "name": "cartFull",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/summary.mockup.ts",
          "type": "ICart",
          "defaultValue": "{\n  infoProducts: [cartItem, cartItem, cartItem],\n  subtotal: 8000\n}"
        },
        {
          "name": "cartItem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/summary.mockup.ts",
          "type": "ICartItem",
          "defaultValue": "{\n  _id: '1111111',\n  id_product: '22222',\n  image_product: 'https://via.placeholder.com/100x100',\n  name_product: 'Producto',\n  price: 10,\n  quantity: 2,\n  total_price: 20,\n  info_product: {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca',\n    image_cover: 'http://placekitten.com/400/400',\n    price: 1600,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n}"
        },
        {
          "name": "summary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/summary.mockup.ts",
          "type": "ISupplierOrder[]",
          "defaultValue": "[supplierOrder, supplierOrder, supplierOrder]"
        },
        {
          "name": "summaryBE",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/summary.mockup.ts",
          "type": "ICart",
          "defaultValue": "cartFull"
        },
        {
          "name": "supplierOrder",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/summary.mockup.ts",
          "type": "ISupplierOrder",
          "defaultValue": "{\n  name: 'Nombre Proveedor',\n  delivery_price: 10,\n  delivery_time: '2 a 3 días',\n  products: [cartItem, cartItem]\n}"
        }
      ],
      "src/app/mockups/category.mockup.ts": [
        {
          "name": "categories",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/category.mockup.ts",
          "type": "[]",
          "defaultValue": "[category, category, category, category, category]"
        },
        {
          "name": "category",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/category.mockup.ts",
          "type": "ICategory",
          "defaultValue": "{\n  name: 'Hogar.',\n  subcategoryList: [\n    {\n      name: 'Refrigeracion',\n      subcategoryList: [],\n    },\n    {\n      name: 'Lavado',\n      subcategoryList: [],\n    },\n    {\n      name: 'Cocina',\n      subcategoryList: [],\n    },\n    {\n      name: 'Electrodomesticos',\n      subcategoryList: [],\n    },\n  ],\n}"
        }
      ],
      "src/app/mockups/header.mockup.ts": [
        {
          "name": "category",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/header.mockup.ts",
          "type": "ICategory",
          "defaultValue": "{\n  name: 'Categoria',\n  subcategoryList: [subCategory,subCategory,subCategory,subCategory]\n}"
        },
        {
          "name": "filter",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/header.mockup.ts",
          "type": "IFilter",
          "defaultValue": "{\n  filter: '000001',\n  name: 'ABC'\n}"
        },
        {
          "name": "navBar",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/header.mockup.ts",
          "type": "INavBar",
          "defaultValue": "{\n  navBarList: [navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem, navBarItem]\n}"
        },
        {
          "name": "navBarItem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/header.mockup.ts",
          "type": "INavBarItem",
          "defaultValue": "{\n  name: 'Grupo de Categoria',\n  categoryList: [filter,filter,filter,filter,filter,filter,filter,filter,filter]\n}"
        },
        {
          "name": "subCategory",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/header.mockup.ts",
          "type": "ICategory",
          "defaultValue": "{\n  name: 'Subcategoria',\n  subcategoryList: []\n}"
        }
      ],
      "src/app/mockups/category-group.mockup.ts": [
        {
          "name": "categoryGroup",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/category-group.mockup.ts",
          "type": "",
          "defaultValue": "categoryGroups[0]"
        },
        {
          "name": "categoryGroups",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/category-group.mockup.ts",
          "type": "ICategoryGroup[]",
          "defaultValue": "[\n  {\n    name: 'Hogar',\n    categoryList: [],\n  },\n  {\n    name: 'Electronica',\n    categoryList: [],\n  },\n  {\n    name: 'Ropa',\n    categoryList: [],\n  },\n  {\n    name: 'Restaurantes',\n    categoryList: [],\n  },\n  {\n    name: 'Viajes',\n    categoryList: [],\n  },\n  {\n    name: 'Werkwerk',\n    categoryList: [],\n  },\n]"
        },
        {
          "name": "mockResolver",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/category-group.mockup.ts",
          "type": "ICategoryPage",
          "defaultValue": "{\n  _brands: [],\n  category: {\n    _id: '',\n    brands: [],\n    filters: [],\n    friendly_url: '',\n    image_banner: '',\n    image_link: '',\n    name: '',\n    url_attachment: '',\n  },\n  isBrandPage: false,\n}"
        }
      ],
      "src/app/modals/checkout-address/checkout-address.ts": [
        {
          "name": "CHECKOUT_ADDRESS_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/checkout-address/checkout-address.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('CHECKOUT_ADDRESS_TOKEN')"
        }
      ],
      "src/app/modals/checkout-error/checkout-error.ts": [
        {
          "name": "CHECKOUT_ERROR_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/checkout-error/checkout-error.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('CHECKOUT_ERROR_TOKEN')"
        }
      ],
      "src/app/modals/checkout-izipay/checkout-izipay.ts": [
        {
          "name": "CHECKOUT_IZIPAY_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/checkout-izipay/checkout-izipay.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('CHECKOUT_IZIPAY_TOKEN')"
        }
      ],
      "src/app/modals/checkout-receipt/checkout-receipt.ts": [
        {
          "name": "CHECKOUT_RECEIPT_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/checkout-receipt/checkout-receipt.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('CHECKOUT_RECEIPT_TOKEN')"
        }
      ],
      "src/app/modals/checkout-success/checkout-success.ts": [
        {
          "name": "CHECKOUT_SUCCESS_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/checkout-success/checkout-success.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('CHECKOUT_SUCCESS_TOKEN')"
        }
      ],
      "src/app/modals/checkout-summary/checkout-summary.ts": [
        {
          "name": "CHECKOUT_SUMMARY_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/checkout-summary/checkout-summary.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('CHECKOUT_SUMMARY_TOKEN')"
        }
      ],
      "src/test.ts": [
        {
          "name": "context",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "type": "",
          "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
        },
        {
          "name": "require",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/test.ts",
          "type": "literal type"
        }
      ],
      "src/app/core/category/category-brand-list/category-brand-list.component.ts": [
        {
          "name": "CUSTOM_SWIPER_CONFIG",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/category/category-brand-list/category-brand-list.component.ts",
          "type": "SwiperConfigInterface",
          "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 2,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: true,\n  pagination: true,\n  spaceBetween: 0,\n  breakpoints: {\n    // when window width is >= $px\n    768: {\n      //md\n      slidesPerView: 2,\n    },\n    992: {\n      //lg\n      slidesPerView: 3,\n    },\n    1200: {\n      //xl\n      slidesPerView: 4,\n    },\n    1600: {\n      //xxl\n      slidesPerView: 5,\n    },\n  },\n}"
        }
      ],
      "src/app/core/category/category-list/category-list.component.ts": [
        {
          "name": "CUSTOM_SWIPER_CONFIG",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/category/category-list/category-list.component.ts",
          "type": "SwiperConfigInterface",
          "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 2,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: false,\n  pagination: false,\n  spaceBetween: 0,\n}"
        }
      ],
      "src/app/core/category/category.module.ts": [
        {
          "name": "DEFAULT_SWIPER_CONFIG",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/category/category.module.ts",
          "type": "SwiperConfigInterface",
          "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 2,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: false,\n  pagination: false,\n  spaceBetween: 0,\n}"
        }
      ],
      "src/app/core/home/home.module.ts": [
        {
          "name": "DEFAULT_SWIPER_CONFIG",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/home/home.module.ts",
          "type": "SwiperConfigInterface",
          "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 1,\n  initialSlide: 1, //  not hardcode this variable (it's static content but it may change in the future)\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: true,\n  pagination: false,\n  spaceBetween: 0,\n}"
        }
      ],
      "src/app/core/search/search.module.ts": [
        {
          "name": "DEFAULT_SWIPER_CONFIG",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/core/search/search.module.ts",
          "type": "SwiperConfigInterface",
          "defaultValue": "{\n  direction: 'horizontal',\n  slidesPerView: 1,\n  a11y: false,\n  keyboard: false,\n  mousewheel: false,\n  scrollbar: false,\n  navigation: true,\n  pagination: false,\n  spaceBetween: 0,\n}"
        }
      ],
      "src/environments/environment.prod.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.prod.ts",
          "type": "object",
          "defaultValue": "{\n  production: true,\n  URL_BACKEND: ''\n}"
        }
      ],
      "src/environments/environment.test.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.test.ts",
          "type": "object",
          "defaultValue": "{\n  production: true,\n  URL_BACKEND: ''\n}"
        }
      ],
      "src/environments/environment.trial.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.trial.ts",
          "type": "object",
          "defaultValue": "{\n  production: true,\n  URL_BACKEND: ''\n}"
        }
      ],
      "src/environments/environment.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.ts",
          "type": "object",
          "defaultValue": "{\n  production: false,\n  URL_BACKEND: 'http://10.147.18.26:3000/',\n  JWT_TOKEN:\n    'ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnJaWGtpT2lJNU56Z3dZVEk1TW1FMU9HVXlNMlJoWlRJME1qZzBOakUwTlRObFpqa3habUppTVROaU5qZG1OekV5WW1ZeFpXTTNabU00TURjMVl6STFNakJoTUdRM1pEVmxZVE0zT0RBMk1XTTFaR0l6WkRBM056YzFOalptWWpBMlpETXpZemNpTENKemVYTjBaVzFmWVhCcElqb2ljMk52ZEdsaFltRnVhMTltWlhKcFlTSXNJbWxoZENJNk1UWXdNREV3TnpVMU1IMC5DcTZqbFZsMWw1SE0tSW1VTXZDX2tFQklMZXRxMGlIRUxEdVhreW9IMHBqV0I3V09uZEY3TG5hc0hjVEJaV013LThXUjAxUVUwM2MtWUlEdjVjcHctdw==',\n}"
        }
      ],
      "src/environments/environment.uat.ts": [
        {
          "name": "environment",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/environments/environment.uat.ts",
          "type": "object",
          "defaultValue": "{\n  production: true,\n  URL_BACKEND: ''\n}"
        }
      ],
      "src/stories/Button.stories.ts": [
        {
          "name": "Header",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/Button.stories.ts",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/Button.stories.ts",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/Button.stories.ts",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Small",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/Button.stories.ts",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/Button.stories.ts",
          "type": "Story<ButtonComponent>",
          "defaultValue": "(args: ButtonComponent) => ({\n  component: ButtonComponent,\n  props: args\n})"
        }
      ],
      "src/app/modals/login/login.ts": [
        {
          "name": "LOGIN_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/login/login.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('LOGIN_TOKEN')"
        }
      ],
      "src/app/mockups/home.mockup.ts": [
        {
          "name": "mockResolver",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/home.mockup.ts",
          "type": "object",
          "defaultValue": "{\n  categories: categoryGroups,\n  productsFeat: products,\n}"
        }
      ],
      "src/app/modals/my-data/my-data.ts": [
        {
          "name": "MY_DATA_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/my-data/my-data.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('MY_DATA_TOKEN')"
        }
      ],
      "src/app/modals/order-detail/order-detail.ts": [
        {
          "name": "ORDER_DETAIL_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/order-detail/order-detail.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('ORDER_DETAIL_TOKEN')"
        }
      ],
      "src/app/mockups/order.mockup.ts": [
        {
          "name": "orderDetailItem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/order.mockup.ts",
          "type": "IOrderDetailItem",
          "defaultValue": "{\n  amount_subtotal: 25,\n  amount_total: 30,\n  delivery: 5,\n  discount_price: 0,\n  product_price: 10,\n  quantity: 3,\n  range_day: '1-1',\n  supplier_delivery: { name: 'XXXXXXXX' },\n  method_id: {},\n  product_id: 'prueba',\n  product_name: 'Producto Prueba',\n  friendly_url: 'producto_prueba',\n  brand: {\n    name: 'Test'\n  }\n}"
        },
        {
          "name": "orderItem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/order.mockup.ts",
          "type": "IOrderItem",
          "defaultValue": "{\n  code: \"#########\",\n  amount_discount: 0,\n  amount_subtotal: 90,\n  amount_total: 90,\n  amount_delivery: 15,\n  type_payment: 'IziPay',\n  delivery_address: 'Av. Prueba 123',\n  delivery_reference: 'Al lado de la casa azul.',\n  create_date: new Date(),\n  state: 'Entregado',\n  detail: [orderDetailItem, orderDetailItem, orderDetailItem]\n}"
        },
        {
          "name": "orders",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/order.mockup.ts",
          "type": "Array<IOrderItem>",
          "defaultValue": "[orderItem, orderItem, orderItem]"
        }
      ],
      "src/app/modals/orders/orders.ts": [
        {
          "name": "ORDERS_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/orders/orders.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('ORDERS_TOKEN')"
        }
      ],
      "src/app/mockups/product.mockup.ts": [
        {
          "name": "product",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/product.mockup.ts",
          "type": "",
          "defaultValue": "products[0]"
        },
        {
          "name": "products",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/product.mockup.ts",
          "type": "IProductItem[]",
          "defaultValue": "[\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca',\n    image_cover: 'http://placekitten.com/400/400',\n    price: 1600,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca2',\n    image_cover: 'http://placekitten.com/600/400',\n    price: 3300,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca3',\n    image_cover: 'http://placekitten.com/100/400',\n    price: 10,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca4',\n    image_cover: 'http://placekitten.com/800/300',\n    price: 100,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n  {\n    stock: 1,\n    name: 'Tempor consequat culpa elit qui consectetur.',\n    brand: 'Marca5',\n    image_cover: 'http://placekitten.com/700/100',\n    price: 600,\n    special_price: 1000,\n    friendly_url: 'http://google.com',\n  },\n]"
        }
      ],
      "src/app/modals/profile/profile.ts": [
        {
          "name": "PROFILE_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/profile/profile.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('PROFILE_TOKEN')"
        }
      ],
      "src/app/modals/recover-password/recover-password.ts": [
        {
          "name": "RECOVER_PASSWORD_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/recover-password/recover-password.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('RECOVER_PASSWORD_TOKEN')"
        }
      ],
      "src/app/modals/register/register.ts": [
        {
          "name": "REGISTER_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/register/register.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('REGISTER_TOKEN')"
        }
      ],
      "src/app/mockups/wishlist.mockup.ts": [
        {
          "name": "wishlist",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/wishlist.mockup.ts",
          "type": "IWishlistItem[]",
          "defaultValue": "[wishlistItem, wishlistItem, wishlistItem]"
        },
        {
          "name": "wishlistItem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/mockups/wishlist.mockup.ts",
          "type": "IWishlistItem",
          "defaultValue": "{\n  _id: '1111111',\n  name: 'Producto',\n  brand: {\n    name: 'Marca',\n  },\n  friendly_url: 'https://via.placeholder.com/100x100',\n  price: 100,\n  special_price: 80,\n  stock: 3\n}"
        }
      ],
      "src/app/modals/wishlist/wishlist.ts": [
        {
          "name": "WISHLIST_TOKEN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/app/modals/wishlist/wishlist.ts",
          "type": "InjectionToken<any>",
          "defaultValue": "new InjectionToken<any>('WISHLIST_TOKEN')"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "src/app/models/category.model.ts": [
        {
          "name": "CategoryBrandListType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"carousel\" | \"grid\"",
          "file": "src/app/models/category.model.ts",
          "description": "",
          "kind": 168
        },
        {
          "name": "CategoryListType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"carousel\" | \"grid\"",
          "file": "src/app/models/category.model.ts",
          "description": "",
          "kind": 168
        }
      ],
      "src/app/services/product.service.ts": [
        {
          "name": "IFilterQueryValueBoolean",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "[boolean]",
          "file": "src/app/services/product.service.ts",
          "description": "",
          "kind": 167
        },
        {
          "name": "IFilterQueryValueRange",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "[number, number]",
          "file": "src/app/services/product.service.ts",
          "description": "",
          "kind": 167
        },
        {
          "name": "IFilterQueryValueToggle",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type[]",
          "file": "src/app/services/product.service.ts",
          "description": "",
          "kind": 166
        }
      ],
      "src/app/models/product.model.ts": [
        {
          "name": "ProductItemType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"simple\" | \"star\" | \"discount\" | \"scotia\"",
          "file": "src/app/models/product.model.ts",
          "description": "",
          "kind": 168
        }
      ]
    }
  },
  "routes": {
    "name": "<root>",
    "kind": "module",
    "className": "AppModule",
    "children": [
      {
        "name": "routes",
        "filename": "src/app/app-routing.module.ts",
        "module": "AppRoutingModule",
        "children": [
          {
            "path": "",
            "redirectTo": "main",
            "pathMatch": "full"
          },
          {
            "path": "main",
            "loadChildren": "./core/core.module#CoreModule",
            "data": {
              "preload": false
            }
          },
          {
            "path": "info",
            "loadChildren": "./static-pages/static-pages.module#StaticPagesModule",
            "data": {
              "preload": false
            }
          }
        ],
        "kind": "module"
      },
      {
        "name": "coreRoutes",
        "filename": "src/app/core/core.module.ts",
        "module": "CoreModule",
        "kind": "module"
      },
      {
        "name": "homeRoutes",
        "filename": "src/app/core/home/home.module.ts",
        "module": "HomeModule",
        "children": [
          {
            "path": "home",
            "resolve": {
              "resolved": "HomeResolver"
            },
            "component": "HomeComponent"
          }
        ],
        "kind": "module"
      },
      {
        "name": "routes",
        "filename": "src/app/core/category/category.module.ts",
        "module": "CategoryModule",
        "children": [
          {
            "path": "category/:friendlyUrl",
            "resolve": {
              "resolved": "CategoryResolver"
            },
            "runGuardsAndResolvers": "always",
            "component": "CategoryComponent"
          },
          {
            "path": "category/:friendlyUrl/brand/:brandFriendlyUrl",
            "resolve": {
              "resolved": "BrandResolver"
            },
            "component": "CategoryComponent"
          }
        ],
        "kind": "module"
      },
      {
        "name": "searchRoutes",
        "filename": "src/app/core/search/search.module.ts",
        "module": "SearchModule",
        "children": [
          {
            "path": "search",
            "component": "SearchComponent"
          }
        ],
        "kind": "module"
      },
      {
        "name": "staticPagesRoutes",
        "filename": "src/app/static-pages/static-pages.module.ts",
        "module": "StaticPagesModule",
        "children": [
          {
            "path": "",
            "redirectTo": "contact-us",
            "pathMatch": "full"
          },
          {
            "path": "complaints-book",
            "component": "ComplaintsBookComponent",
            "resolve": {
              "resolved": "ComplaintsBookResolver"
            }
          },
          {
            "path": "contact-us",
            "component": "ContactUsComponent",
            "resolve": {
              "resolved": "ContactUsResolver"
            }
          },
          {
            "path": "not-found",
            "component": "NotFoundComponent"
          },
          {
            "path": "terms-and-conditions",
            "component": "TermsAndConditionsComponent",
            "resolve": {
              "resolved": "TermsAndConditionsResolver"
            }
          },
          {
            "path": "faq",
            "component": "FaqComponent",
            "resolve": {
              "resolved": "FAQResolver"
            }
          },
          {
            "path": "how-to-buy",
            "component": "HowToBuyComponent",
            "resolve": {
              "resolved": "HowToBuy"
            }
          },
          {
            "path": "delivery-service",
            "component": "DeliveryServiceComponent",
            "resolve": {
              "resolved": "DeliveryServiceResolver"
            }
          },
          {
            "path": "refund",
            "component": "RefundComponent",
            "resolve": {
              "resolved": "RefundResolver"
            }
          },
          {
            "path": "customer-service",
            "component": "CustomerServiceComponent",
            "resolve": {
              "resolved": "CustomerServiceResolver"
            }
          },
          {
            "path": "new-card",
            "component": "NewCardComponent",
            "resolve": {
              "resolved": "NewCardResolver"
            }
          },
          {
            "path": "bio-security",
            "component": "BioSecurityComponent",
            "resolve": {
              "resolved": "BioSecurityResolver"
            }
          }
        ],
        "kind": "module"
      }
    ]
  },
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "e2e/src/app.po.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AppPage",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/app.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AppComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/constants.ts",
        "type": "class",
        "linktype": "classe",
        "name": "Constants",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category-brand-card/category-brand-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CategoryBrandCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category-brand-list/category-brand-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CategoryBrandListComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category-brand-list/category-brand-list.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CUSTOM_SWIPER_CONFIG",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category-card/category-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CategoryCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category-hero/category-hero.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CategoryHeroComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category-list/category-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CategoryListComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category-list/category-list.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CUSTOM_SWIPER_CONFIG",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CategoryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/core/category/category.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DEFAULT_SWIPER_CONFIG",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/home/home-banner-list/home-banner-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HomeBannerListComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/home/home-hero/home-hero.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HomeHeroComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/home/home-payment-card/home-payment-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HomePaymentCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/home/home-payment-list/home-payment-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HomePaymentListComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/core/home/home.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HomeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/core/home/home.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DEFAULT_SWIPER_CONFIG",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/core/product-detail/product-detail.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProductDetailComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/core/search/search.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SearchComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/core/search/search.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DEFAULT_SWIPER_CONFIG",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/directives/noespecial-characters.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "NoespecialCharactersDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/directives/only-number.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "OnlyNumberDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/messages.ts",
        "type": "class",
        "linktype": "classe",
        "name": "Messages",
        "coveragePercent": 0,
        "coverageCount": "0/45",
        "status": "low"
      },
      {
        "filePath": "src/app/micro/button/button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "src/app/micro/radio-button/radio-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RadioButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/micro/section-header/section-header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SectionHeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/address.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "addresses",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/address.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "addressesOrder",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/address.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "addressItem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/address.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "addressOrderItem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/address.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "addressOrderItem2",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/address.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "addressOrderItem3",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/banner.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "banner",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/banner.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "banners",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/cart.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cart",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/cart.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cartBE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/cart.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cartFull",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/cart.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cartItem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/cart.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "supplierOrder",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/category-group.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "categoryGroup",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/category-group.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "categoryGroups",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/category-group.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "mockResolver",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/category.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "categories",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/category.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "category",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/header.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "category",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/header.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "filter",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/header.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "navBar",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/header.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "navBarItem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/header.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "subCategory",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/home.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "mockResolver",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/order.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "orderDetailItem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/order.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "orderItem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/order.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "orders",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/product.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "product",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/product.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "products",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/summary.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cartFull",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/summary.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cartItem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/summary.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "summary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/summary.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "summaryBE",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/summary.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "supplierOrder",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/wishlist.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "wishlist",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/mockups/wishlist.mockup.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "wishlistItem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/address-form/address-form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AddressFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/address-form/address-form.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ADDRESS_FORM_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/addresses/address-item/address-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AddressItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/addresses/addresses.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "AddressesComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/addresses/addresses.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ADDRESSES_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/cart/cart-modal-item/cart-modal-item-product/cart-modal-item-product.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CartModalItemProductComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/cart/cart-modal-item/cart-modal-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CartModalItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/cart/cart.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CartComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/cart/cart.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CART_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-address/checkout-address-item/checkout-address-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckoutAddressItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-address/checkout-address.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckoutAddressComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-address/checkout-address.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECKOUT_ADDRESS_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-error/checkout-error.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckoutErrorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-error/checkout-error.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECKOUT_ERROR_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-izipay/checkout-izipay.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckoutIzipayComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-izipay/checkout-izipay.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECKOUT_IZIPAY_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-receipt/checkout-receipt.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckoutReceiptComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-receipt/checkout-receipt.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECKOUT_RECEIPT_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-success/checkout-success.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckoutSuccessComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-success/checkout-success.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECKOUT_SUCCESS_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-summary/checkout-summary.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CheckoutSummaryComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/checkout-summary/checkout-summary.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CHECKOUT_SUMMARY_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/login/login.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "LoginComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/login/login.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LOGIN_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/my-data/my-data.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MyDataComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/my-data/my-data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MY_DATA_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/order-detail/order-detail.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "OrderDetailComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/order-detail/order-detail.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ORDER_DETAIL_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/orders/order-item/order-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "OrderItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/orders/orders.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "OrdersComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/orders/orders.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ORDERS_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/profile/profile.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProfileComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/profile/profile.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PROFILE_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/recover-password/recover-password.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RecoverPasswordComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/recover-password/recover-password.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "RECOVER_PASSWORD_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/register/register.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RegisterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/register/register.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "REGISTER_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/wishlist/wishlist-item/wishlist-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "WishlistItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/wishlist/wishlist.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "WishlistComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/modals/wishlist/wishlist.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WISHLIST_TOKEN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/models/address.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IAddressItem",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/models/address.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IAddressLdV",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/models/banner.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBanner",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/models/brand.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBrand",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/models/cart-item.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICartItem",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/models/cart.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICart",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/models/category-group.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICategoryGroup",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/models/category.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICategory",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/models/filter.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IFilter",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/models/form.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IForm",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/models/form.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IFormFields",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/models/home.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IPaymentCard",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/models/navbar.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "INavBar",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/models/navbar.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "INavBarItem",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/models/order-item.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IOrderDetailItem",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "src/app/models/order-item.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IOrderItem",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "src/app/models/product.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IProductDetail",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/models/product.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IProductItem",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/models/static-pages.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IAccordion",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/models/static-pages.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IComplexCard",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/models/static-pages.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IHTMLText",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/models/static-pages.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ISimpleCard",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/models/supplier-order.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ISupplierOrder",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/models/wishlist.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IWishlistItem",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/brand.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBrandPage",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/brand.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "BrandResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/category.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICategoryPage",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/category.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "CategoryResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/home.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IHomePage",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/home.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "HomeResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/bio-security.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBioSecurityResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/bio-security.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "BioSecurityResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/complaints-book.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IComplaintsBookResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/complaints-book.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "ComplaintsBookResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/contact-us.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IContactUsResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/contact-us.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "ContactUsResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/customer-service.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICustomerServiceResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/customer-service.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "CustomerServiceResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/delivery-service.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IDeliveryServiceResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/delivery-service.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "DeliveryServiceResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/faq.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IFAQResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/faq.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "FAQResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/how-to-buy.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IHowToBuyResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/how-to-buy.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "HowToBuy",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/new-card.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "INewCardResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/new-card.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "NewCardResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/refund.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IRefundResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/refund.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "RefundResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/terms-and-conditions.resolver.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ITermsAndConditionsResolver",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/resolvers/static-pages/terms-and-conditions.resolver.ts",
        "type": "guard",
        "linktype": "guard",
        "name": "TermsAndConditionsResolver",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/services/api.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ApiService",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/services/banner.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "BannerService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/services/category-group.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CategoryGroupService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/services/category.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "CategoryService",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/services/category.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBrandBackend",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/services/category.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IBrandListBackend",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/services/category.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICategoryBackend",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/services/category.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICategoryElementBackend",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/services/category.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ICategoryListBackend",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/services/category.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IFilterBackend",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/services/interceptor.service.ts",
        "type": "interceptor",
        "linktype": "interceptor",
        "name": "InterceptorService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/services/internal/static-pages-transform.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "StaticPagesTransformService",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "src/app/services/product.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ProductService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/services/product.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IFilterQueryBackend",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/services/product.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IProductBackend",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      },
      {
        "filePath": "src/app/services/resize.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ResizeService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/services/static-page.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "StaticPageService",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/services/static-page.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "IStaticPageBackend",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/services/user-access.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "UserAccessService",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/banner/banner.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BannerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/footer/footer.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FooterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/form/form.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/global-loading/global-loading.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "GlobalLoadingComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/header/header.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HeaderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/header/nav-bar-mobile/nav-bar-mobile.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavBarMobileComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/header/nav-bar/nav-bar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NavBarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/inner-banner/inner-banner.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "InnerBannerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/main-carousel/main-carousel.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "MainCarouselComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/page-hero/page-hero.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "PageHeroComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/product-item/product-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProductItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/product-list-menu/product-list-menu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProductListMenuComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/product-list-nav/product-list-nav.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProductListNavComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/product-list/product-list.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ProductListComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/simple-card/simple-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SimpleCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "src/app/shared/single-accordion/single-accordion.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "SingleAccordionComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/bio-security/bio-security.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "BioSecurityComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/complaints-book/complaints-book.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ComplaintsBookComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/contact-us/contact-us.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ContactUsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/customer-service/customer-service.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CustomerServiceComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/delivery-service/delivery-service.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "DeliveryServiceComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/faq/faq.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "FaqComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/how-to-buy/how-to-buy.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "HowToBuyComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/new-card/new-card.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NewCardComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/not-found/not-found.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "NotFoundComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/refund/refund.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "RefundComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "src/app/static-pages/terms-and-conditions/terms-and-conditions.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "TermsAndConditionsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "src/app/static/home.static.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "banners",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/app/static/home.static.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "payments",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.prod.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.trial.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/environments/environment.uat.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "environment",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Header",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Small",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/Button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/Footer.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/Header.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/banner.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/brand.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/category.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/checkout.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/home.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/login.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/product.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/profile.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/wishlist.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "card",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "context",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/test.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "require",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
